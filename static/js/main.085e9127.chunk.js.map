{"version":3,"sources":["resources/Train.png","resources/question.svg","constants/MyTheme.js","constants/api_route.js","reducers/BackDrop.js","reducers/Dialog.js","reducers/Drawer.js","reducers/ListRol.js","reducers/Login.js","reducers/Navbar.js","reducers/Register.js","reducers/Request.js","reducers/Snack.js","reducers/Train.js","store.js","_actions/Dialog.js","_actions/Drawer.js","components/DrawerAdmin.js","router/Auth.js","components/NavAdmin.js","views/Admin/Admin.js","views/Forbidden.js","_actions/actions_backdrop.js","components/BackDrop.js","_actions/actions_snack.js","components/_Snacks/SnackAlert.js","_actions/Register.js","components/_Form/TextEmail.js","scripts/confirmEmail.js","components/_Form/TextPassword.js","scripts/testPassword.js","_actions/Login.js","components/StepLogin.js","views/Log_in.js","_actions/Train.js","components/Train.js","components/CardServices.js","components/DateTime.js","components/ListCities.js","components/ListTrans.js","components/StepService.js","components/DialogService.js","components/Panel.js","_actions/Request.js","components/DialogNotification.js","components/DialogInformation.js","components/EditService.js","_actions/actions_navbar.js","components/MenuNav.js","components/NavUser.js","views/Services.js","components/ListRol.js","_actions/ListRol.js","views/Sign_up.js","router/ProtectedRoute.js","components/DrawerUser.js","components/DialogRequest.js","components/ListInfo.js","components/SnackUser.js","views/User.js","router/routes.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","MyTheme","createMuiTheme","palette","primary","main","contrastText","secondary","bprimary","backgroundColor","color","bicons","bsecondary","API_ROUTE","defaultState","open","reducer","state","type","payload","checked","cards","openN","openES","openI","id_service","title","capacity","places","cost","cities","name","lat","lng","option","origin","destination","transport","service_created","service_updated","visibility","dateStart","Date","dateEnd","parseInt","openA","setOpen","alternatives","users","email","password","token","rol","id_user","isAuth","console","log","anchorEl","nombre","validate_nombre","unique","validate_email","validate_password","confirm","validate_confirm","validate_rol","nit","authSuccess","registerSuccess","message","id_owner","requests","body","opent","combineReducers","BackDrop","Dialog","Drawer","ListRol","Login","Navbar","Register","Snack","Request","Train","store","createStore","applyMiddleware","thunk","axios","require","openDN","openDI","change_dialog","create","dispatch","getState","post","query","localStorage","getItem","then","result","data","createService","alert","catch","err","update","updateService","load","service","getServices","open_drawer","DrawerAdmin","props","this","ThemeProvider","theme","Grid","container","direction","item","xs","md","className","align","Fab","style","size","fontSize","onClick","handleClose","bind","Divider","List","justify","sm","ListItem","button","ListItemIcon","ListItemText","Component","connect","text","auth","cb","openM","anchor","openDrawer","openMenu","logOut","event","setState","currentTarget","logout","history","push","classes","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","Typography","variant","noWrap","grow","sectionDesktop","disableRipple","Badge","badgeContent","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","onClose","MenuItem","LinkProfile","withRouter","withStyles","flexGrow","display","alignItems","breakpoints","up","textButton","textDecorationLine","Admin","drawer","component","CssBaseline","paper","Forbidden","paddingTop","Button","openBD","success","back_drop","Backdrop","backdrop","complete","CircularProgress","zIndex","paddingBottom","marginTop","openSnack","SnackAlert","Slide","Snackbar","key","autoHideDuration","TransitionComponent","SlideTransition","SnackbarContent","open_snack","change","verify","userByEmail","email_success","validEmail","view","setTimeout","TextEmail","validate","information","target","value","length","test","validate_nit","TextField","error","margin","required","fullWidth","label","onChange","inputChange","helperText","openbd","TextPassword","showPassword","preventDefault","md5","match","FormControl","InputLabel","OutlinedInput","endAdornment","InputAdornment","handleClickShowPassword","onMouseDown","handleMouseDownPassword","labelWidth","width","fill","send","user","setItem","nameE","loginUser","authUser","StepLogin","handleReset","activeStep","isStepOptional","step","isStepSkipped","skipped","has","Set","message_backdrop","message_snackAlert","handleNext","handleBack","spacing","Chip","avatar","Avatar","clickable","changeEmail","deleteIcon","getStepContent","Log_in","sendRequest","changeView","moveRegister","login","Paper","elevation","square","noValidate","Link","href","openTrain","DialogTitle","DialogContent","src","train","alt","height","DialogActions","CardServices","dialogVerMas","dialogReservar","openT","card","Card","raised","CardHeader","subheader","class","action","CardContent","date_start","slice","date_end","CardActions","free","Tooltip","openEdit","handleClickButton2","DateTime","selectedDate","ChangeOption","labelDate","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","labelTime","date","ListCities","OpenList","dialog","map","city","FormControlLabel","control","Radio","disabled","Collapse","in","timeout","unmountOnExit","RadioGroup","ListTrans","StepService","handleSkip","Error","setActiveStep","prevActiveStep","setSkipped","prevSkipped","newSkipped","values","add","openP","steps","changeState","undefined","autoFocus","openPop","Popover","Switch","handleChange","inputProps","Stepper","index","stepProps","completed","Step","StepLabel","register","DialogService","SendRequest","closeDialog","wtf8","Panel","ExpansionPanel","expanded","ExpansionPanelSummary","expandIcon","aria-controls","decode","cardReq","accept","ExpansionPanelDetails","openr","Transition","React","forwardRef","ref","DialogNotification","loadr","requestCard","request","fullScreen","DialogInformation","EditService","children","enterTouchDelay","placement","Slider","ValueLabelComponent","defaultValue","min","max","changeSlider","gutterBottom","open_menu","MenuNav","returnView","change_menu","openInfo","Search","Services","openDialog","openDialogN","Container","actions","listRol","disablePadding","Sign_up","backDrop_complete","BackDrop_message","createUser","ProtectedRoute","rest","render","to","pathname","from","location","DrawerUser","handleDrawerOpen","changeValues","DialogRequest","changer","ListInfo","SetOpen","months","handleClick","updateTrain","OpenRequest","serv","info","selected","getUsers","SnackUser","User","loadA","toUpperCase","alternative","getAlternatives","exact","path","typography","fontFamily","join","App","loaded","Boolean","window","hostname","Root","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.085e9127.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Train.722b5233.png\";","module.exports = __webpack_public_path__ + \"static/media/question.8586082a.svg\";","import { createMuiTheme } from '@material-ui/core/styles';\n\n\n const MyTheme = createMuiTheme({\n    palette: {\n        primary: { // works\n          main: '#165788',\n          contrastText: '#fff',\n        },\n        secondary: { // works\n          main: '#69BE28',\n          contrastText: '#fff',\n        },\n        bprimary: {\n            backgroundColor: '#183ea3',\n            color: '#fff',\n        },\n        bicons:{\n          //backgroundColor: '#1d0bbf',\n          //color: '#fff',\n          color: '#1d0bbf',\n          \n        },\n        bsecondary: { \n            backgroundColor: '#3362de',\n            color: '#ffff',\n        },\n    },\n});\n\nexport default MyTheme;","//const API_ROUTE = 'http://34.69.73.192:5000/graphql';\nconst API_ROUTE = 'https://imaapig.azurewebsites.net/graphql';\n//const API_ROUTE = 'http://127.0.0.1:5000/graphql';\nexport default API_ROUTE;","export const defaultState = {\n    open: false,\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    switch(type){\n        case 'OPENBD':\n            //console.log(\"entry in dialog open\")\n            return{ ...state,open: !state.open}\n        default:\n            return state\n            \n    }\n    \n}\n\nexport default reducer;","export const defaultState = {\n    checked: '',\n    open: false,\n    cards: [\n        /*{   \n            id: 1,\n            title: 'hallo',\n            class: 'fdafd',\n            transport: 'fasdfasdf',\n            origin: 'dsadfasf',\n            destination: 'sadfasdf',\n            date_start: 'sdafasdfadsfadfadfs',\n            date_end: 'sdafasdfadsfadfadfs',\n        }*/\n    ],\n    openN: false,\n    openES: false,\n    openI: false,\n    id_service:  0,\n    title: '',\n    type: 'carga',\n    capacity: 0,\n    places: 0,\n    cost: '',\n    cities: [\n        {name:'Bogotá' ,lat: 4.6097100, lng: -74.0817500 ,option: false},\n        {name:'Santa Marta' ,lat: 11.2407900, lng: -74.1990400 ,option: false},\n        {name:'Barranquilla' ,lat: 10.9685400, lng: -74.7813200 ,option: false},\n        {name:'Cartagena' ,lat: 10.3997200, lng: -75.5144400 ,option: false},\n        {name:'La dorada' ,lat: 5.4478302, lng: -74.6631088 ,option: false},\n        {name:'Belencito' ,lat: 6.2518400, lng: -75.5635900 ,option: false},\n    ],\n    origin: '',\n    destination: '',\n    transport: '',\n    service_created: false,\n    service_updated: false,\n    visibility: false,\n    dateStart: new Date(),\n    dateEnd: new Date()\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    switch(type){\n        case 'OPEN':\n            //console.log(\"entry in dialog open\")\n            return{ ...state,open: !state.open}\n        case 'OPENDN':\n            return{...state,openN: !state.openN}\n        case 'OPENES':\n            return{...state,openES: !state.openES}\n        case 'OPENDI':\n            return{...state,openI: !state.openI}\n        case 'CHANGE_DIALOG':\n            switch(payload[0]){\n                case 'id_service':\n                    return {...state,id_service:payload[1]}\n                case 'cards':\n                    return {...state,cards:payload[1]}\n                case 'checked':\n                    return {...state,checked:payload[1]}\n                case 'title':return {...state,title:payload[1]}\n                case 'capacity':return {...state,capacity:parseInt(payload[1])}\n                case 'places':return {...state,places:parseInt(payload[1])}\n                case 'cost':return {...state,cost:payload[1]}\n                case 'Transporte':return {...state,transport:payload[1]}\n                case 'Origen':return{...state,origin:payload[1]}\n                case 'Destino':return{...state,destination:payload[1]}\n                case 'salida':return{...state, dateStart: payload[1]}\n                case 'visibility': return{...state, visibility: !state.visibility}\n                case 'service_created': return{...state, service_created: !state.service_created}\n                case 'service_updated': return{...state, service_updated: !state.service_updated}\n                default:return{...state,dateEnd: payload[1]}\n            }\n        default:\n            return state\n            \n    }\n    \n}\n\nexport default reducer;","const defaultState = {\n    // drawer_user\n    open: false ,\n    // drawer_admin\n    openA: false ,\n    setOpen: false,\n    alternatives: []\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    switch(type){\n        \n        case 'OPEN_DRAWER':\n            switch(payload){\n                case 'drawer':\n                    //return{...state,open:!state.setOpen,setOpen:!state.open}\n                    return{...state,open:!state.open}\n                case 'drawerA':\n                    return{...state,openA:!state.openA}\n                default:\n                    return state\n            }  \n        case 'CHANGE':\n            switch(payload[0]){\n                case 'alternatives':\n                    return{...state,alternatives:payload[1]}\n                default:\n                    return state\n            }    \n        default:\n            return state\n    }\n    //return state\n}\n\nexport default reducer;","const defaultState = {\r\n    open: false ,\r\n    setOpen: false,\r\n    option: ''\r\n}\r\n\r\nconst reducer = (state = defaultState, { type, payload }) => {\r\n    switch(type){\r\n        case 'CHANGE':\r\n            return {...state,option:payload}\r\n        case 'OPEN':\r\n            return {...state,open:!state.setOpen,setOpen:!state.open}\r\n        default:\r\n            return state\r\n    }\r\n    //return state\r\n}\r\n\r\nexport default reducer;\r\n\r\n","const defaultState = {\r\n    users: [],\r\n    email: '',\r\n    password: '',\r\n    token: '',\r\n    rol: '',\r\n    id_user: '',\r\n    isAuth: false\r\n    // response of server\r\n}\r\n\r\nconst reducer = (state = defaultState, { type, payload }) => {\r\n    switch(type){\r\n        case 'FILL':\r\n            switch(payload[0]){\r\n                case 'users':{return {...state,users: payload[1]}}\r\n                case 'email':{return {...state,email: payload[1]}}\r\n                case 'rol':{return {...state,rol: payload[1]}}\r\n                case 'id_user':{return {...state,id_user: payload[1]}}\r\n                case 'token':{return {...state,token: payload[1]}}\r\n                case 'isAuth':{\r\n                    console.log(\"isAuthQQ!!!_ \",payload[1])\r\n                    return {...state,isAuth: payload[1]}}\r\n                default: return{...state,password: payload[1]}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    //return state\r\n}\r\n\r\nexport default reducer;","export const defaultState = {\n    anchorEl: null,\n    open: false,\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    switch(type){\n        case 'OPEN_MENU':\n            //console.log(\"entry in dialog open\")\n            return{ ...state,open: !state.open}\n        case 'CHANGE_MENU':\n            switch(payload[0]){\n                case 'anchorEl':{return {...state,anchorEl: payload[1]}}\n                default: return state\n            }\n        default:\n            return state\n            \n    }\n    \n}\n\nexport default reducer;","\r\n\r\nconst defaultState = {\r\n    // all validate variables must stay in false except rol\r\n    nombre: '',\r\n    validate_nombre: false,\r\n    email: '',\r\n    unique: false,\r\n    validate_email: false,\r\n    password: '',\r\n    validate_password: false,\r\n    // confirm password for the register\r\n    confirm: '',\r\n    validate_confirm: false,\r\n    rol: '',\r\n    validate_rol: true,\r\n    nit: 0,\r\n    // verify the log_in\r\n    authSuccess: false,\r\n    // verify the sign_up\r\n    registerSuccess: false,\r\n    // display message in textField\r\n    message: ''\r\n}\r\n\r\nconst reducer = (state = defaultState, { type, payload }) => {\r\n    switch(type){\r\n        case 'CHANGE':\r\n            switch(payload[0]){\r\n                case 'nombre':{return {...state,nombre: payload[1]}}\r\n                case 'validate_nombre':{ return{...state,validate_nombre: payload[1]}}\r\n                case 'email':{return {...state,email: payload[1]}}\r\n                case 'unique':{return {...state,unique: payload[1]}}\r\n                case 'validate_email':{ return{...state,validate_email: payload[1]}}\r\n                case 'password':{return {...state,password: payload[1]}}\r\n                case 'validate_password':{ return{...state,validate_password: payload[1]}}\r\n                case 'confirm':{return {...state,confirm: payload[1]}}\r\n                case 'validate_confirm':{ return{...state,validate_confirm: payload[1]}}\r\n                case 'nit': {return{...state,nit: payload[1]}}\r\n                case 'rol':{return{...state,rol: payload[1]}}     \r\n                case 'validate_rol':{ return{...state,validate_rol: payload[1]}}\r\n                case 'authSuccess':{ return{...state,authSuccess: payload[1]}}  \r\n                case 'registerSuccess':{ return{...state,registerSuccess: payload[1]}}  \r\n                case 'message':{ return{...state,message: payload[1]}}  \r\n                default: return state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    //return state\r\n}\r\n\r\nexport default reducer;","const defaultState = {\n    open: false,\n    id_user: 0,\n    id_owner: 0,\n    id_service: 0,\n    requests: [],\n    title: '',\n    body: ''\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    switch(type){\n        \n        case 'OPENR':\n            return {...state,open:!state.open}\n        case 'CHANGER':\n            switch(payload[0]){\n                case 'title':\n                    return{...state,title:payload[1]}\n                case 'body':\n                    return{...state,body:payload[1]}\n                case 'requests':\n                    return{...state,requests:payload[1]}\n                default:\n                    return state\n            }    \n        default:\n            return state\n    }\n    //return state\n}\n\nexport default reducer;","const defaultState = {\n    open: false,\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    switch(type){\n        \n        case 'OPEN_SNACK':\n            return {...state,open:!state.open}\n        default:\n            return state\n    }\n    //return state\n}\n\nexport default reducer;","export const defaultState = {\n    opent: false\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    switch(type){\n        case 'OPENT':\n            return{ ...state,opent: !state.opent }\n        default:\n            return state\n            \n    }\n    \n}\n\nexport default reducer;","import {createStore,combineReducers,applyMiddleware} from 'redux';\r\n\r\nimport BackDrop from './reducers/BackDrop'\r\nimport Dialog from './reducers/Dialog';\r\nimport Drawer from './reducers/Drawer'\r\nimport ListRol from './reducers/ListRol'\r\nimport Login from './reducers/Login'\r\nimport Navbar from './reducers/Navbar' \r\nimport Register from './reducers/Register'\r\nimport Request from './reducers/Request'\r\nimport Snack from './reducers/Snack'\r\nimport thunk from 'redux-thunk';\r\nimport Train from './reducers/Train'\r\n\r\nconst reducer = combineReducers({\r\n    BackDrop, Dialog, Drawer, ListRol,  Login, Navbar, Register, Snack, Request, Train\r\n});\r\n\r\nconst store = createStore(reducer,applyMiddleware(thunk));  \r\nexport default store;","import API_ROUTE from '../constants/api_route'\nimport store from '../store'\n\n\nconst axios = require(\"axios\")\n\n\n// open services dialog \nexport const open = (option) =>{\n    return {\n        type: 'OPEN',\n        payload: option\n    }\n}\n\n// open notifications dialog \nexport const openDN = (option) =>{\n    return {\n        type: 'OPENDN',\n        payload: option\n    }\n}\n\n// open information dialog \nexport const openDI = (option) =>{\n    return {\n        type: 'OPENDI',\n        payload: option\n    }\n}\n\n// open edit_service dialog \nexport const openES = (option) =>{\n    return {\n        type: 'OPENES',\n        payload: option\n    }\n}\n\n\n// change any value in dialog\nexport const change_dialog = (option) =>{\n    return {\n        type: 'CHANGE_DIALOG',\n        payload: option\n    }\n}\n\n// Create a service \nexport const create = () =>{\n    return (dispatch) => {\n        //setTimeout(() => {}, 2000);\n        let state = store.getState().Dialog\n        console.log(state)\n        axios.post(API_ROUTE,{\n            query : `mutation{\n                createService(Service: {\n                    id_user: ${localStorage.getItem('id_user')}\n                    title: \"${state.title}\"\n                    class: \"${state.type}\"\n                    capacity: ${state.capacity}\n                    places: ${state.places}\n                    cost: \"${state.cost}\"\n                    origin: \"${state.origin}\"\n                    destination: \"${state.destination}\"\n                    transport: \"${state.transport}\"\n                    visibility: ${state.visibility}\n                    date_start: \"${state.dateStart}\"\n                    date_end: \"${state.dateEnd}\"\n                }){\n                    id\n                    title\n                }\n            }`\n        }).then((result)=>{\n         \n            const title = result.data.data.createService.title\n            if(title !== \" \"){\n                dispatch(change_dialog(['service_created','any']))\n            }else{\n                alert(\"No se creo el servicio\")\n            }\n        }).catch(err => console.log(err))\n        \n    }\n}\n\n// update a service \nexport const update = (id_service) =>{\n    return (dispatch) => {\n        let state = store.getState().Dialog\n        console.log(id_service)\n        //setTimeout(() => {}, 2000);\n        console.log(state)\n        axios.post(API_ROUTE,{\n            query : `mutation{\n                updateService(id: ${id_service},Service:{\n                    places: ${state.places}\n                    date_start: \"${state.dateStart}\"\n                    date_end: \"${state.dateEnd}\"\n                }){\n                    places\n                }\n              }`\n        }).then((result)=>{\n         \n            const places = result.data.data.updateService.places\n            if(places === state.places){\n                dispatch(change_dialog(['service_updated','any']))\n            }\n\n        }).catch(err => console.log(err))\n        \n    }\n}\n\n// Load all services\nexport const load = () =>{\n    return(dispatch)=> {\n        axios.post(API_ROUTE, {\n            query: `query{\n                getServices{\n                    id \n                    id_user \n                    title \n                    class \n                    capacity\n                    places \n                    cost \n                    origin \n                    destination \n                    transport \n                    date_start\n                    date_end\n                }\n            }`\n            \n        }).then((result)=>{\n            let service  = result.data.data.getServices\n            dispatch(change_dialog(['cards',service]))\n            //console.log(\"service: \", state.cards)\n        }).catch(err => console.log(err))\n    } \n}\n","import API_ROUTE from '../constants/api_route'\nimport {load} from './Dialog';\nconst axios = require(\"axios\")\n\nexport const open_drawer = (option) =>{\n    return {\n        type: 'OPEN_DRAWER',\n        payload: option\n    }\n}\n\n// change any value in dialog\nexport const change = (option) =>{\n    return {\n        type: 'CHANGE',\n        payload: option\n    }\n}\n\n\n// load alternatives \nexport const loadA = () =>{\n    console.log('load alternatives')\n    return(dispatch)=> {\n        axios.post(API_ROUTE, {\n            query: `query{\n                getAlternatives{\n                    id\n                    array_id\n                    cost\n                    array_services\n                    duration\n                    origin\n                    destination\n                }\n            }`\n            \n        }).then((result)=>{\n            let alternative  = result.data.data.getAlternatives\n            dispatch(change(['alternatives',alternative]))\n            dispatch(load())\n        }).catch(err => console.log(err))\n    } \n    \n}","import React,{Component}   from 'react';\nimport '../css/admin.css';\n\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Divider from '@material-ui/core/Divider';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport Fab from '@material-ui/core/Fab';\nimport { Grid} from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MyTheme from '../constants/MyTheme';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PollIcon from '@material-ui/icons/Poll';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport WarningIcon from '@material-ui/icons/Warning';\n\n\n\nimport {connect} from 'react-redux'\nimport {open_drawer} from '../_actions/Drawer'\n\nclass DrawerAdmin extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n    \n    handleClose(){\n        this.props.open('drawerA')\n    }\n    render(){\n        return(\n            <div>\n                <ThemeProvider theme={MyTheme}></ThemeProvider>\n                <Grid container direction=\"column\" >\n                    <Grid container direction=\"row\">\n                        <Grid item xs={9} md={9} >\n                            <div className=\"title_admin\">\n                                Panel administrador    \n                            </div>\n                        </Grid>\n                        <Grid item xs={2} md={2} className=\"arrow_admin\" align=\"center\">\n                            <Fab style={MyTheme.palette.bprimary} size={'small'}>\n                                <ChevronLeftIcon style={{ fontSize: 30 }} onClick={this.handleClose.bind(this)}/>\n                            </Fab>\n                        </Grid>\n                        <Grid item xs={1} md={1} ></Grid>\n                    </Grid>\n                    <Divider/>\n                    <List justify=\"center\">\n                        <Grid item xs={12} sm={12} md={12} className=\"drawerHeader_admin\">\n                            <ListItem button>\n                                <ThemeProvider theme={MyTheme}></ThemeProvider>\n                                <ListItemIcon> \n                                    <PersonIcon style={{fontSize: 45,color: '#22439c'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={\"\"} />\n                                <ListItemText primary={\"Usuarios\"} />\n                            </ListItem>\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={12} className=\"drawerHeader_admin\">\n                            <ListItem button>\n                                <ListItemIcon> \n                                    <EmojiObjectsIcon style={{fontSize: 45,color: '#22439c'}}/> \n                                </ListItemIcon>\n                                <ListItemText primary={\"\"} />\n                                <ListItemText primary={\"Servicios\"} />\n                            </ListItem>\n                            \n                        </Grid>\n                        <Grid item xs={12} sm={12} md={12} className=\"drawerHeader_admin\">\n                            <ListItem >\n                                <ListItemIcon> \n                                    <PollIcon style={{fontSize: 45,color: '#a6a9ad'}} /> \n                                </ListItemIcon>\n                                <ListItemText/>\n                                <ListItemText primary={\"Estadisticas\"} />\n                            </ListItem>\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={12} className=\"drawerHeader_admin\">\n                            <ListItem >\n                                <ListItemIcon> \n                                    <WarningIcon style={{fontSize: 45,color: '#a6a9ad'}} /> \n                                </ListItemIcon>\n                                <ListItemText/>\n                                <ListItemText primary={\"Alertas\"} />\n                            </ListItem>\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={12} className=\"drawerHeader_admin\">\n                            <ListItem button>\n                                <ListItemIcon> \n                                    <SettingsIcon style={{fontSize: 45,color: '#22439c'}} /> \n                                </ListItemIcon>\n                                <ListItemText/>\n                                <ListItemText primary={\"Configuraciones\"} />\n                            </ListItem>\n                        </Grid>\n                    </List>\n                    <Divider/>\n                    <Grid item xs={12} sm={12} md={12}>\n                        <div className=\"footer_admin\">\n                            Pepito perez\n                        </div>\n                        \n                    </Grid>\n                </Grid>            \n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        Drawer: state.Drawer\n    };\n };\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n       open: (text) => {dispatch(open_drawer(text))},\n    }\n}\n \nexport default connect(mapStateToProps,mapDispatchToProps)(DrawerAdmin);","class Auth{\n    constructor(){\n        this.auth = false\n    }\n\n    login(cb){\n        console.log(\"entry in Auth.login\")\n        this.auth = true\n        \n        cb();\n    }\n    logout(cb){\n        console.log(\"entry in Auth.logout\")\n        this.auth = false\n        cb();\n    }\n    \n    isAuth(){return this.auth}\n}\n\nexport default new Auth();","import React, { Component } from 'react'\r\nimport '../css/navbar.css'; \r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport auth from '../router/Auth'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MyTheme from '../constants/MyTheme';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {withRouter } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport {ThemeProvider} from '@material-ui/core/styles';\r\n\r\nimport {connect} from 'react-redux'\r\nimport {open_drawer} from '../_actions/Drawer'\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    textButton: {\r\n        color: 'white',\r\n        textDecorationLine: 'none',\r\n    }\r\n});\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            openM: false,\r\n            anchor: null\r\n        }\r\n        this.openDrawer = this.openDrawer.bind(this);\r\n        this.openMenu = this.openMenu.bind(this);\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    openDrawer(){\r\n        this.props.open('drawerA')\r\n        //console.log(\"openDrawer-Admin!\")\r\n    }\r\n\r\n    openMenu(event){\r\n        this.setState({\r\n            openM: !this.state.openM,\r\n            anchor: event.currentTarget\r\n        })\r\n    }\r\n    // close session\r\n    logOut(){\r\n        auth.logout(() =>{this.props.history.push(\"/\")}) \r\n        //localStorage.setItem('auth',false)\r\n    }\r\n\r\n    render() {\r\n        const menuId = 'primary-search-account-menu';\r\n        \r\n\r\n        const { classes } = this.props;\r\n        \r\n        //console.log(Drawer)\r\n        return (\r\n            <div className=\"grow\">\r\n                <ThemeProvider theme={MyTheme}></ThemeProvider>\r\n                <AppBar position=\"static\" style={MyTheme.palette.bprimary}>     \r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            className={classes.menuButton}\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={this.openDrawer}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h4\" noWrap>IMA</Typography>\r\n                        <div className={classes.grow}/>\r\n                        <div className={classes.sectionDesktop}>\r\n                            <div className=\"icon_nav\">\r\n                            <IconButton disableRipple={true} aria-label=\"show 2 new notifications\" color=\"inherit\" >\r\n                                <CloudQueueIcon/>\r\n                            </IconButton>\r\n                            \r\n                            <IconButton aria-label=\"show 2 new notifications\" color=\"inherit\" >\r\n                                <Badge badgeContent={1} color=\"secondary\">\r\n                                    <NotificationsIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                            </div>\r\n                            <IconButton\r\n                                \r\n                                aria-label=\"account of current user\"\r\n                                color=\"inherit\"\r\n                                onClick={this.openMenu}\r\n                            >\r\n                                <AccountCircle />\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className=\"section-mobile\">\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                <Menu\r\n                    anchorEl={this.state.anchor}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                    id={menuId}\r\n                    keepMounted\r\n                    transformOrigin={{ vertical: 'down', horizontal: 'right' }}\r\n                    open={this.state.openM}\r\n                    onClose={this.openMenu}>\r\n                    <MenuItem onClick={this.LinkProfile}>Perfil</MenuItem>\r\n                    <MenuItem onClick={this.logOut}>Cerrar Sesión</MenuItem>\r\n                </Menu>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Drawer: state.Drawer\r\n    };\r\n };\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n       open: (text) => {dispatch(open_drawer(text))},\r\n    }\r\n}\r\nexport default withRouter(withStyles(styles)(connect(mapStateToProps,mapDispatchToProps)(Navbar)));\r\n","import React,{Component}   from 'react';\nimport '../../css/admin.css';\n\nimport { CssBaseline, Grid} from '@material-ui/core';\nimport Drawer from '@material-ui/core/Drawer';\nimport DrawerAdmin from '../../components/DrawerAdmin';\nimport Navbar from '../../components/NavAdmin';\nimport store from '../../store'\nimport { withRouter } from 'react-router-dom';\n\nimport {connect} from 'react-redux'\nclass Admin extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n \n \n    render(){\n        const { drawer } = this.props\n        return(\n            <div className=\"root\">\n                <Grid container component=\"main\" className=\"pater\" direction=\"row\">\n                    <Grid item xs={12}>\n                        <Navbar/>\n                        <CssBaseline/>\n                    </Grid>\n                    <Grid item xs={12} sm={2} md={2}>\n                        <Drawer\n                            className=\"drawer_admin\"\n                            variant=\"persistent\"\n                            anchor=\"left\"\n                            open={store.getState().Drawer.openA}\n                            classes={{paper: \"drawerPaper_admin\"}}\n                            ><DrawerAdmin/>\n                        </Drawer>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        drawer: state.Drawer,\n    };\n};\n \nexport default withRouter(connect(mapStateToProps)(Admin));","import React,{Component}   from 'react';\n\nimport BlockIcon from '@material-ui/icons/Block';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n \nclass Forbidden extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n    \n \n    render(){\n        return(\n            <Grid container direction=\"column\" alignItems=\"center\">\n                <BlockIcon style={{paddingTop: '50px',fontSize: '280px'}} color=\"primary\"></BlockIcon>\n                <p style={{fontSize: '80px'}}>No tienes acceso a esta ruta ...</p>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {this.props.history.push('/')}}\n                    className=\"button\"\n                    >\n                    Regresar\n                </Button>\n            </Grid>\n        );\n    }\n}\n \n \nexport default Forbidden ;","\nexport const openBD = (option) =>{\n    return {\n        type: 'OPENBD',\n        payload: option\n    }\n}","import React,{Component}   from 'react';\nimport '../css/back_drop.css'\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid'\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n\nimport {connect} from 'react-redux'\nimport {openBD} from '../_actions/actions_backdrop'\n\nconst styles = theme => ({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n      fontSize: '40px'\n    },\n    message:{\n        paddingBottom: '60px',\n        marginTop: '-110px',\n    }\n});\n\nclass BackDrop extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            open: true,\n            success: true,\n        }\n    }\n \n    handleClose(){\n        this.setState({open: false})\n    }\n    render(){\n        const { classes } = this.props;\n        const { back_drop } = this.props;\n        return(\n            <div>\n                <Backdrop className={classes.backdrop} open={back_drop.open}>\n                    <Grid container direction=\"row\">\n                        {   !this.props.complete ? \n                            <Grid container direction=\"row\">\n                                <Grid item xs={12} sm={12} align=\"center\" className={classes.message}>\n                                    {this.props.message}\n                                </Grid>\n                                <Grid item xs={12} sm={12} align=\"center\">\n                                    <CircularProgress size={150} color=\"primary\"/>\n                                </Grid>\n                            </Grid>\n                        :   \n                            <Grid container direction=\"row\">\n                                <Grid item xs={12} sm={12} align=\"center\" className={classes.message}>\n                                    {this.props.message}\n                                </Grid>\n                                <Grid item xs={12} sm={12} align=\"center\">\n                                    <CheckCircleIcon style={{fontSize: '220px', color: '#31a361'}}/>\n                                </Grid>\n                            </Grid>\n                        }\n                    </Grid>\n                </Backdrop>\n            </div>\n        );\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        back_drop: state.BackDrop\n    };\n };\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n       open: (text) => {dispatch(openBD(text))},\n    }\n}\n \nexport default withStyles(styles)(connect(mapStateToProps,mapDispatchToProps)(BackDrop));","\nexport const openSnack = (option) =>{\n    return {\n        type: 'OPEN_SNACK',\n        payload: option\n    }\n}","import React,{Component}   from 'react';\nimport '../../css/snackbar.css'; \n\n\nimport Slide from '@material-ui/core/Slide';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\n\nimport {connect} from 'react-redux'\nimport { openSnack } from '../../_actions/actions_snack'\n\nclass SnackAlert extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            open: true\n        }\n    }\n    \n    SlideTransition(props) {\n        return <Slide {...props} direction=\"right\" />;\n    }\n\n    render(){\n        const { Snack } = this.props;\n        return(\n            <div>\n                <Snackbar\n                    key={`${this.state.vertical},${this.state.horizontal}`}\n                    open={Snack.open}\n                    autoHideDuration={4500}\n                    TransitionComponent={this.SlideTransition.bind(this)}\n                    //onClose={()=>{this.props.open_snack('snack_alert')}}\n                >\n                    <SnackbarContent style={{ backgroundColor: this.props.color}}\n                        message={\n                            <div className=\"message_snackAlert\">\n                                {this.props.message}\n                            </div>\n                        }\n                    />\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        Snack: state.Snack\n    };\n };\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n        open_snack: (text) => {dispatch(openSnack(text))},\n    }\n}\n\n \nexport default connect(mapStateToProps,mapDispatchToProps)(SnackAlert);","import API_ROUTE from '../constants/api_route'\r\nimport store from '../store'\r\nconst axios = require(\"axios\")\r\n\r\n\r\n\r\nexport const change = (option) =>{\r\n    return {\r\n        type: 'CHANGE',\r\n        payload: option\r\n    }\r\n}\r\n\r\nexport const verify = (option) =>{\r\n    return (dispatch) => {\r\n        let state = store.getState().Register\r\n        //console.log(\"state: \",state.email)\r\n        axios.post(API_ROUTE, { \r\n            query : `query{\r\n                userByEmail(email: \"${state.email}\"){ id }\r\n            }`\r\n        }).then((result) => {\r\n            //console.log(result.data)\r\n            let user = result.data.data.userByEmail\r\n            if (user.id !== -1){dispatch(change(['unique', true]))}\r\n            else{ dispatch(change(['unique', false]))}\r\n        }).catch(err => console.log(err))\r\n    }\r\n}\r\n\r\nexport const email_success = (validEmail,view) =>{\r\n    \r\n    return (dispatch) => {\r\n        setTimeout(() => { \r\n            //this.props.verify(validEmail)\r\n            dispatch( verify(validEmail) )\r\n        }, 2000);\r\n        setTimeout(() => {\r\n            let Register = store.getState().Register\r\n            \r\n            // email in the db\r\n            if (Register.unique === true){\r\n                if (view === 'sign_up'){\r\n                    //this.setState({validate: true})\r\n                    //this.props.change(['validate_email',true])\r\n                    //this.setState({information: 'Correo electronico en uso'}) \r\n                    dispatch(change(['validate_email',true]))  \r\n                    dispatch(change(['message', 'Correo electronico en uso']))\r\n                }\r\n            }\r\n            // email not in the db\r\n            else{\r\n                if (view === 'log_in'){\r\n                    //this.props.change(['validate_email',true])\r\n                    //this.setState({information: 'Correo electrónico no registrado'})\r\n                    dispatch(change(['validate_email',true])) \r\n                    dispatch(change(['message', 'Correo electrónico no registrado']))\r\n                }\r\n            }\r\n            //console.log(\"finish email_success\",Register.unique)\r\n        }, 3000);\r\n    }\r\n}\r\n\r\n\r\n// register an user\r\nexport const register = () =>{\r\n    //console.log(\"Register redux\")\r\n    let state = store.getState().Register\r\n    //console.log(\"state-rol: \",state)\r\n    return(dispatch)=> {\r\n        \r\n        //dispatch()\r\n        if (!state.validate_nombre & state.nombre.length > 1 &\r\n            !state.validate_password & state.password.length >= 8 &\r\n            !state.validate_confirm & state.confirm.length >= 8 &\r\n            !state.validate_email  & state.confirm.length >= 6 &\r\n            !state.validate_rol){\r\n                \r\n            axios.post(API_ROUTE, { \r\n                query : `mutation{\r\n                    createUser(user: {\r\n                    nameE:\"${state.nombre}\"\r\n                    email:\"${state.email}\"\r\n                    passw:\"${state.password}\"\r\n                    rol:\"${state.rol}\"\r\n                    nit:\"${state.nit}\"\r\n                    }){\r\n                        nameE\r\n                    }\r\n                }`\r\n                \r\n            }).then((result) => {\r\n                let user = result.data.data.createUser\r\n                //console.log(user.nameE)\r\n                if (user.nameE !== \" \") { dispatch(change(['registerSuccess', true]))}\r\n                \r\n            }).catch(err => console.log(err))\r\n        }\r\n        \r\n    } \r\n}","import React,{Component}   from 'react';\n \n\n\nimport TextField from '@material-ui/core/TextField';\nimport confirmEmail from '../../scripts/confirmEmail.js';\n \nimport {connect} from 'react-redux'\nimport {change,verify} from '../../_actions/Register'\n// view loading\nimport {openBD} from '../../_actions/actions_backdrop'\n\n\n\nclass TextEmail extends Component{\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            validate: false,\n            information: 'Ingresa la información',\n        }\n    }\n    \n    inputChange(event){\n        \n        let id = event.target.id;\n        let value = event.target.value;\n        \n        switch(id){\n            case \"nombre\":\n                /*if (value.length < 1){this.setState({validate: true})}\n                else{this.setState({validate: false})}*/\n                if (value.length < 1){this.props.change(['validate_nombre',true])}\n                else{this.props.change(['validate_nombre',false])}\n                break\n            case \"email\":\n                \n                //this.setState({validate: true})\n                this.props.change(['validate_email',true])\n                let validEmail = confirmEmail(value)\n                if (validEmail) {\n                    //console.log(\"VIEW: \",this.props.view)\n                    this.props.change(['validate_email',false])\n                }\n                break\n            default:\n                break\n        }\n        this.props.change([id,value])\n    }\n    /*componentDidUpdate(){\n        //this.setState({validate: true})\n        const {Register} = this.props\n        console.log(Register)\n        this.render()\n    }*/\n\n    render(){\n        const {Register} = this.props\n        //console.log(\"message: \",Register.message)\n        let validate = null\n        switch(this.props.id){\n            case \"nombre\":\n                validate = Register.validate_nombre\n                break\n            case \"email\": \n                validate = Register.validate_email\n                break\n            case \"password\":\n                    validate = Register.validate_password\n                break\n            case \"nit\":\n                    validate = Register.validate_nit\n                break\n            default:\n                break\n        }\n        \n        return(\n            <div>\n                <TextField\n                    error={validate}\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    id={this.props.id}\n                    required\n                    fullWidth\n                    label={this.props.label}\n                    onChange={this.inputChange.bind(this)}\n                    helperText={validate === true ? \n                        Register.message :  [\n                            this.props.id === 'email' ? 'Puedes usar letras, numeros y signos de puntuación' : ''\n                        ]\n                    }\n                />\n            </div>\n        );\n    }\n}\n \n\nconst mapStateToProps = (state) => {\n    return {\n        Register: state.Register\n    };\n };\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n       change: (text) => {dispatch(change(text))},\n       verify: (text) => {dispatch(verify(text))},\n       openbd: (text) => {dispatch(openBD(text))},\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(TextEmail);","export default function( email ){ \n    let reg =  /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i;\n    return reg.test(email);\n}","import React,{Component}   from 'react';\n \n \nimport IconButton from '@material-ui/core/IconButton';\nimport FormControl from '@material-ui/core/FormControl';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport {testPassword} from '../../scripts/testPassword'\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport {connect} from 'react-redux'\nimport {change} from '../../_actions/Register'\n\n \nclass TextPassword extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            validate: false,\n        }\n    }\n\n    \n    handleClickShowPassword (){\n        this.setState({showPassword: !this.state.showPassword });\n    };\n    handleMouseDownPassword (event){\n        event.preventDefault();\n    };\n    \n    async inputChange(event){\n        \n        let id = event.target.id;\n        let value = event.target.value;\n        var md5 = require('md5');\n        \n        if (id === 'password' ){\n            if (testPassword(value)){ \n                //this.setState({validate: false})\n                this.props.change(['validate_password',false])\n            }\n            else{this.props.change(['validate_password',true])}\n            value = md5(value)\n        }\n\n        if (id === 'confirm'){\n            //this.setState({validate: true})\n            this.props.change(['validate_confirm',true])\n            let {Register} = this.props;\n            if (Register.confirm.length > 0){\n                if(md5(value) === Register.password ){\n                    //this.setState({validate: false})\n                    this.props.change(['validate_confirm',false])\n                }else{\n                    //this.setState({validate: true})\n                    this.props.change(['validate_confirm',true])\n                }\n            }\n        }\n        this.props.change([id,value])\n    }\n    \n\n    render(){\n        const {Register} = this.props\n        let validate = null\n        switch(this.props.id){\n            case \"password\":\n                validate = Register.validate_password\n                break\n            case \"confirm\": \n                validate = Register.validate_confirm\n                break\n        }\n        return(\n           <div>\n                <FormControl variant=\"outlined\" fullWidth={true}>\n                    <InputLabel>{this.props.label}</InputLabel>\n                    <OutlinedInput\n                        //error={this.props.id === 'password' ? this.state.validate : this.state.validateC}\n                        error={validate}\n                        id={this.props.id}\n                        fullWidth={true}\n                        type={this.state.showPassword ? 'text' : 'password'}\n                        onChange={this.inputChange.bind(this)}\n                        endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={this.handleClickShowPassword.bind(this)}\n                                onMouseDown={this.handleMouseDownPassword.bind(this)}\n                                edge=\"end\"\n                                \n                                >\n                                {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                        }\n                        labelWidth={this.props.width}\n                    />\n                </FormControl>\n                \n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        Register: state.Register\n    };\n };\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n       change: (text) => {dispatch(change(text))},\n    }\n}\n \nexport default connect(mapStateToProps,mapDispatchToProps)(TextPassword);","export function testPassword(password){\n    let passCheck = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,20}$/;\n    return password.match(passCheck);\n}","import store from '../store'\r\nimport API_ROUTE from '../constants/api_route'\r\nimport { change } from './Register'\r\n//\r\nconst axios = require(\"axios\")\r\n\r\nexport const fill = (option) =>{\r\n    return {\r\n        type: 'FILL',\r\n        payload: option\r\n    }\r\n}\r\n// send the requesto to backend\r\nexport const send = () =>{\r\n    let state = store.getState().Register\r\n    //console.log(\"state...\", state,\"email\",state.email)\r\n    return(dispatch) => {\r\n        //console.log(\"entry in return\")\r\n        axios.post(API_ROUTE, {\r\n            query: `query{\r\n                userByEmail(email:\"${state.email}\"){ rol nameE id}\r\n            }`\r\n        })\r\n        .then((result)=>{\r\n            let user = result.data.data.userByEmail\r\n            // guarda en local storage el id del usuario!\r\n            localStorage.setItem('id_user',user.id)\r\n            // guarda en store(redux) el rol y nombre del usuario\r\n            dispatch(fill(['rol',user.rol]))\r\n            dispatch(change(['nombre',user.nameE]))\r\n        })\r\n        .catch(err => console.log(err))\r\n        \r\n        console.log(\"need auth\",state.email,state.password)\r\n\r\n        // authentication\r\n        axios.post(API_ROUTE,{\r\n            query: `mutation{\r\n                authUser(credentials: { email: \"${state.email}\", passw: \"${state.password}\"})\r\n                { token success }\r\n            }`    \r\n        }).then((result)=>{\r\n            \r\n            const loginUser = result.data.data.authUser\r\n            console.log(\"loginUSer: \",loginUser)\r\n            dispatch(fill(['token',loginUser.token]))\r\n            if(loginUser.success){\r\n                //auth user incorrect\r\n                dispatch(change(['authSuccess',true]))\r\n            }\r\n            \r\n        }).catch(err => console.log(err))\r\n    } \r\n}\r\n\r\n// load all users\r\nexport const load = () =>{\r\n    console.log('load users in login')\r\n    return(dispatch)=> {\r\n        axios.post(API_ROUTE, {\r\n            query: `query{\r\n                getUsers{\r\n                    id\r\n                    nameE\r\n                    email\r\n                    nit\r\n                    rol\r\n                }\r\n            }`\r\n            \r\n        }).then((result)=>{\r\n            let users  = result.data.data.getUsers\r\n            dispatch(fill(['users',users]))\r\n        }).catch(err => console.log(err))\r\n    } \r\n    \r\n}","import React,{Component}   from 'react';\n\n\nimport Avatar from '@material-ui/core/Avatar';\nimport BackDrop from '../components/BackDrop'\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Grid from '@material-ui/core/Grid';\n//import TextField from '@material-ui/core/TextField';\nimport SnackAlert from '../components/_Snacks/SnackAlert';\nimport TextEmail from '../components/_Form/TextEmail'\nimport TextPassword from '../components/_Form/TextPassword'\nimport Typography from '@material-ui/core/Typography'; \nimport { withRouter } from 'react-router-dom';\n\n\nimport {connect} from 'react-redux'\nimport {change,email_success} from '../_actions/Register'\n// this action have to change into Register\nimport {send,fill} from '../_actions/Login'\n// view loading\nimport {openBD} from '../_actions/actions_backdrop' \nimport { openSnack } from '../_actions/actions_snack'\n\nclass StepLogin extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeStep: 0,\n            skipped: new Set(),\n            message_backdrop: '',\n            message_snackAlert: ''\n        }\n        this.handleNext = this.handleNext.bind(this)\n        this.handleReset = this.handleReset.bind(this)\n        this.handleBack = this.handleBack.bind(this)\n    }\n    changeEmail(){\n        this.setState({activeStep: this.state.activeStep-1})\n        this.props.change(['validate_email',true])\n    }\n    handleNext() {\n        let {Register} = this.props\n        if (this.state.activeStep < 1){\n            \n            // verify email\n            this.setState({message_backdrop: 'Verificando correo electrónico..'})\n            this.props.openbd('back_drop')\n            setTimeout(() => { \n                //this.props.openbd('back_drop')\n                this.props.email_success(Register.email,'log_in');    \n            }, 2000);\n            \n            // change View\n            setTimeout(() => { \n                //console.log(\"before change view\")\n                let {Register} = this.props\n                //console.log(Register.validate_email, Register.email, Register.unique)\n                if (!Register.validate_email & Register.email.length > 0 & Register.unique){\n                    //this.props.openbd('back_drop')\n                    this.setState({activeStep: this.state.activeStep + 1})\n                }else{\n                    this.setState({ message_snackAlert: 'No se ha podido encontrar tu cuenta'})\n                    this.props.open_snack('snack_alert');\n                    setTimeout(() => { this.props.open_snack('snack_alert');}, 3000);\n                }\n\n                this.props.openbd('back_drop')\n            }, 7000);\n            \n        }else{\n            //send request to log_in\n            this.setState({message_backdrop: 'Autenticando usuario..'})\n            this.props.openbd('back_drop')\n            if (Register.password.length > 0){\n                setTimeout(() => { \n                    \n                    this.props.send('') \n                }, 2000);\n                setTimeout(() => { \n                    let {Register} = this.props;\n                    let {Login} = this.props;\n                    if (Register.authSuccess){\n                        \n                        //this.props.fill(['isAuth',true])\n                        //setTimeout(() => {}, 1000);\n                        localStorage.setItem('auth','true')\n                        \n                        if(Login.rol === 'generador'){\n                            this.props.history.push('/user')\n                            localStorage.setItem('view','user')\n                        }\n                        else{\n                            this.props.history.push('/services')\n                            localStorage.setItem('view','services')\n                        }\n                        \n                    }\n                    this.props.openbd('back_drop')\n                }, 3000);\n            }\n            //alert('correo no existe')\n        }\n    };\n\n    handleReset = () => { this.setState({activeStep: 0})};\n    handleBack () { \n        \n        if (this.state.activeStep === 0){\n            this.props.history.push(\"/sign_up\")\n\n        }else{\n            alert('recovery pass')\n        }\n    };\n\n\n    isStepOptional = step => {\n        return step === 1;\n    };\n\n    isStepSkipped = step => {\n        return this.state.skipped.has(step);\n    };\n    \n    \n    getStepContent(step) {\n        let {Register} = this.props\n        switch (step) {\n            case 0:\n                //const id = this.state.open ? 'simple-popover' : undefined;\n                return(\n                    <div className=\"root_step\" id=\"root_step\">\n                        <Grid container spacing={4} direction=\"row\" justify=\"center\">\n                            <Grid item sm={8}>\n                                <TextEmail label=\"Correo electrónico\" id=\"email\" view=\"log_in\"/>\n                            </Grid>\n                        </Grid>\n                    </div>\n                )\n            case 1:\n                return (\n                    <div>\n                        <Grid container spacing={4} direction=\"row\" justify=\"center\" alignItems=\"center\">\n                            <Grid item sm={5} align=\"right\">\n                                <h2>Bienvenido</h2>\n                            </Grid>\n                            <Grid item sm={7}>\n                                <Chip\n                                    avatar={<Avatar>M</Avatar>}\n                                    label={Register.email}\n                                    clickable\n                                    color=\"primary\"\n                                    onClick={this.changeEmail.bind(this)}\n                                    deleteIcon={<DoneIcon />}\n                                />\n                            </Grid>\n                            <Grid item sm={8}>\n                                <TextPassword label=\"Ingresa tu contraseña\" width={150} id=\"password\"/>\n                            </Grid>\n                        </Grid>\n                    </div>\n                )\n            default:\n                return 'Unknown step';\n        }\n    }\n    render(){\n        return(\n            <div className=\"root\">\n                <Grid container direction=\"row\">\n                    <Grid item xs={12} sm={12} md={12}>\n                        <Typography className=\"instructions\">\n                            {this.getStepContent(this.state.activeStep)}\n                        </Typography>\n\n                        <BackDrop message={this.state.message_backdrop}/>\n                        <SnackAlert message={this.state.message_snackAlert} color='#c9432e'/>\n\n                        <Grid container direction=\"row\" className=\"buttons\" justify=\"center\">\n                            <Grid item xs={1} sm={1} md={1}></Grid>\n                            <Grid item xs={4} sm={5} md={5}>\n                                <Button \n                                    color=\"secondary\"\n                                    onClick={this.handleBack} \n                                    className=\"button\"\n                                    >\n                                    {this.state.activeStep === 0 ? 'Crear Cuenta' : 'Olvidaste tu contraseña'}\n                                </Button>\n                            </Grid>\n                            <Grid item xs={4} sm={1} md={1}></Grid>\n                            <Grid item xs={4} sm={4} md={4} align=\"center\">\n                                <Button\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={this.handleNext}\n                                    className=\"button\"\n                                    >\n                                    Siguiente\n                                </Button>\n                            </Grid>\n                            <Grid item xs={4} sm={1} md={1}></Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        Register: state.Register,\n        Login: state.Login\n    };\n};\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n       change: (text) => {dispatch(change(text))},\n       email_success: (text) => {dispatch(email_success(text))},\n       fill: (text) => {dispatch(fill(text))},\n       openbd: (text) => {dispatch(openBD(text))},\n       open_snack: (text) => {dispatch(openSnack(text))},\n       send: (text) => {dispatch(send(text))},\n       \n    }\n}\n\n \nexport default  withRouter(connect(mapStateToProps,mapDispatchToProps)(StepLogin)) ;","import React, { Component } from 'react'\r\nimport '../css/login.css';\r\n\r\nimport auth from '../router/Auth'\r\n//import BackDrop from '../components/BackDrop'\r\n//import Button from '@material-ui/core/Button';\r\n//import Checkbox from '@material-ui/core/Checkbox';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Fab from '@material-ui/core/Fab';\r\n//import FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\n//import HomeIcon from '@material-ui/icons/Home';\r\nimport LinkUI from '@material-ui/core/Link';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport StepLogin from '../components/StepLogin'\r\n//import TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Redux\r\nimport {connect} from 'react-redux'\r\nimport {fill,send} from '../_actions/Login'\r\n\r\n\r\nclass Log_in extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        //this.state = {}\r\n        this.inputChange = this.inputChange.bind(this);\r\n        this.sendRequest = this.sendRequest.bind(this);\r\n        this.changeView = this.changeView.bind(this);\r\n        this.moveRegister = this.moveRegister.bind(this);\r\n    }\r\n\r\n    async inputChange(event){\r\n        let {id , value} = event.target\r\n        var md5 = require('md5');\r\n        if (id === 'password'){value = md5(value)}\r\n        this.props.fill([id,value])\r\n    }\r\n    \r\n    \r\n    changeView(rol){\r\n        \r\n        if(rol === 'generador'){\r\n            auth.login(() =>{this.props.history.push(\"/user\")}) \r\n            //localStorage.setItem('auth',true)\r\n            //this.props.history.push(\"/user\")\r\n        }\r\n            \r\n        if(rol === 'transportador'){\r\n            auth.login(() =>{this.props.history.push(\"/services\")}) \r\n            //localStorage.setItem('auth',true)\r\n            //this.props.history.push(\"/services\")\r\n        }\r\n    }\r\n    \r\n    async sendRequest(){ \r\n        this.props.send();\r\n        /*setTimeout(function(){\r\n            login = store.getState().Login\r\n            \r\n        },2000);*/\r\n        \r\n        //await this.changeView();\r\n        \r\n        /*const { Login } = this.props;\r\n        console.log(\"rol before push in login\",Login.rol)\r\n        if(Login.rol === 'generador'){this.props.history.push(\"/user\")}\r\n        else{this.props.history.push(\"/services\")}\r\n        let promise = new Promise(function(resolve,reject){\r\n            setTimeout(function(){\r\n                resolve(\r\n                    \"hallo promise\"        \r\n                );\r\n            },2000);\r\n        })\r\n        //const { Login } = this.props;\r\n        \r\n        promise.then(function(response){\r\n            let login = store.getState().Login\r\n            console.log(\"rol before push in login\",login.rol)\r\n            return '12'\r\n        })*/\r\n    }\r\n    \r\n    moveRegister(){\r\n        this.props.history.push(\"/sign_up\")\r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            <Grid container item spacing={4} component=\"main\" className=\"root\" >\r\n                <CssBaseline/>\r\n\r\n                <Grid item xs={12} sm={6} md={6} component={Paper} elevation={6} square>\r\n                    <div className=\"paper\">\r\n                        <div className=\"Avatar_login\">\r\n                            <Fab color=\"primary\" size={'large'} >\r\n                                <LockOutlinedIcon />\r\n                            </Fab>\r\n                        </div>\r\n                        <h2>INTERMODALIDAPP</h2>\r\n                        <div className=\"title\">\r\n                            <Typography component=\"h1\" variant=\"h5\" >Inicio de Sesión</Typography>\r\n                        </div>\r\n                        <div className=\"stepper_login\">\r\n                            <StepLogin />\r\n                        </div>\r\n                        <form className=\"form\" noValidate>\r\n                            \r\n                            <Grid container item spacing={3} justify=\"center\">\r\n                                <Grid item xs={10} sm={10} > \r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" className=\"footer_login\">\r\n                                        {'Intermodalidapp & '}\r\n                                        <LinkUI color=\"inherit\" href=\"https://material-ui.com/\">\r\n                                            Material-UI\r\n                                        </LinkUI>\r\n                                    </Typography>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={false} sm={6} md={6} className=\"image\"/>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    };\r\n };\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n       fill: (text) => {dispatch(fill(text))},\r\n       send: (text) => {dispatch(send(text))}\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Log_in));","// Open the train\nexport const opent = (option) =>{\n    return {\n        type: 'OPENT',\n        payload: option\n    }\n}","import React, { Component } from 'react'\nimport '../css/train.css';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid' \n// open Train \nimport {opent} from '../_actions/Train';\nimport train from '../resources/Train.png';\nimport { withRouter } from 'react-router-dom';\n\n//redux\nimport {connect} from 'react-redux'\n\n\nclass Train extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {}\n        this.openTrain = this.openTrain.bind(this)\n    }\n    openTrain(){this.props.opent('close train')}\n\n    render(){\n        \n        const {Train} = this.props\n        let title = 'Estado del Tren: '+ this.props.name\n        return(\n            \n            <Dialog open={Train.opent}>\n                \n                <DialogTitle align={\"center\"}>\n                    <div className=\"title\"><b>{title}</b></div>\n                    \n                </DialogTitle>\n                <DialogContent>\n                    <Grid container direction=\"row\" item={true} spacing={1} className=\"all\">\n                        <Grid item xs={12} sm={4} md={4} align=\"center\">\n                            <img src={train} alt=\"train\" width=\"150\" height=\"110\"/>\n                        </Grid>\n                        <Grid item xs={12} sm={4} md={4} align=\"center\" >\n                            <div className=\"TrainE\">\n                                <h2>{parseInt(this.props.capacity)-parseInt(this.props.places)}</h2>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} sm={4} md={4} align=\"center\">\n                            <div className=\"TrainF\">\n                                <h2>{this.props.places}</h2>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} sm={8} md={8} align=\"center\" className=\"text_info\">\n                            <p>\n                            Contenedor <b>Verde</b> indica la cantidad\n                            de plataformas <i>libres del tren</i>\n                            </p>\n                        </Grid>\n                        <Grid item xs={12} sm={4} md={4} align=\"center\" >\n                            <div className=\"TrainSE\"/>\n                        </Grid>\n                        <Grid item xs={12} sm={8} md={8} align=\"center\" className=\"text_info\" >\n                            <p>\n                            Contenedor <b>Rojo</b> indica la cantidad\n                            de plataformas <i>ocupadas del tren</i>\n                            </p>\n                        </Grid>\n                        <Grid item xs={12} sm={4} md={4} align=\"center\">\n                            <div className=\"TrainSF\"/>\n                            \n                        </Grid>\n\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.openTrain}> cerrar </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       Train: state.Train\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        opent: (option) => {dispatch(opent(option))},\n        \n    }\n}\nexport default withRouter((connect(mapStateToProps,mapDispatchToProps)(Train)));","import React, { Component } from 'react'\nimport '../css/cardServices.css';\n\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n\n//import DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n//import EditService from '../components/EditService';\nimport EventIcon from '@material-ui/icons/Event';\nimport Fab from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid' \n\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Train from './Train'\nimport TrainIcon from '@material-ui/icons/Train';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\n\nimport {connect} from 'react-redux'\n// open Train \nimport {opent} from '../_actions/Train';\nimport {change_dialog,openES} from '../_actions/Dialog'\n\n\n//var wtf8 = require('wtf-8');\n\nclass CardServices extends Component {\n    constructor(props){\n        super(props);  \n        this.state = {\n            dialogVerMas: false,\n            dialogReservar: false,\n            openT: false,\n            open: false,\n            id: 0,\n            cities:{\n               'bogotá':\"Bogotá\",\n               'barranquilla': 'Barranquilla',\n               'cartagena':'Cargtagena',\n               'dorada':'La Dorada',\n               'santa marta':'Santa Marta',\n            }\n        }\n        this.openTrain = this.openTrain.bind(this);\n        /*this.handleClose = this.handleClose.bind(this);*/\n          \n    }\n    openEdit(){\n        this.props.change_dialog(['id_service',this.props.card.id])\n        this.props.openES();\n    }\n\n    openTrain(){this.props.opent('open train')}\n    render(){\n        \n        return(\n            <Grid item xs={12} sm={12} md={6}>\n                <Card raised={true} className=\"card\">\n                    <CardHeader\n                        avatar={<div className=\"avatar\">R</div>}\n                        title= {this.props.card.title}\n                        subheader= {this.props.card.class+\"  &  \"+this.props.card.transport}\n                        action={<IconButton aria-label=\"settings\"><MoreVertIcon /></IconButton>} \n                    />\n                    <CardContent>\n                        <Grid container direction=\"row\" className=\"body\">\n                            <Grid item xs={6} md={6} align=\"center\" >\n                                <PlaceIcon color={'primary'}/>\n                                <h2>Lugar de origen</h2>\n                                <h5>{this.state.cities[this.props.card.origin]}</h5>\n                            </Grid>\n                            <Grid item xs={6} md={6} align=\"center\" >\n                                <PlaceIcon color={'secondary'}/>\n                                <h2>Lugar de destino</h2>\n                                <h5>{this.state.cities[this.props.card.destination]}</h5>\n                            </Grid>\n\n                            <Grid item xs={6} md={6} align=\"center\" >\n                                <EventIcon color={'secondary'}/>\n                                <h2>Fecha de salida</h2>\n                                {this.props.card.date_start.slice(0,21)}\n                            </Grid>\n                            <Grid item xs={6} md={6} align=\"center\" >\n                            <EventIcon color={'primary'}/>\n                                <h2>Fecha de llegada</h2>\n                                {this.props.card.date_end.slice(0,21)}\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <CardActions>\n                        <Grid item xs={2} sm={2} align=\"center\">\n                            {this.props.card.transport === 'terrestre' ? \n                                <br/> : \n                                <Fab color=\"secondary\" size={'small'}>\n                                    <TrainIcon onClick={this.openTrain}/>\n                                </Fab>\n                            }\n                            <Train \n                                free={this.props.card.places} \n                                capacity={this.props.card.capacity} \n                                name={this.props.card.title}\n                                \n                                />\n                        </Grid>\n                        <Grid item xs={4} sm={6} align=\"center\"></Grid>\n                        <Grid item xs={3} sm={2} align=\"center\">\n                            <Tooltip title=\"Editar servicio\">\n                                <Fab color=\"primary\" size={'small'} > \n                                    <EditIcon onClick={this.openEdit.bind(this)}/> \n                                </Fab>\n                            </Tooltip>\n                        </Grid>\n                        <Grid item xs={3} sm={2} align=\"center\">\n                            <Fab color=\"secondary\" size={'small'}><VisibilityOffIcon  onClick={this.handleClickButton2}/></Fab>\n                        </Grid>\n                    </CardActions>\n                </Card>\n                \n            </Grid>\n            \n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       Train: state.Train\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        change_dialog: (option) => {dispatch(change_dialog(option))},\n        opent: (option) => {dispatch(opent(option))},\n        openES: (option) => {dispatch(openES(option))},\n        /*change: (option) => {dispatch(change(option))},\n       changeName: (option) => {dispatch(changeName(option))}*/\n    }\n}\n\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(CardServices));","import React, { Component } from 'react'\n\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Grid from '@material-ui/core/Grid';\n\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport { withRouter } from 'react-router-dom';\n\nimport {connect} from 'react-redux'\nimport {change_dialog} from '../_actions/Dialog'\n\nclass DateTime extends Component {\n    \n    constructor(props){\n       super(props);\n        this.state = {\n            //selectedDate: new Date('2019-10-31T09:00:00')\n            selectedDate: new Date()\n        }\n       this.ChangeOption = this.ChangeOption.bind(this)\n    }\n    ChangeOption(event){\n       //console.log(event)\n       \n        this.setState({\n            selectedDate: event\n        })\n        if (this.props.labelDate === 'Fecha Salida'){\n            this.props.change_dialog(['salida',event])\n        }else{\n            this.props.change_dialog(['llegada',event])\n        }\n       \n    }\n     \n \n    render(){\n       //const {DateTime} = this.props;\n       \n        return(\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <Grid container justify=\"space-around\">\n                    <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    id=\"date-picker-inline\"\n                    label={this.props.labelDate}\n                    value={this.state.selectedDate}\n                    onChange={this.ChangeOption}\n                    KeyboardButtonProps={{'aria-label': 'change date'}}\n                    />\n                    \n                    <KeyboardTimePicker\n                    margin=\"normal\"\n                    id=\"time-picker\"\n                    label={this.props.labelTime}\n                    value={this.state.selectedDate}\n                    onChange={this.ChangeOption}\n                    KeyboardButtonProps={{'aria-label': 'change time'}}\n                    /> \n                </Grid>\n            </MuiPickersUtilsProvider>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       Dialog: state.Dialog,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n       change_dialog: (date) => {dispatch(change_dialog(date))}\n    }\n}\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(DateTime));","import React, { Component } from 'react'\nimport '../css/cities.css'; \n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport { RadioGroup, Collapse} from '@material-ui/core';\n\nimport {connect} from 'react-redux'\nimport {change_dialog} from '../_actions/Dialog'\n\nclass ListCities extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            open: false,\n            setOpen: false,\n            text: '',\n            cities:[\n                { label: 'Bogotá',value: 'bogotá' },\n                { label: 'Santa Marta',value: 'santa marta'},\n                { label: 'Barranquilla',value: 'barranquilla'},\n                { label: 'Cartagena',value: 'cartagena'},\n                { label: 'La Dorada',value: 'dorada'},\n                { label: 'Belencito',value: 'belencito'},\n            ],\n            name:{\n                'bogotá':\"Bogotá\",\n                'barranquilla': 'Barranquilla',\n                'cartagena':'Cargtagena',\n                'dorada':'La Dorada',\n                'santa marta':'Santa Marta',\n            },\n            checked: ''\n        }\n        this.OpenList = this.OpenList.bind(this);\n        this.ChangeOption = this.ChangeOption.bind(this);\n\n    }\n    OpenList(){\n        this.setState({open: !this.state.setOpen, setOpen: !this.state.open})\n        \n    }\n\n    async ChangeOption(event){\n        let option = event.target.value\n        this.props.change_dialog([this.props.type,option]);\n        this.setState({ text: this.state.name[option] })\n        this.props.change_dialog(['checked',option])\n    }\n    \n    render(){\n        \n        const {dialog} = this.props\n        let cities = this.state.cities.map((city)=>{\n            if (dialog.checked !== city.value && city.value !== dialog.origin && city.value !== dialog.destination){\n                return(\n                    <ListItem>\n                        <FormControlLabel \n                            control={ \n                                <Radio \n                                    className=\"list\" \n                                    onChange={this.ChangeOption} \n                                    disabled={false}\n                                    value={city.value}/>\n                            }\n                            label={city.label}/>\n                    </ListItem>\n                )\n            }\n        })\n\n        return(\n            <List justify=\"center\" style={{color:this.props.color}}>\n                \n                <ListItem button onClick={this.OpenList}>\n                <ListItemText primary={\n                        this.state.text === '' ? \n                        this.props.type : \n                        this.props.type +\" : \"+this.state.text\n                    }/>\n                    {this.state.open ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n                    <RadioGroup>\n                        {cities}\n                    </RadioGroup>\n                </Collapse>\n            </List>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        dialog: state.Dialog,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n       change_dialog: (value) => {dispatch(change_dialog(value))},\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(ListCities);","import React, { Component } from 'react'\nimport '../css/cities.css'; \n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport { RadioGroup, Collapse } from '@material-ui/core';\n\nimport {connect} from 'react-redux'\nimport {change_dialog} from '../_actions/Dialog'\n\nclass ListTrans extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            open: false,\n            setOpen: false,\n            text: ''\n        }\n        this.OpenList = this.OpenList.bind(this);\n        this.ChangeOption = this.ChangeOption.bind(this);\n\n    }\n    OpenList(){\n        this.setState({open: !this.state.setOpen, setOpen: !this.state.open})\n    }\n\n    async ChangeOption(event){\n        let option = event.target.value\n        this.props.change_dialog([this.props.type,option]);\n        this.setState({ text: option })\n    }\n    \n    render(){\n        \n        //console.log(\"cities: \",ListTrans)\n        return(\n            <List justify=\"center\">\n                <ListItem button onClick={this.OpenList}>\n                <ListItemText primary={\n                        this.state.text === '' ? \n                        this.props.type : \n                        this.props.type +\" --- > \"+this.state.text\n                    }/>\n                    {this.state.open ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n                    <RadioGroup>\n                        <ListItem >\n                            <FormControlLabel control={ <Radio className=\"list\" onChange={this.ChangeOption} value=\"terrestre\" name={\"algo\"}/>}\n                            label=\"Terrestre\"/>\n                        </ListItem>\n                        <ListItem >\n                            <FormControlLabel control={ <Radio className=\"list\" onChange={this.ChangeOption} value=\"ferreo\"/>}\n                            label=\"Ferreo\"/>\n                        </ListItem>    \n                        <ListItem >\n                            <FormControlLabel control={ <Radio className=\"list\" onChange={this.ChangeOption} value=\"fluvial\"/>}\n                            label=\"Fluvial\"/>\n                        </ListItem>\n                        <ListItem >\n                            <FormControlLabel control={<Radio className=\"list\" onChange={this.ChangeOption} value=\"aereo\"/>}\n                            label=\"Aereo\"/>\n                        </ListItem>\n                    </RadioGroup>\n                </Collapse>\n            </List>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        dialog: state.Dialog,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        change_dialog: (value) => {dispatch(change_dialog(value))},\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(ListTrans);","import React,{Component}   from 'react';\nimport '../css/stepper_service.css';\n\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport BackDrop from '../components/BackDrop'\nimport Button from '@material-ui/core/Button';\nimport DateTime from './DateTime'\nimport Fab from '@material-ui/core/Fab';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport ListCities from './ListCities'\nimport ListTrans from './ListTrans'\nimport Popover from '@material-ui/core/Popover';\n\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography'; \n//import {withRouter } from 'react-router-dom';\n\nimport {connect} from 'react-redux'\n// load data to service\nimport {open, change_dialog, create } from '../_actions/Dialog';\n// view loading\nimport {openBD} from '../_actions/actions_backdrop' \nimport { openSnack } from '../_actions/actions_snack'\n\n\nclass StepService extends Component{\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            openP: false,\n            activeStep: 0,\n            setActiveStep: 0,\n            skipped: new Set(),\n            setSkipped: new Set(),\n            steps: ['Descripción', 'Programación'],\n            checked: true,\n            message_backdrop: 'Creando servicio..',\n            \n\n        }\n        /*const [activeStep, setActiveStep] = React.useState(0);\n        const [skipped, setSkipped] = React.useState(new Set());\n        const steps = getSteps();*/\n        this.isStepSkipped = this.isStepSkipped.bind(this);\n        this.isStepOptional = this.isStepOptional.bind(this);\n        this.handleNext = this.handleNext.bind(this);\n        this.handleBack = this.handleBack.bind(this);\n        this.changeState= this.changeState.bind(this);\n    }\n    changeState(event){\n        //console.log(\"entry changeState\")\n        let {id , value} = event.target\n        this.props.change_dialog([id,value])\n    }\n\n    //change que switch state\n    handleChange(){ this.props.change_dialog(['visibility','any'])}\n     \n    // Create Service request\n    createService(){\n        \n        // open backDrop\n        // send request to create services\n        setTimeout(() => { \n            this.props.openbd()\n            this.props.create()    \n        }, 1000);\n        \n        //verify if the service its created\n        setTimeout(() => { \n            let {dialog} = this.props\n            if (dialog.service_created){\n                this.props.openbd()\n                this.props.open('close')\n                //this.props.open_snack('snack_alert');\n                this.props.open_snack('snack_alert')\n                setTimeout(() => { this.props.open_snack('snack_alert');}, 4000);\n            }\n        }, 3000);\n        \n    }\n\n    getStepContent(step) {\n        switch (step) {\n            case 0:\n                const id = this.state.open ? 'simple-popover' : undefined;\n                return (\n                    <div>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"title\"\n                            label=\"Nombre del servicio\"\n                            autoFocus\n                            onChange={this.changeState}\n                        />\n                        <ListTrans type={\"Transporte\"}/>\n                        <Grid container spacing={1} direction={'row'}>\n                            <Grid item xs={5}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    disabled={false}\n                                    fullWidth\n                                    id=\"capacity\"\n                                    label=\"Capacidad total\"\n                                    autoFocus\n                                    onChange={this.changeState}\n                                />\n                            </Grid>\n                            <Grid item xs={5}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    fullWidth\n                                    id=\"places\"\n                                    label=\"Espacios libres\"\n                                    autoFocus\n                                    onChange={this.changeState}\n                                />\n                            </Grid>\n                            \n                            <Grid item xs={2} align={'center'} >\n                                <div className=\"clip_info\"/>\n                                <Fab color=\"secondary\" size={'small'}>\n                                    <AttachFileIcon onClick={this.openPop}/>\n                                    <Popover\n                                        id={id}\n                                        open={this.state.openP}\n                                        anchorEl={this.state.anchorEl}\n                                        onClose={this.openPop}\n                                        anchorOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'center',\n                                        }}\n                                        transformOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'center',\n                                        }}\n                                    >\n                                        <Typography className=\"typography\">\n                                        <b>Capacidad: </b>Plataformas que posee el tren \n                                        </Typography>\n                                        <Typography className=\"typography\">\n                                        <b>Espacios: </b>Plataformas disponibles del tren\n                                        </Typography>\n                                    </Popover>\n                                </Fab>\n                            </Grid>\n                        </Grid>\n                        \n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            //required\n                            fullWidth\n                            id=\"cost\"\n                            label=\"Costo\"\n                            name=\"costo\"\n                            autoFocus\n                            onChange={this.changeState}\n                        />\n                    </div>\n                )\n            case 1:\n                let {dialog} = this.props\n                return (\n                    <div>\n                        <Grid container direction=\"row\">\n                            <Grid item xs={6}>\n                                <ListCities type={\"Origen\"} color=\"#132947\"/>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <ListCities type={\"Destino\"} color=\"#132947\"/>\n                            </Grid>\n                        </Grid>\n                        <Grid container direction={'row'}>\n                            <Grid item xs={6}>\n                                <DateTime labelDate={\"Fecha Salida\"} labelTime={\"Hora Salida\"}/>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <DateTime labelDate={\"Fecha Llegada\"} labelTime={\"Hora Llegada\"}/>        \n                            </Grid>\n                        </Grid>\n\n                        <Grid container direction={'row'} className=\"switch\">\n                            <Grid item xs={8} align=\"center\">\n                                Permite que otros usuarios vean el servicio\n                            </Grid>\n                            <Grid item xs={4} align=\"center\">\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={dialog.visibility}\n                                            onChange={this.handleChange.bind(this)}\n                                            value=\"checked\"\n                                            color=\"primary\"\n                                            inputProps={{ 'aria-label': 'primary checkbox' }}\n                                        />\n                                    }label=\"Hacer visible\"\n                                />\n                            </Grid>\n                        </Grid>\n                        \n                    </div>\n                )\n            default:\n                return 'Unknown step';\n        }\n    }\n    \n   \n\n\n    isStepOptional = step => { return step === 1;};\n    isStepSkipped = step => {return this.state.skipped.has(step);};\n\n    async handleNext() {\n        await this.setState({activeStep: this.state.activeStep + 1})\n    };\n\n    async handleBack () {\n        await this.setState({activeStep: this.state.activeStep - 1})\n        //console.log(\"hallo: \",this.state.activeStep)\n    };\n\n    handleSkip = () => {\n        if (!this.isStepOptional(this.state.activeStep)) {\n        // You probably want to guard against something like this,\n        // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        //this.state.setActiveStep(prevActiveStep => prevActiveStep + 1);\n        this.setState({\n            setActiveStep: prevActiveStep => prevActiveStep + 1\n        })\n        this.setState({\n            setSkipped: prevSkipped => {\n                const newSkipped = new Set(prevSkipped.values());\n                newSkipped.add(this.state.activeStep);\n                return newSkipped;\n            }\n        })\n        /*this.state.setSkipped(prevSkipped => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(this.state.activeStep);\n            return newSkipped;\n        });*/\n    };\n\n    handleReset = () => {\n        this.setState({activeStep: 0})\n    };\n    \n\n    \n    render(){\n        \n        return(\n            <div className=\"root\">\n                <Grid container direction=\"row\">\n                    <Grid item xs={12} sm={12} md={12}>\n                        <Stepper activeStep={this.state.activeStep}>\n                            {   \n                                this.state.steps.map((label, index) => {\n                                    const stepProps = {};\n                                    const labelProps = {};\n                                    if (this.isStepSkipped(index)) {\n                                        stepProps.completed = false;\n                                    }\n                                    return (\n                                        <Step key={label} {...stepProps}>\n                                            <StepLabel {...labelProps}>{label}</StepLabel>\n                                        </Step>\n                                    );\n                                })\n                            }\n                        </Stepper>\n                    </Grid>\n                            \n                    <Grid item xs={12} sm={12} md={12}>\n                        <BackDrop message={this.state.message_backdrop}/>\n                        <div>\n                            {this.state.activeStep === this.state.steps.length ? (\n                                <div>\n                                    <Grid item xs={12} align=\"center\">\n                                    <Typography className=\"instructions\">\n                                        Servicio configurado correctamente.\n                                    </Typography>\n                                    </Grid>\n\n                                    <Grid container direction=\"row\" className=\"buttons\">\n                                        <Grid item xs={4} sm={4} md={4} align=\"center\">\n                                            <Button \n                                                fullWidth\n                                                variant=\"outlined\"\n                                                color=\"inherit\"\n                                                onClick={this.handleReset}\n                                                className=\"button\"\n                                                >\n                                                Reiniciar\n                                            </Button>\n                                        </Grid>\n                                        <Grid item xs={4} sm={4} md={4}></Grid>\n                                        <Grid item xs={4} sm={4} md={4} align=\"center\">\n                                            <Button\n                                                fullWidth\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={this.createService.bind(this)}\n                                                className=\"button\"\n                                                >\n                                                Crear\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                    \n                                </div>\n                            ) : (\n                                <div>\n                                    <Typography className=\"instructions\"></Typography>\n                                    {this.getStepContent(this.state.activeStep)}\n                                    <div>\n                                        <Grid container direction=\"row\" className=\"buttons\">\n                                            <Grid item xs={4} sm={4} md={4} align=\"center\">\n                                                <Button \n                                                    fullWidth\n                                                    variant=\"contained\"\n                                                    color=\"secondary\"\n                                                    disabled={this.state.activeStep === 0} \n                                                    onClick={this.handleBack} \n                                                    className=\"button\"\n                                                    >\n                                                    Atras\n                                                </Button>\n                                            </Grid>\n                                            <Grid item xs={4} sm={4} md={4}></Grid>\n                                            <Grid item xs={4} sm={4} md={4} align=\"center\">\n                                                <Button\n                                                    fullWidth\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    onClick={this.handleNext}\n                                                    className=\"button\"\n                                                    >\n                                                    {this.state.activeStep === this.state.steps.length - 1 ? 'Terminar' : 'Siguiente'}\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </Grid>\n                </Grid>    \n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       dialog: state.Dialog,\n       Login : state.Login,\n       register: state.Register\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        create: (date) => {dispatch(create(date))},\n        change_dialog: (date) => {dispatch(change_dialog(date))},\n        open: (text) => {dispatch(open(text))},\n        openbd: (text) => {dispatch(openBD(text))},\n        open_snack: (text) => {dispatch(openSnack(text))},\n    }\n}\n \nexport default connect(mapStateToProps,mapDispatchToProps)(StepService);","import React, { Component } from 'react'\nimport '../css/dialog.css'; \n\n//import AttachFileIcon from '@material-ui/icons/AttachFile';\n//import Button from '@material-ui/core/Button';\n//import DateTime from './DateTime'\nimport Dialog from '@material-ui/core/Dialog';\n//import DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport Fab from '@material-ui/core/Fab';\nimport { Grid } from '@material-ui/core';\n\n//import ListCities from './ListCities'\n//import ListTrans from './ListTrans'\n//import Popover from '@material-ui/core/Popover';\n\nimport StepService from '../components/StepService';\nimport store from '../store'\n//import TextField from '@material-ui/core/TextField';\n\n\n//import Typography from '@material-ui/core/Typography';\n\n\nimport {connect} from 'react-redux'\nimport {create,change_dialog,open} from '../_actions/Dialog'\n\nclass DialogService extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            /*SetOpenO: false,\n            openO: false,\n            openD: false,\n            setOpenD: false,\n            openT: false,\n            setOpenT: false,\n            //popOver\n            openP: false,\n            anchorEl: null*/\n            openP: false,\n            anchorEl: null\n        }\n        \n        //this.handleClick = this.handleClick.bind(this)\n        //this.handleClose = this.handleClose.bind(this)\n        this.SendRequest = this.SendRequest.bind(this);\n        this.openPop = this.openPop.bind(this);\n        \n        this.closeDialog = this.closeDialog.bind(this);\n    }\n\n    openPop(event){\n        this.setState({ anchorEl: event.currentTarget, openP: !this.state.openP })\n    }\n\n    componentDidMount(){ \n        let id_user = store.getState().Login.id_user\n        this.props.change_dialog(['id_user',id_user])\n    }\n\n    /*async changeState(event){\n        const target = event.target.id;\n        const value = event.target.value;\n        this.props.change([target,value])\n    }*/\n\n    async SendRequest(){this.props.open('io')}\n    closeDialog(){ this.props.open('dialog')}\n    render(){\n        \n        const { dialog } = this.props;\n        //console.log(\"dialog\",dialog)\n\n        //const id = this.state.open ? 'simple-popover' : undefined;\n        return(\n            <Dialog open={dialog.open}>\n                <DialogTitle >\n                    <Grid container direction=\"row\">\n                        <Grid item xs={5} md={5}>{\"Crear Nuevo Servicio\"}</Grid>\n                        <Grid item xs={3} md={3}></Grid>\n                        <Grid item xs={4} md={4} align=\"right\">\n                            <Fab color=\"primary\" size=\"small\" >\n                                <ExitToAppIcon onClick={this.closeDialog}/>\n                            </Fab>\n                        </Grid>\n                    </Grid>\n                </DialogTitle>\n                <DialogContent>\n                    <StepService/>\n                </DialogContent>\n            </Dialog>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       dialog: state.Dialog,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        create: (text) => {dispatch(create(text))},\n        change_dialog: (text) => {dispatch(change_dialog(text))},\n        open: (date) => {dispatch(open(date))},\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(DialogService);","import React, { Component } from 'react'\nimport '../css/panel.css'; \n\nimport Button from '@material-ui/core/Button';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\n\n\nvar wtf8 = require('wtf-8');\nclass Panel extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            open: false\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n    handleChange(){this.setState({open: !this.state.open})}\n    \n\n    render(){\n        //console.log(\"this.props in panel: \",this.props.cardReq)\n        return(\n            <div className=\"wrap\">\n                <List className=\"list\">\n                    <ListItem> \n                        <ExpansionPanel expanded={this.state.open} onChange={this.handleChange}>\n                            <ExpansionPanelSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1bh-content\"\n                                id=\"panel1bh-header\"\n                                >\n                                <Typography className=\"heading\">{wtf8.decode(this.props.cardReq.title)}</Typography>\n                                <Typography className=\"secondaryHeading\">{this.props.cardReq.accept}</Typography>\n                                </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                            \n                            <Grid container direction={\"row\"}>\n                                <Grid item xs={12} md={12} sm={12}>\n                                    <Typography>\n                                        Cada petición presentada por el usuario tiene un cuerpo, el cual \n                                        presenta de manera resumida la intención de la misma, en esta ocasión es\n                                        presentado a continuación:<br/><br/>\n                                        {wtf8.decode(this.props.cardReq.body)}\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={4} md={8} sm={4} className=\"item\"></Grid>\n                                <Grid item xs={4} md={2} sm={4} className=\"item\" align=\"right\">\n                                    <Button variant='contained' color=\"secondary\">Aceptar</Button>\n                                </Grid>\n                                <Grid item xs={4} md={2} sm={4} className=\"item\" align=\"right\">\n                                    <Button variant=\"outlined\" color=\"secondary\">Rechazar</Button>\n                                </Grid>\n                            </Grid>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>    \n                    </ListItem>\n                </List>\n            </div>\n        )\n    }\n}\n\nexport default Panel;","import API_ROUTE from '../constants/api_route'\nconst axios = require(\"axios\")\n\nexport const openr = (option) =>{\n    return {\n        type: 'OPENR',\n        payload: option\n    }\n}\n\n//change the request values\nexport const changer = (option) =>{\n    return {\n        type: 'CHANGER',\n        payload: option\n    }\n}\n\n\n// Load all request\nexport const loadr = () =>{\n    return(dispatch)=> {\n        axios.post(API_ROUTE, {\n            query: `query{\n                getRequests{\n                    id\n                    title\n                    body\n                    accept\n                }\n            }`\n        }).then((result)=>{\n            //let request  = result.data.data.getRequests\n            //dispatch(changer(['requests',request]))\n        }).catch(err => console.log(err))\n    } \n    \n}\n","import React, { Component } from 'react'\nimport '../css/dialogN.css'; \n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { CssBaseline, Grid} from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\n/*import ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';*/\nimport Panel from './Panel'\nimport Slide from '@material-ui/core/Slide';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport {connect} from 'react-redux'\nimport {openDN} from '../_actions/Dialog'\nimport {loadr} from '../_actions/Request'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nclass DialogNotification extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            openP: false,\n            anchorEl: null\n        }\n        \n        //this.handleClick = this.handleClick.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n    }\n    componentDidMount(){this.props.loadr('load requests')}\n    handleClose(){\n        this.props.openDN('dialogN')\n    }\n    render(){\n        const { dialog } = this.props;\n        const { request } = this.props;\n        //console.log(\"request_ :\",request['requests'])\n        let requestCard = request['requests'].map(card=>{\n            return(\n                <Panel key={card.id} cardReq={card}/>\n            )\n        })\n        \n        return(\n            <Dialog fullScreen open={dialog.openN} onClose={this.handleClose} TransitionComponent={Transition}>\n                <div className=\"root-not\">\n                <Grid container direction=\"row\">\n                    <Grid item xs={12}>\n                        <AppBar className=\"appBar\">\n                            <Toolbar>\n                                <IconButton edge=\"start\" color=\"inherit\" onClick={this.handleClose} aria-label=\"close\">\n                                    <CloseIcon />\n                                </IconButton>\n                                <Typography variant=\"h6\" className=\"title\"></Typography>\n                                <Button \n                                    variant=\"contained\" \n                                    color=\"secondary\" \n                                    onClick={this.handleClose}>\n                                    save\n                                </Button>\n                            </Toolbar>\n                        </AppBar>\n                        <CssBaseline/> \n                    </Grid>\n                    <Grid container  direction=\"column\" >\n                        {requestCard}                            \n                    </Grid>\n                </Grid>\n                </div>\n                \n            </Dialog>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       dialog: state.Dialog,\n       request: state.Request,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n       openDN: (date) => {dispatch(openDN(date))},\n       // load requests\n       loadr: (date) => {dispatch(loadr(date))}\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(DialogNotification);","import React,{Component}   from 'react';\nimport '../css/dialogInformation.css';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Fab from '@material-ui/core/Fab';\nimport { Grid } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nimport {connect} from 'react-redux'\nimport {openDI} from '../_actions/Dialog'\n\n\nclass DialogInformation extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n    closeDialog(){\n        this.props.openDI('close')\n    }\n \n    render(){\n        let {dialog} = this.props\n\n        return(\n            <Dialog open={dialog.openI}>\n                <DialogTitle >\n                    <Grid container direction=\"row\">\n                        <Grid item xs={6} md={6} className=\"dialogInfo_text\">\n                            {\"Información\"}\n                        </Grid>\n                        <Grid item xs={2} md={2}></Grid>\n                        <Grid item xs={4} md={4} align=\"right\">\n                            <Tooltip title=\"Cerrar menú\">\n                                <Fab color=\"primary\" size=\"small\" >\n                                    <CloseIcon onClick={this.closeDialog.bind(this)}/>\n                                </Fab>\n                            </Tooltip>\n                            \n                        </Grid>\n                    </Grid>\n                </DialogTitle>\n                <DialogContent>\n                    {\n                        localStorage.getItem('view') === 'services' ? \n                        <Grid container direction=\"row\" alignItems=\"center\">\n                            <Grid item xs={10} md={10}>\n                                <p className=\"dialogInfo_text\">\n                                    Bienvenido al portal de creación de servicios,\n                                    al salir de este menú podra encontrar un boton de +\n                                    con el cual podra registrar sus servicios.\n                                </p>        \n                            </Grid>\n                            <Grid item xs={2} md={2} align=\"center\">\n                                <Fab color=\"secondary\" size=\"medium\"  >\n                                    <AddIcon style={{ fontSize: 30 }}/>\n                                </Fab>\n                            </Grid>\n                        </Grid>\n                        :\n                        <Grid container direction=\"row\" alignItems=\"center\">\n                            <Grid item xs={10} md={10} align=\"center\">\n                                <p className=\"dialogInfo_text\">\n                                    Bienvenido al portal, para buscar un nuevo servicio presione \n                                </p>        \n                            </Grid>\n                            <Grid item xs={2} md={2} align=\"center\">\n                                <MenuIcon style={{ fontSize: 32 }} />       \n                            </Grid>\n                            <Grid item xs={10} md={12}>\n                                <p className=\"dialogInfo_text\">\n                                    A continuación encontrará un menú, ahi podrá seleccionar\n                                    el origen y destino\n                                </p>        \n                            </Grid>\n                            <Grid item xs={10} md={10}>\n                                <p className=\"dialogInfo_text\">\n                                    Finalmente para obtener las alternativas\n                                    debe presionar\n                                    \n                                </p>        \n                            </Grid>\n                            <Grid item xs={2} md={2} align=\"center\">\n                                <SearchIcon style={{ fontSize: 34 }}/>      \n                            </Grid>\n                        </Grid>\n                    }\n                    \n                </DialogContent>                \n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       dialog: state.Dialog,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n       openDI: (date) => {dispatch(openDI(date))},\n    }\n}\n \nexport default connect(mapStateToProps,mapDispatchToProps)(DialogInformation);","import React,{Component}   from 'react';\n \nimport BackDrop from '../components/BackDrop'\nimport Button from '@material-ui/core/Button';\nimport DateTime from './DateTime'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Fab from '@material-ui/core/Fab';\nimport { Grid } from '@material-ui/core';\nimport Slider from '@material-ui/core/Slider';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport {connect} from 'react-redux'\nimport {openBD} from '../_actions/actions_backdrop' \nimport {change_dialog,openES,update} from '../_actions/Dialog'\nimport { openSnack } from '../_actions/actions_snack'\n\nclass EditService extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            message_backdrop: 'Actualizando servicio..',\n        }\n    }\n    \n    closeDialog(){\n        this.props.openES('close')\n    }\n    \n    ValueLabelComponent(props) {\n        const { children, open, value } = props;\n      \n        return (\n          <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n            {children}\n          </Tooltip>\n        );\n    }\n\n    changeState(event){\n        \n        let {id , value} = event.target\n        console.log(\"change state \",id, value)\n        //this.props.change_dialog([id,value])\n    }\n\n    changeSlider(event, value){\n        setTimeout(() => {\n            this.props.change_dialog(['places',value])    \n        }, 2000);\n    }\n\n    //update service\n    updateService(){\n        \n        // open backdrop\n        this.props.openbd('open')\n        setTimeout(() => {\n            // send request to update service\n            let { dialog } = this.props;\n            this.props.update(dialog.id_service);\n        }, 1000);\n\n        setTimeout(() => {\n            // verify if the service was updated\n            let { dialog } = this.props;\n            console.log(dialog.service_updated)\n            if(dialog.service_updated){\n                this.props.open_snack('snack_alert')\n                setTimeout(() => { this.props.open_snack('snack_alert');}, 4000);\n            }\n            this.props.openbd('console.log')\n            this.props.openES('close')\n        }, 4000);\n\n        \n    }\n\n    render(){\n        \n        var values = 'hola,0'\n        let { dialog } = this.props;\n        let { cards } = dialog\n        let capacity = cards.map((card) => {\n            if (parseInt(card.id) === parseInt(dialog.id_service)){\n                let { places} = card\n                return places\n            }else{ return 0}\n        })\n        \n        values = capacity[dialog.id_service-1]\n        \n\n        return(\n            <Dialog open={dialog.openES}>\n                <BackDrop message={this.state.message_backdrop}/>\n                <DialogTitle >\n                    <Grid container direction=\"row\">\n                        <Grid item xs={5} md={5}>{\"Editar Servicio\"}</Grid>\n                        <Grid item xs={3} md={3}></Grid>\n                        <Grid item xs={4} md={4} align=\"right\">\n                            <Fab color=\"primary\" size=\"small\" >\n                                <ExitToAppIcon onClick={this.closeDialog.bind(this)}/>\n                            </Fab>\n                        </Grid>\n                    </Grid>\n                </DialogTitle>\n                <DialogContent>\n                    \n                    <Grid container direction={'row'}>\n                        <Grid item xs={6}>\n                            <DateTime labelDate={\"Fecha Salida\"} labelTime={\"Hora Salida\"}/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <DateTime labelDate={\"Fecha Llegada\"} labelTime={\"Hora Llegada\"}/>        \n                        </Grid>\n                    </Grid>\n\n                    <Grid container style={{paddingTop: '30px'}} spacing={3} direction={'row'}>\n                        <Grid item xs={4}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                disabled={true}\n                                fullWidth\n                                value={30 - values + ' plataformas'}\n                                id=\"capacity\"\n                                label=\"Espacios libres\"\n                                autoFocus\n                                //onChange={this.changeState.bind(this)}\n                            />\n                        </Grid>\n                        <Grid item xs={8} align=\"center\">\n                            \n                            <Slider\n                                ValueLabelComponent={this.ValueLabelComponent.bind(this)}\n                                //aria-label=\"custom thumb label\"\n                                defaultValue={values}\n                                min={values}\n                                max={30}\n                                onChange={this.changeSlider.bind(this)}\n                                style={{paddingTop: '20px'}}\n                            />\n                            <Typography gutterBottom>\n                                Mueva el slider para cambiar el valor de los\n                                espacios libres\n                            </Typography>   \n                        </Grid>\n                    </Grid>\n                    <Grid container style={{paddingTop: '30px'}} spacing={3} direction={'row'}>\n                        <Grid item xs={4} align=\"center\">\n                            <Button \n                                fullWidth\n                                variant=\"outlined\"\n                                color=\"inherit\"\n                                onClick={this.handleReset}\n                                className=\"button\"\n                                >\n                                Cancelar\n                            </Button>\n                        </Grid>\n                        <Grid item xs={4} align=\"center\"></Grid>\n                        <Grid item xs={4} align=\"center\">\n                            <Button \n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.updateService.bind(this)}\n                                className=\"button\"\n                                >\n                                Actualizar\n                            </Button>\n                        </Grid>\n                    </Grid>\n\n                    \n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       dialog: state.Dialog,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        change_dialog: (date) => {dispatch(change_dialog(date))},\n        openbd: (text) => {dispatch(openBD(text))},\n        openES: (option) => {dispatch(openES(option))},\n        update: (option) => {dispatch(update(option))},\n        open_snack: (text) => {dispatch(openSnack(text))},\n    }\n}\n \nexport default connect(mapStateToProps,mapDispatchToProps)(EditService);","\nexport const change_menu = (option) =>{\n    return {\n        type: 'CHANGE_MENU',\n        payload: option\n    }\n}\nexport const open_menu = (option) =>{\n    return {\n        type: 'OPEN_MENU',\n        payload: option\n    }\n}","import React,{Component}   from 'react';\n \n \nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem'; \nimport {withRouter } from 'react-router-dom';\n\nimport {connect} from 'react-redux'\nimport {open_menu} from '../_actions/actions_navbar'\n\nclass MenuNav extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n    handleClose(){\n        this.props.open_menu()\n    }\n\n    logOut(){\n        this.props.open_menu()\n        setTimeout(() => { \n            //this.props.verify(validEmail)\n            localStorage.setItem('auth',false)\n            localStorage.setItem('view','home')\n            this.props.history.push(\"/\") \n        }, 1000);\n    }\n\n    returnView(){\n        this.props.open_menu()\n        if (localStorage.getItem('view') === 'user'){\n            this.props.history.push(\"/user\")\n        }else{\n            this.props.history.push(\"/services\")\n        }\n    }\n\n    render(){\n        const menuId = 'primary-search-account-menu';\n        const {Navbar} = this.props\n        return(\n            <div>\n                <Menu\n                    id={menuId}\n                    anchorEl={Navbar.anchorEl}\n                    keepMounted\n                    open={Navbar.open}\n                    onClose={this.handleClose.bind(this)}>\n                    <MenuItem onClick={this.returnView.bind(this)}>Panel</MenuItem>\n                    <MenuItem onClick={this.handleClose.bind(this)}>Administrar tu cuenta</MenuItem>\n                    <MenuItem onClick={this.logOut.bind(this)}>Cerrar Sesión</MenuItem>\n                </Menu>\n            </div>\n        );\n    }\n}\n \nconst mapStateToProps = (state) => {\n    return {\n        Navbar: state.Navbar\n    };\n };\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n        open_menu: (text) => {dispatch(open_menu(text))},\n    }\n}\n\nexport default withRouter((connect(mapStateToProps,mapDispatchToProps)(MenuNav)));","import React, { Component } from 'react'\r\nimport '../css/navbar.css'; \r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\n//import auth from '../router/Auth'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\r\n//import Fab from '@material-ui/core/Fab';\r\nimport IconButton from '@material-ui/core/IconButton'\r\n//import Info from '../resources/question.svg'\r\nimport MenuNav from '../components/MenuNav'\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Search from '../resources/question.svg'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {withRouter } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\n\r\nimport {connect} from 'react-redux'\r\nimport {open_drawer} from '../_actions/Drawer'\r\nimport {change} from '../_actions/Register'\r\nimport {open_menu,change_menu} from '../_actions/actions_navbar'\r\nimport {openDI} from '../_actions/Dialog'\r\n\r\nconst styles = theme => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    textButton: {\r\n        color: 'white',\r\n        textDecorationLine: 'none',\r\n    }\r\n});\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            openM: false,\r\n            anchor: null\r\n        }\r\n        this.openDrawer = this.openDrawer.bind(this);\r\n        this.openMenu = this.openMenu.bind(this);\r\n        \r\n    }\r\n\r\n    openDrawer(){this.props.open('drawer');}\r\n\r\n    openMenu(event){\r\n        this.props.open_menu();\r\n        this.props.change_menu(['anchorEl',event.currentTarget])\r\n        \r\n    }\r\n    // open Dialog Information\r\n    openInfo(){\r\n        this.props.openDI('open')\r\n    }\r\n    \r\n\r\n    render() {\r\n       \r\n        \r\n\r\n        const { classes } = this.props;\r\n        //const { Drawer } = this.props;\r\n        \r\n        return (\r\n            <div className=\"grow\">\r\n                <AppBar position=\"static\" color ='primary'>     \r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            className={classes.menuButton}\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={this.openDrawer}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h4\" noWrap>IMA</Typography>\r\n                        <div className={classes.grow}/>\r\n                        <div className={classes.sectionDesktop}>\r\n                            <div className=\"icon_nav\">\r\n                                <Tooltip title=\"Información\">\r\n                                    \r\n                                    <IconButton \r\n                                        aria-label=\"show 1 new mails\" \r\n                                        color=\"inherit\"\r\n                                        onClick={this.openInfo.bind(this)}\r\n                                        >\r\n                                        <img alt='log-info' src={Search} height=\"30px\"></img>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                \r\n                                \r\n                                <Tooltip title=\"Notificaciones\">\r\n                                    <IconButton aria-label=\"show 2 new notifications\" color=\"inherit\" >\r\n                                        <Badge badgeContent={0} color=\"secondary\">\r\n                                            <NotificationsIcon />\r\n                                        </Badge>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                \r\n                            </div>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                color=\"inherit\"\r\n                                onClick={this.openMenu.bind(this)}\r\n                            >\r\n                                <AccountCircle style={{fontSize: '35px'}}/>\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className=\"section-mobile\"></div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <MenuNav />\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Drawer: state.Drawer\r\n    };\r\n };\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        change: (text) => {dispatch(change(text))},\r\n        change_menu: (text) => {dispatch(change_menu(text))},\r\n        open: (text) => {dispatch(open_drawer(text))},\r\n        open_menu: (text) => {dispatch(open_menu(text))},\r\n        openDI: (text) => {dispatch(openDI(text))},\r\n       // change the state of authSuccess\r\n       \r\n    }\r\n}\r\nexport default withRouter(withStyles(styles)(connect(mapStateToProps,mapDispatchToProps)(Navbar)));\r\n\r\n/*\r\n    <IconButton disableRipple={true} aria-label=\"show 2 new notifications\" color=\"inherit\" >\r\n        <CloudQueueIcon/>\r\n    </IconButton>\r\n*/ ","import React, { Component } from 'react'\r\nimport '../css/services.css';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\n//import auth from '../router/Auth'\r\nimport CardService from '../components/CardServices'\r\n//import CommentIcon from '@material-ui/icons/Comment';\r\nimport { CssBaseline, Grid} from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport Dialog from '../components/DialogService'\r\nimport DialogN from '../components/DialogNotification'\r\nimport DialogInfo from '../components/DialogInformation'\r\nimport EditService from '../components/EditService';\r\nimport Fab from '@material-ui/core/Fab';\r\n//import LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\n//import MyTheme from '../constants/MyTheme';\r\nimport Navbar from '../components/NavUser';\r\n//import SnackUser from '../components/SnackUser'\r\n//import {ThemeProvider} from '@material-ui/core/styles';\r\n\r\nimport SnackAlert from '../components/_Snacks/SnackAlert';\r\n//import store from '../store'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\n//import {load,open,openDN} from '../actions/Dialog'\r\nimport * as actions from '../_actions/Dialog';\r\n\r\n\r\n\r\n//var wtf8 = require('wtf-8');\r\n\r\nclass Services extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            message_snackAlert: 'Servicio creado correctamente'\r\n        }\r\n        this.openDialog = this.openDialog.bind(this)\r\n        // notification dialog\r\n        this.openDialogN = this.openDialogN.bind(this)\r\n    }\r\n\r\n    openDialog(){ this.props.open('dialog')}\r\n    openDialogN(){ this.props.openDN('dialog')}\r\n\r\n    componentDidMount(){ \r\n        \r\n        if (localStorage.getItem('view') === 'user'){\r\n            this.props.history.push('/forbidden')\r\n        }\r\n        this.props.openDI('open')\r\n        // carga los servicios del usuario\r\n        this.props.load('load data')\r\n    }\r\n\r\n    render(){\r\n        \r\n        const {dialog} = this.props\r\n        //const {Login} = this.props\r\n        //const {register} = this.props\r\n\r\n        //console.log(dialog['cards'])\r\n        let id_user = localStorage.getItem('id_user')\r\n        let cards = dialog['cards'].map(card =>{\r\n            if(parseInt(card.id_user) === parseInt(id_user)){\r\n                return(\r\n                <CardService key={card.id} card={card}/>        \r\n            )\r\n            }else{\r\n                return null\r\n            }\r\n        })\r\n        /*let a = store.getState().Dialog\r\n        console.log(a['cards'])*/\r\n        //<SnackUser message={register.nombre}/>\r\n\r\n        return(\r\n            <div className=\"root\">\r\n                \r\n                <Grid container component=\"main\" className=\"pater\" direction=\"row\">\r\n                    <Grid item xs={12}>\r\n                        <Navbar/>\r\n                        <CssBaseline/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={1} md={1}>\r\n                        <Container>\r\n                            <Grid container direction=\"row\" >\r\n                                <Grid item xs={6} sm={12} className=\"fab\">\r\n                                    <Tooltip title=\"Crear Servicio\">\r\n                                        <Fab color=\"secondary\" size=\"medium\"  >\r\n                                            <AddIcon onClick={this.openDialog} style={{ fontSize: 30 }}/>\r\n                                        </Fab>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Container>\r\n                        <SnackAlert message={this.state.message_snackAlert} color='#289445'/>\r\n                    </Grid>\r\n                    <Grid container  xs={12} sm={11} md={11} alignItems=\"center\"  item={true} spacing={2} className=\"cards\">\r\n                            {cards}\r\n                        <Container>\r\n                            <Dialog/>\r\n                            <DialogN/>\r\n                            <DialogInfo/>\r\n                            <EditService/>\r\n                        </Container>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n       dialog: state.Dialog,\r\n       Login : state.Login,\r\n       register: state.Register\r\n    };\r\n};\r\n/*\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n       open: (date) => {dispatch(open(date))},\r\n       openDN: (date) => {dispatch(openDN(date))},\r\n       //load: (date) => {dispatch(load(date))}\r\n    }\r\n}*/\r\nexport default withRouter(connect(mapStateToProps,/*mapDispatchToProps,*/actions)(Services));","import React, { Component } from 'react'\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\n//import InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport { RadioGroup } from '@material-ui/core';\r\n\r\n\r\n// Redux\r\nimport {connect} from 'react-redux'\r\n//import {change} from '../actions/ListRol'\r\nimport {change} from '../_actions/Register'\r\nimport {open} from '../_actions/ListRol'\r\n\r\n\r\nclass ListRol extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.changeState = this.changeState.bind(this);\r\n        this.OpenList = this.OpenList.bind(this);\r\n    }\r\n    async changeState(event){\r\n        let option = event.target.value\r\n        this.props.change(['rol',option]);\r\n        this.props.change(['validate_rol',false]);\r\n        this.setState({ text: option })\r\n        \r\n    }\r\n    \r\n    OpenList() {this.props.open('change')};\r\n\r\n    render() {\r\n        let {listRol} = this.props\r\n        return (\r\n            <div>\r\n                <List justify=\"center\">\r\n                    <ListItem button onClick={this.OpenList}>\r\n                        <ListItemIcon>\r\n                            <PersonIcon color=\"primary\" />    \r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\r\n                            this.state.text === '' ? \r\n                            \"Rol\" : \r\n                            \"Rol\" +\" : \"+this.state.text\r\n                        }\r\n                        />\r\n                        {listRol.open ? <ExpandLess /> : <ExpandMore />}\r\n                    </ListItem>\r\n                    \r\n                    <Collapse in={listRol.open} timeout=\"auto\" unmountOnExit>\r\n                        <List component=\"div\" disablePadding>\r\n                            <RadioGroup >\r\n                                <ListItem className=\"nested\">\r\n                                <FormControlLabel\r\n                                    control={<Radio onChange={this.changeState} value=\"generador\"/>}\r\n                                    label=\"Generador de Carga\"\r\n                                />\r\n                                </ListItem>\r\n                                <ListItem className=\"nested\">\r\n                                <FormControlLabel\r\n                                    control={<Radio disabled={false} onChange={this.changeState} value=\"transportador\"/>}\r\n                                    label=\"Transportador de Carga\"\r\n                                />\r\n                                </ListItem>\r\n                                <ListItem className=\"nested\">\r\n                                <FormControlLabel\r\n                                    control={<Radio disabled={true} onChange={this.changeState} value=\"operador\"/>}\r\n                                    label=\"Operador logistico\"\r\n                                />\r\n                                </ListItem>\r\n                            </RadioGroup>\r\n                        </List>\r\n                    </Collapse>\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n       listRol: state.ListRol,\r\n    };\r\n };\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n       change: (text) => {dispatch(change(text))},\r\n       open: (text) => {dispatch(open(text))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ListRol);","export const change = (option) =>{\r\n    return {\r\n        type: 'CHANGE',\r\n        payload: option\r\n    }\r\n}\r\n\r\nexport const open = (option) =>{\r\n    return {\r\n        type: 'OPEN',\r\n        payload: option\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../css/register.css';\r\n\r\nimport BackDrop from '../components/BackDrop'\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListRol from '../components/ListRol'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport SnackAlert from '../components/_Snacks/SnackAlert';\r\nimport TextEmail from '../components/_Form/TextEmail'\r\n//import TextField from '@material-ui/core/TextField';\r\nimport TextPassword from '../components/_Form/TextPassword'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\n// Redux\r\nimport {connect} from 'react-redux'\r\nimport {change,register,email_success} from '../_actions/Register'\r\n// view loading\r\nimport { openBD } from '../_actions/actions_backdrop' \r\nimport { openSnack } from '../_actions/actions_snack'\r\n\r\nclass Sign_up extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            validate: false,\r\n            success: false,\r\n            view: \"password\",\r\n            password: '',\r\n            showPassword: false,\r\n            color: '#bf6c2c',\r\n            backDrop_complete: false,\r\n            BackDrop_message: 'Registrando usuario..'\r\n        }\r\n        this.sendRequest = this.sendRequest.bind(this);\r\n    }\r\n\r\n    sendRequest(){ \r\n        \r\n        // open backdrop \r\n        this.props.openbd('back_drop')\r\n        \r\n\r\n        setTimeout(() => {  \r\n            let { Register } = this.props\r\n            this.props.email_success(Register.email,'sign_up')\r\n        }, 1000);\r\n        \r\n        setTimeout(() => {  \r\n            let { Register } = this.props\r\n            console.log(\"Register.unique ->\",Register.unique)\r\n            // verify if the email dont exist in db \r\n            if (!Register.unique){\r\n                \r\n                setTimeout(() => { \r\n                    //send request(user register)\r\n                    this.props.register() \r\n                }, 1000);\r\n\r\n                setTimeout(() => {  \r\n                    let { Register } = this.props\r\n                    console.log(\"Rsuccess: \",Register.registerSuccess)\r\n                    if (Register.registerSuccess ){ \r\n                        //console.log(\"entry true\"); \r\n                        this.setState({ backDrop_complete: true, BackDrop_message: 'Registro existoso'})\r\n                        setTimeout(() => { \r\n                            this.changeView()    \r\n                        }, 2000);\r\n                    }\r\n                    // close backdrop \r\n                    setTimeout(() => { this.props.openbd('back_drop')}, 2000);\r\n                }, 9000);\r\n            }else{\r\n                this.props.openbd('back_drop');\r\n                this.props.open_snack('snack_alert');\r\n                setTimeout(() => { this.props.open_snack('snack_alert');}, 3000);\r\n            }\r\n        }, 7000);\r\n    }\r\n\r\n    changeView(){ this.props.history.push('/log_in')}\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <Grid container component=\"main\" className=\"root\">\r\n                <CssBaseline />\r\n                <Grid item xs={false} sm={6} md={6} className=\"image\"/>\r\n                <Grid item xs={12} sm={6} md={6} component={Paper} elevation={5} square>\r\n                    <div className=\"paper\">\r\n                        <div className=\"Avatar\">\r\n                            <Fab color=\"primary\" size={'large'} >\r\n                                <PersonAddIcon/>\r\n                            </Fab>\r\n                        </div>\r\n                        <div className=\"title\">\r\n                            <Typography component=\"h5\" variant=\"h5\" className=\"title\"> Registro</Typography>\r\n                        </div>\r\n                        \r\n                        <form className=\"form\" noValidate>\r\n                            <Grid container item spacing={2} xs={12} justify=\"center\">\r\n                                \r\n                                <BackDrop message={this.state.BackDrop_message} complete={this.state.backDrop_complete}/>\r\n                                <SnackAlert message=\"Correo electrónico en uso\"/>\r\n\r\n                                <Grid container direction=\"row\" spacing={1} justify=\"center\">\r\n                                    <Grid item xs={10} sm={9}>\r\n                                        <TextEmail id=\"nombre\" label=\"Nombre empresa\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={10} sm={9} >\r\n                                        <TextEmail id=\"email\" label=\"Correo electrónico\" view=\"sign_up\"/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                \r\n                                <Grid item xs={10} sm={9} className=\"text_password\"></Grid>\r\n\r\n                                <Grid container direction=\"row\" spacing={1}>\r\n                                    <Grid item xs={1} sm={1}></Grid>\r\n                                    <Grid item xs={4} sm={5} className=\"password\" >\r\n                                        <TextPassword label=\"contraseña\" width={78} id=\"password\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={4} sm={5} className=\"password\" >\r\n                                        <TextPassword label=\"confirmación\" width={88} id=\"confirm\"/>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={10} sm={9} className=\"text_password\">\r\n                                    Utiliza ocho caracteres como mínimo con una \r\n                                    combinación de letras, números y símbolos.\r\n                                </Grid>\r\n                                <Grid item xs={10} sm={5}>\r\n                                    <TextEmail id=\"nit\" label=\"Nit empresa\"/>\r\n                                </Grid>\r\n                                <Grid item xs={10} sm={5} >\r\n                                    <div className=\"list_signup\">\r\n                                        <ListRol />\r\n                                    </div>\r\n                                </Grid>\r\n                                \r\n                                <Grid container spacing={3} direction=\"row\" justify=\"center\" className=\"submit_signup\">\r\n                                    <Grid item xs={6} sm={4} className=\"submit\">\r\n                                        <Button\r\n                                            fullWidth\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className=\"submit\"\r\n                                            onClick={this.sendRequest}>\r\n                                            Registrar usuario\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} sm={6} className=\"submit\">\r\n                                        <Button\r\n                                            fullWidth\r\n                                            variant=\"outlined\"\r\n                                            color=\"secondary\"\r\n                                            className=\"submit\"\r\n                                            onClick={this.changeView.bind(this)}>\r\n                                            prefiero iniciar sesión\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Register: state.Register\r\n    };\r\n};\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n       change: (text) => {dispatch(change(text))},\r\n       // Register an user\r\n       register: (text) => {dispatch(register(text))},\r\n       email_success: (text) => {dispatch(email_success(text))},\r\n       openbd: (text) => {dispatch(openBD(text))},\r\n       open_snack: (text) => {dispatch(openSnack(text))},\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Sign_up));","//import auth from '../router/Auth'\nimport React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\n\n//import store from '../store'\n\n\nexport const ProtectedRoute = ({component: Component, ...rest}) => {\n    return(\n        <Route {...rest} \n            render={(props) => {\n                \n                //let state = store.getState().Login\n                let auth = localStorage.getItem('auth')\n                //console.log(\"protectedR using redux: \",auth.isAuth())\n                console.log(\"protectedRoute, localStorage \",localStorage.getItem('auth'))\n                if(auth !== 'false'){\n                    return <Component {...props}/>\n                }else{\n                    return <Redirect to={\n                        {\n                            pathname: \"/\",\n                            state: {\n                                from: props.location\n                            }\n                        }\n                        \n                    }/>\n                }\n            }\n        }/>\n    )\n}","import React, { Component } from 'react'\nimport '../css/user.css';\n\n//import { CssBaseline, Grid} from '@material-ui/core';\nimport AirplanemodeActiveIcon from '@material-ui/icons/AirplanemodeActive';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport DirectionsBoatIcon from '@material-ui/icons/DirectionsBoat';\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\nimport Divider from '@material-ui/core/Divider';\nimport Fab from '@material-ui/core/Fab';\nimport {Grid} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton'\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport ListCities from '../components/ListCities'\nimport SearchIcon from '@material-ui/icons/Search';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TrainIcon from '@material-ui/icons/Train';\n\nimport {connect} from 'react-redux'\nimport {open_drawer} from '../_actions/Drawer'\nimport {change_dialog} from '../_actions/Dialog'\n\n//import Navbar from '../components/NavUser'\n\n\nclass DrawerUser extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            \n        }\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleClose(){\n        this.props.open('drawer')\n    }\n    changeValues(){\n        let origin = this.props.dialog.origin\n        let destination = this.props.dialog.destination\n        this.props.change_dialog([\"Origen\",destination]);\n        this.props.change_dialog([\"Destino\",origin]);\n        //console.log( this.props.dialog.origin,this.props.dialog.destination)\n    }\n\n    render(){\n        //const {dialog} = this.props\n        return(\n            <div>\n                <Grid container direction=\"row\">\n                    <Grid item xs={3} md={3} className=\"drawerHeader\">\n                        <IconButton className=\"button\" onClick={this.handleDrawerOpen}>\n                            <TrainIcon style={{fontSize: '30px'}} color={'secondary'} />\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={3} md={3} className=\"drawerHeader\">\n                        <IconButton  className=\"button\" onClick={this.handleDrawerOpen} disabled={true}>\n                            <DirectionsBoatIcon color={'inherit'} />\n                        </IconButton>\n                    </Grid>\n                    \n                    <Grid item xs={3} md={3} className=\"drawerHeader\">\n                        <IconButton className=\"button\" onClick={this.handleDrawerOpen} disabled={true}>\n                            <AirplanemodeActiveIcon color={'inherit'}/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={3} md={3} className=\"drawerHeader\">\n                        <IconButton className=\"button\" onClick={this.handleDrawerOpen} disabled={true}>\n                            <DirectionsBusIcon color={'inherit'}/>\n                        </IconButton>\n                    </Grid>\n                </Grid>\n\n                <Grid container spacing={4} justify=\"center\" alignItems=\"center\" className='drawerH'>\n\n                    <Grid  item xs={5} md={5} align=\"center\">\n                        <ListCities type=\"Origen\" color=\"#81ABFF\"/>\n                    </Grid>\n                    <Grid item xs={5} md={5} align=\"center\">\n                        <ListCities type=\"Destino\" color=\"#81ABFF\"/>\n                    </Grid>\n\n                    <Grid item xs={3} md={3} align=\"center\">\n                        \n                        <Tooltip title=\"Cambiar valores\">\n                            <Fab color=\"secondary\" size={'small'}>\n                                <ImportExportIcon onClick={this.changeValues.bind(this)}/> \n                            </Fab>\n                        </Tooltip>\n                    </Grid>\n                    <Grid item xs={3} md={3} align=\"center\">\n                        <Tooltip title=\"Buscar\">\n                            <Fab color=\"secondary\" size={'large'} disabled={true}>\n                                <SearchIcon  style={{fontSize: '35px'}}/> \n                            </Fab>\n                        </Tooltip>\n                    </Grid>\n                    <Grid item xs={3} md={3} align=\"center\">\n                        <Tooltip title=\"Cerrar drawer\">\n                            <Fab color=\"secondary\" size={'small'}>\n                                    <ChevronLeftIcon onClick={this.handleClose}/>\n                                </Fab>\n                        </Tooltip>\n                    </Grid>\n\n                </Grid>\n                <Divider/>\n                <Grid item md={12}>\n                    {this.props.cards}\n                </Grid>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        Drawer: state.Drawer,\n        dialog: state.Dialog\n    };\n };\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n       open: (text) => {dispatch(open_drawer(text))},\n       change_dialog: (value) => {dispatch(change_dialog(value))},\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(DrawerUser);","import React, { Component } from 'react'\nimport '../css/dialog.css'; \n\n//import Button from '@material-ui/core/Button';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Fab from '@material-ui/core/Fab';\nimport { Grid } from '@material-ui/core';\n\nimport SendIcon from '@material-ui/icons/Send';\nimport TextField from '@material-ui/core/TextField';\n\nimport {connect} from 'react-redux'\nimport {changer,openr} from '../_actions/Request'\n\nclass DialogRequest extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            \n        }\n        \n        this.SendRequest = this.SendRequest.bind(this);\n        this.changeState = this.changeState.bind(this);\n    }\n\n    \n    async changeState(event){\n        const target = event.target.id;\n        const value = event.target.value;\n        this.props.changer([target,value])\n    }\n\n    async SendRequest(){this.props.openr('close request')}\n    render(){\n        \n        const { request } = this.props;\n        \n\n        //const id = this.state.open ? 'simple-popover' : undefined;\n        return(\n            <Dialog open={request.open}>\n                <DialogTitle >\n                    <Grid container direction={\"row\"}>\n                    <Grid item xs={10} md= {10} sm={10}>{\"Solicitar reserva\"}</Grid>\n                    <Grid item xs={2} md={2} sm={2} align=\"right\">\n                        <CancelIcon onClick={this.SendRequest}/>\n                    </Grid>\n                    </Grid>\n                </DialogTitle>\n                <DialogContent>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"title\"\n                        label=\"Titulo\"\n                        autoFocus\n                        onChange={this.changeState}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"body\"\n                        label=\"Cuerpo\"\n                        autoFocus\n                        onChange={this.changeState}\n                    />\n                    \n                    <DialogActions>\n                        <Fab color=\"secondary\" size={'small'} className=\"fab\">\n                           <SendIcon onClick={this.SendRequest}/>\n                        </Fab>\n                    </DialogActions>\n                </DialogContent>\n            </Dialog>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       request: state.Request\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n       //change: (date) => {dispatch(change(date))},\n       openr: (date) => {dispatch(openr(date))},\n       changer: (date) => {dispatch(changer(date))},\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(DialogRequest);","import React, { Component } from 'react'\nimport '../css/listInfo.css'\n\nimport Collapse from '@material-ui/core/Collapse';\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\nimport DialogRequest from './DialogRequest'\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport Fab from '@material-ui/core/Fab';\nimport { Grid } from '@material-ui/core';\nimport GroupIcon from '@material-ui/icons/Group';\n//import LabelIcon from '@material-ui/icons/Label';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n//import MessageIcon from '@material-ui/icons/Message';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Train from './Train'\nimport TrainIcon from '@material-ui/icons/Train';\n\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport { withRouter } from 'react-router-dom';\n//import * as actions from '../actions/Login';\nimport {load} from '../_actions/Login';\n\n// open request generated by user\nimport {openr} from '../_actions/Request';\n// open Train \nimport {opent} from '../_actions/Train';\n\n// Redux\nimport {connect} from 'react-redux'\n\n\n//var wtf8 = require('wtf-8');\n\n\n\nclass ListInfo extends Component {\n   \n   constructor(props){\n        super(props);\n        this.state = {\n            SetOpen: false,\n            open: false,\n            months:[\n                {'apr': 'abril',}\n            ],\n            cities:{\n                'bogotá':\"Bogotá\",\n                'barranquilla': 'Barranquilla',\n                'cartagena':'Cargtagena',\n                'dorada':'La Dorada',\n                'santa marta':'Santa Marta',\n            },\n            capacity: 120,\n            places: 10\n            \n         \n        }\n        this.handleClick = this.handleClick.bind(this)\n        this.updateTrain = this.updateTrain.bind(this)\n        this.OpenRequest = this.OpenRequest.bind(this)\n        this.openTrain = this.openTrain.bind(this)\n      \n      \n   }\n   // Origin \n    handleClick(){\n        localStorage.setItem('type', 'Origin');\n        this.setState({\n            setOpen: !this.state.open,\n            open: !this.state.setOpen\n        })\n    }\n    componentDidMount(){this.props.load('hallo')}\n    openTrain(){this.props.opent('open train')}\n    updateTrain(value){\n        //console.log(\"value: \",value)\n        //this.props.change(value)\n    }\n\n\n    /*componentWillMount() {\n      //this.props.change([this.state.capacity,this.state.places])   \n    }*/\n    async OpenRequest(){\n        //temṕoral arreglar luego\n        this.props.openr('open request')\n    }\n   \n    render(){\n        \n\n        const { dialog } = this.props;\n        const { login } = this.props\n        //console.log('login in listinfo:',login)\n\n        let serv = []\n        //console.log(dialog)\n        dialog.cards.map(option => {\n            serv.push([option.id,option.title,option.date_start ,option.date_end])\n            return(<div></div>)\n        })\n\n        let info = login.users.map(option => {\n            \n            /*let id_user = parseInt(this.props.alternative.array_id.split(',')[option.id-1])\n            let id_service = parseInt(this.props.alternative.array_services.split(',')[option.id-1])*/\n            let id_user = this.props.id_user\n            let id_service = this.props.id\n        \n            let any = dialog.cards.map(service =>{\n                if (option.id === id_user && service.id === id_service){\n                    //console.log(\"trans: \",service.transport)\n                    return(\n                        <div className=\"div-list\">\n                            <List component=\"div\" disablePadding key={option.id}>\n                                <ListItem selected={true} >\n                                    <Grid container direction={\"row\"}>\n                                        <Grid item xs={2} md={2}><GroupIcon color=\"primary\"/></Grid>\n                                        <Grid item xs={8} md={8}>\n                                            <b>Información del transportador</b>\n                                        </Grid>\n                                        <Grid item xs={2} md={2} align=\"right\">\n                                            \n                                            <Tooltip title=\"usuario verificado\">\n                                                <VerifiedUserIcon color=\"secondary\"/>\n                                            </Tooltip>\n                                        </Grid>\n                                    </Grid>\n                                </ListItem>\n\n                                <ListItem selected={true} >\n                                    <Grid container direction={\"row\"}>\n                                        <Grid item xs={3} md={3}>\n                                            <b>Nombre transportador</b>\n                                        </Grid>\n                                        <Grid item xs={9} md={9} align=\"center\">\n                                            {option.nameE}\n                                        </Grid>\n                                    </Grid>\n                                </ListItem>\n\n                                <ListItem selected={true} >\n                                    <Grid container direction={\"row\"}>\n                                        <Grid item xs={3} md={3}>\n                                            <b>Correo electrónico</b>\n                                        </Grid>\n                                        <Grid item xs={9} md={9} align=\"center\">\n                                            {option.email}\n                                        </Grid>\n                                    </Grid>\n                                </ListItem>\n\n                                <ListItem selected={false} >\n                                    <Grid container direction={\"row\"}>\n                                        <Grid item xs={2} md={2}><EmojiObjectsIcon color=\"primary\"/></Grid>\n                                        <Grid item xs={8} md={8}>\n                                            <b>Información del servicio</b>\n                                        </Grid>\n                                        <Grid item xs={2} md={2} align=\"right\">\n                                            <Tooltip title=\"servicio verificado\">\n                                                <VerifiedUserIcon color=\"secondary\"/>\n                                            </Tooltip>\n                                        </Grid>\n                                    </Grid>\n                                </ListItem>\n\n                                <ListItem>\n                                    <Grid item xs={3} md={3}>\n                                        <b>Nombre del servicio</b>\n                                    </Grid>\n                                    <Grid item xs={8} md={8} align=\"center\">{service.title}</Grid>\n                                    <Grid item xs={1} md={1} align=\"center\">\n                                        {service.transport === 'terrestre' ? \n                                            <DirectionsBusIcon/> : \n                                            <Tooltip title=\"Visualizar tren\">\n                                                <Fab color=\"primary\" size={'small'} align={\"left\"}>\n                                                    <TrainIcon onClick={this.openTrain}/>\n                                                </Fab>    \n                                            </Tooltip>\n                                        }\n                                        <Train \n                                            capacity={service.capacity} \n                                            places={service.places} \n                                            name={service.title}/>\n                                    </Grid>\n                                </ListItem>\n\n                                <ListItem>\n                                    <Grid item xs={3} md={3} align=\"left\">Ciudad origen</Grid>\n                                    <Grid item xs={9} md={9} align=\"center\">{this.state.cities[service.origin]}</Grid>\n                                </ListItem>\n                                <ListItem>\n                                    <Grid item xs={3} md={3} align=\"left\">Hora y fecha salida</Grid>\n                                    <Grid item xs={9} md={9} align=\"center\">{service.date_start.slice(0,21)}</Grid>\n                                </ListItem>\n\n                                <ListItem>\n                                    <Grid item xs={3} md={3} align=\"left\">Ciudad destino</Grid>\n                                    <Grid item xs={9} md={9} align=\"center\">{this.state.cities[service.destination]}</Grid>\n                                </ListItem>\n                                \n                                <ListItem>\n                                    <Grid item xs={3} md={3} align=\"left\">Hora y fecha llegada</Grid>\n                                    <Grid item xs={9} md={9} align=\"center\">{service.date_end.slice(0,21)}</Grid>\n                                </ListItem>\n                                \n                                \n                            </List>\n                        </div>\n                        \n                    )\n                }else{return(<p></p>)}\n         })\n         return any\n      })\n      //console.log(\"classe of list-->> \",listCities)\n      //this.props.openList('hallo')\n      return(\n         <List justify=\"center\" color={'black'}>\n            <ListItem button onClick={this.handleClick}>\n               <ListItemText primary={this.props.type}/>\n               {this.state.open ? \n                <Fab color=\"secondary\" size={'small'}>\n                    <ExpandLess/>\n                </Fab>\n                : <Fab color=\"secondary\" size={'small'}>\n                    <ExpandMore/>\n                </Fab> }\n            </ListItem>\n            <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n                {info}\n               <DialogRequest/>\n            </Collapse>\n            \n         </List>\n         \n      )\n   }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        dialog: state.Dialog,\n        login: state.Login,\n        request: state.Request\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        openr: (option) => {dispatch(openr(option))},\n        opent: (option) => {dispatch(opent(option))},\n        load: (option) => {dispatch(load(option))},\n        // change: (option) => {dispatch(change(option))},\n    }\n}\n\nexport default withRouter((connect(mapStateToProps,mapDispatchToProps,/*actions*/)(ListInfo)));","import React,{Component}   from 'react';\nimport '../css/snackbar.css'; \n\n\nimport Slide from '@material-ui/core/Slide';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n \n\n\nclass SnackUser extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            vertical: 'bottom',\n            horizontal: 'left',\n            open: true\n        }\n    }\n    \n    handleClose(){ this.setState({ open: false })}\n    SlideTransition(props) {\n        return <Slide {...props} direction=\"right\" />;\n    }\n    \n    render(){\n        return(\n            <div>\n                <Snackbar\n                    anchorOrigin={{vertical: this.state.vertical,horizontal: this.state.horizontal}}\n                    key={`${this.state.vertical},${this.state.horizontal}`}\n                    open={this.state.open}\n                    autoHideDuration={4000}\n                    TransitionComponent={this.SlideTransition.bind(this)}\n                    onClose={this.handleClose.bind(this)}\n                >\n                    <SnackbarContent style={{ backgroundColor: this.props.color}}\n                        message={\n                            <div className=\"message_snack\">\n                                <span id=\"client-snackbar\">Bienvenido</span>\n                                <span className=\"user_snack\">{this.props.message}</span>\n                            </div>\n                            \n                        }\n                    />\n                </Snackbar>\n            </div>\n        );\n    }\n}\n \n \nexport default SnackUser ;","import React, { Component } from 'react'\nimport '../css/user.css';\n\n//import auth from '../router/Auth'\nimport Card from '@material-ui/core/Card';\n//import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { CssBaseline, Grid} from '@material-ui/core';\nimport DialogInfo from '../components/DialogInformation'\nimport Drawer from '@material-ui/core/Drawer';\nimport DrawerUser from '../components/DrawerUser';\nimport ListInfo from '../components/ListInfo'\nimport Navbar from '../components/NavUser'\nimport SnackUser from '../components/SnackUser'\nimport store from '../store'\nimport Typography from '@material-ui/core/Typography'\nimport { withRouter } from 'react-router-dom';\n\nimport {connect} from 'react-redux'\nimport {open_drawer,loadA} from '../_actions/Drawer';\nimport {openDI} from '../_actions/Dialog';\n\n//var wtf8 = require('wtf-8');\n\nclass User extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            \n            months:{\n                'Mar':'Marzo',\n                'Apr':'Abril',\n            },\n            \n        }\n    }\n\n    componentDidMount(){ \n        if (localStorage.getItem('view') === 'services'){\n            this.props.history.push('/forbidden')\n        }\n        this.props.openDI('open')\n        this.props.loadA('load data')  \n    }\n\n    render(){\n        \n        // use to load alternatives\n        const {drawer} = this.props\n\n        // use to load services\n        const {dialog} = this.props\n        // use to load users\n        const {register} = this.props\n        \n        \n        //let cards = drawer.alternatives.map(card =>{\n        let cards = dialog.cards.map(card =>{\n            //console.log(dialog.origin ,\"+ >\", card.origin)\n            //console.log(dialog.destination ,\"+ <\", card.destination)\n            if(dialog.origin === card.origin && dialog.destination === card.destination){\n                return(\n                    <Card key={card.id}>\n                        <CardContent>\n                            <Grid container direction=\"row\" >\n                                <Grid item xs={9} md={9} align=\"left\" className=\"cardUser_text\">\n                                    <b>{card.title.toUpperCase()}</b>\n                                </Grid>\n                                <Grid item xs={3} md={3} align=\"right\">\n                                    <Typography gutterBottom  color=\"primary\" component=\"h4\">\n                                    {card.date_start.slice(4,10)} - {card.date_end.slice(4,10)} \n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={9} md={9} align=\"left\" className=\"cardUser_text\">\n                                    <p>\n                                    A continuación encontrara información detallada del servicio\n                                    asi como los datos del transportador\n                                    </p>\n                                </Grid>\n                                <Grid item xs={3} md={3} align=\"right\">\n                                    <Typography gutterBottom  color=\"primary\" component=\"h4\">\n                                    {24 * (parseInt(card.date_end.slice(8,10))-parseInt(card.date_start.slice(8,10)))+ ' horas'} \n                                    </Typography>\n                                </Grid>\n    \n                                <Grid item xs={8} md={8} align=\"left\" className=\"cardUser_text\"/>\n                                <Grid item xs={4} md={4} align=\"right\">\n                                    843 km\n                                </Grid>\n                                <Grid item xs={12} md={12}>\n                                    <ListInfo type=\"Detalles\" id={card.id} id_user={card.id_user}/>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>    \n                )   \n            }\n            else{return(<div></div>)}\n        })\n\n        return(\n            <div className=\"root_user\">\n                <Grid container component=\"main\" className=\"pater\" direction=\"row\">\n                    <Grid item xs={12} >\n                        <Navbar/>\n                        <CssBaseline/>\n                    </Grid>\n                    <Grid item xs={12}></Grid>\n                        <Drawer\n                            className=\"drawer\"\n                            variant=\"persistent\"\n                            anchor=\"left\"\n                            open={store.getState().Drawer.open}\n                            classes={{paper: \"drawerPaper\"}}\n                        ><DrawerUser cards={cards}/>\n                        <DialogInfo/>\n                    </Drawer>\n                    <div className=\"user_image\"/>\n                    <SnackUser message={register.nombre}/>\n                </Grid>\n                    \n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        drawer: state.Drawer,\n        dialog: state.Dialog,\n        register: state.Register\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        loadA: (text) => {dispatch(loadA(text))},\n        open_drawer: (text) => {dispatch(open_drawer(text))},\n        openDI: (text) => {dispatch(openDI(text))},\n       \n\n    }\n}\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(User))","import React from 'react'\r\n\r\nimport Admin from '../views/Admin/Admin'\r\n\r\nimport Forbidden from '../views/Forbidden'\r\n//import Home from '../views/Home'\r\nimport Log_in from '../views/Log_in'\r\n\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Services from '../views/Services'\r\nimport Sign_up from '../views/Sign_up'\r\nimport { ProtectedRoute } from './ProtectedRoute'\r\n\r\nimport User from '../views/User'\r\n\r\n\r\n\r\nexport default (props) => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={Log_in}/>\r\n        <Route exact path=\"/sign_up\" component={Sign_up}/>\r\n        <Route exact path=\"/log_in\" component={Log_in}/>\r\n        <ProtectedRoute exact path=\"/forbidden\" component={Forbidden}/>\r\n        <ProtectedRoute  exact path=\"/services\" component={Services}/>\r\n        <ProtectedRoute exact path=\"/user\" component={User}/>\r\n    </Switch>\r\n)\r\n\r\n//<ProtectedRoute exact path=\"/admin_home\" component={Admin}/>","import React, { Component } from 'react';\n//import logo from '../logo.svg';\nimport '../css/App.css';\nimport Routes from '../router/routes'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: { secondary: {main: '#81ABFF'}, primary: {main: '#0749e6'}},\n  typography: { fontFamily: [ 'Lato', 'sans-serif'].join(',')}\n});\n\nclass App extends Component {\n\n    state = { loaded: false }\n\n    componentDidMount(){\n        this.setState({ loaded: true });\n    }\n    render() {\n        return (\n            <div>\n                <MuiThemeProvider theme={theme}> \n                    <Routes/> \n                </MuiThemeProvider>\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './css/index.css';\n\nimport App from './components/App';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n// Redux\nimport {Provider} from 'react-redux'\nimport store from './store'\n\n\n\nconst Root = (\n    <Provider store={store}>\n      <BrowserRouter>\n         <App/>\n      </BrowserRouter>\n   </Provider>\n )\n \nReactDOM.render(Root, document.getElementById('root'));\nserviceWorker.unregister();\n\n"],"sourceRoot":""}