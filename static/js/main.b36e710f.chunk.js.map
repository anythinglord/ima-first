{"version":3,"sources":["resources/servicios.png","resources/equipo.png","resources/unal.png","resources/uc.png","resources/sepro.png","resources/Train.png","resources/question.svg","constants/MyTheme.js","constants/api_route.js","_actions/Dialog.js","_actions/Drawer.js","components/DrawerAdmin.js","router/Auth.js","components/NavAdmin.js","reducers/BackDrop.js","reducers/Dialog.js","reducers/Drawer.js","reducers/ListRol.js","reducers/Login.js","reducers/Register.js","reducers/Request.js","reducers/Snack.js","reducers/Train.js","store.js","views/Admin/Admin.js","components/Navbar.js","views/Home.js","_actions/actions_backdrop.js","components/BackDrop.js","_actions/actions_snack.js","components/_Snacks/SnackAlert.js","_actions/Register.js","components/_Form/TextEmail.js","scripts/confirmEmail.js","components/_Form/TextPassword.js","scripts/testPassword.js","_actions/Login.js","components/StepLogin.js","views/Log_in.js","_actions/Train.js","components/Train.js","components/CardServices.js","components/DateTime.js","components/ListCities.js","components/ListTrans.js","components/StepService.js","components/DialogService.js","components/Panel.js","_actions/Request.js","components/DialogNotification.js","components/NavUser.js","components/SnackUser.js","views/Services.js","components/ListRol.js","_actions/ListRol.js","views/Sign_up.js","components/DrawerUser.js","components/DialogRequest.js","components/ListInfo.js","views/User.js","router/routes.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","MyTheme","createMuiTheme","palette","primary","main","contrastText","secondary","bprimary","backgroundColor","color","bicons","bsecondary","API_ROUTE","axios","require","open","option","type","payload","openDN","change","create","update","load","dispatch","post","query","then","result","catch","err","console","log","open_drawer","loadA","alternative","data","getAlternatives","DrawerAdmin","props","state","this","ThemeProvider","theme","Grid","container","direction","item","xs","md","className","align","Fab","style","size","fontSize","onClick","handleClose","bind","Divider","List","justify","sm","ListItem","button","ListItemIcon","ListItemText","Component","connect","Drawer","text","auth","cb","Navbar","openM","anchor","openDrawer","openMenu","logOut","event","setState","currentTarget","logout","history","push","classes","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","Typography","variant","noWrap","grow","sectionDesktop","disableRipple","Badge","badgeContent","Menu","anchorEl","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","onClose","MenuItem","LinkProfile","withRouter","withStyles","flexGrow","display","alignItems","breakpoints","up","textButton","textDecorationLine","defaultState","reducer","cards","openN","id_user","title","capacity","places","cost","cities","name","lat","lng","origin","destination","transport","ubication","dateStart","Date","dateEnd","parseInt","createService","alert","openA","setOpen","alternatives","users","email","password","token","rol","isAuth","nombre","validate_nombre","unique","validate_email","validate_password","confirm","validate_confirm","validate_rol","nit","authSuccess","registerSuccess","message","id_owner","id_service","requests","body","opent","combineReducers","BackDrop","Dialog","ListRol","Login","Register","Snack","Request","Train","store","createStore","applyMiddleware","thunk","Admin","drawer","component","CssBaseline","getState","paper","to","Button","fullWidth","submit","sendReq","Home","Hidden","only","src","service","alt","width","height","equipo","unal","sepro","uncund","openBD","back_drop","Backdrop","backdrop","CircularProgress","zIndex","paddingBottom","marginTop","openSnack","SnackAlert","Slide","Snackbar","key","autoHideDuration","TransitionComponent","SlideTransition","SnackbarContent","open_snack","verify","userByEmail","email_success","validEmail","view","setTimeout","TextEmail","validate","information","target","value","length","test","validate_nit","TextField","error","margin","required","label","onChange","inputChange","helperText","openbd","TextPassword","showPassword","preventDefault","md5","match","FormControl","InputLabel","OutlinedInput","endAdornment","InputAdornment","handleClickShowPassword","onMouseDown","handleMouseDownPassword","labelWidth","fill","send","user","nameE","loginUser","authUser","success","StepLogin","handleReset","activeStep","isStepOptional","step","isStepSkipped","skipped","has","Set","message_backdrop","message_snackAlert","handleNext","handleBack","spacing","Chip","avatar","Avatar","clickable","changeEmail","deleteIcon","getStepContent","Log_in","sendRequest","changeView","moveRegister","login","Paper","elevation","square","noValidate","Link","href","openTrain","DialogTitle","DialogContent","train","free","DialogActions","wtf8","CardServices","dialogVerMas","dialogReservar","openT","Card","raised","CardHeader","decode","card","subheader","class","action","CardContent","date_start","slice","date_end","CardActions","handleClickButton2","DateTime","selectedDate","ChangeOption","labelDate","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","labelTime","date","ListCities","OpenList","dialog","Collapse","in","timeout","unmountOnExit","RadioGroup","FormControlLabel","control","Radio","ListTrans","StepService","handleSkip","Error","setActiveStep","prevActiveStep","setSkipped","prevSkipped","newSkipped","values","add","steps","checked","undefined","autoFocus","changeState","disabled","openPop","Popover","openP","Switch","handleChange","inputProps","Stepper","map","index","stepProps","completed","Step","StepLabel","DialogService","SendRequest","closeDialog","Panel","ExpansionPanel","expanded","ExpansionPanelSummary","expandIcon","aria-controls","cardReq","accept","ExpansionPanelDetails","openr","Transition","React","forwardRef","ref","DialogNotification","loadr","requestCard","request","fullScreen","openInfo","Info","SnackUser","Services","openDialog","openDialogN","register","Container","Tooltip","actions","listRol","disablePadding","Sign_up","createUser","DrawerUser","handleDrawerOpen","changeValues","DialogRequest","changer","ListInfo","SetOpen","info","handleClick","updateTrain","OpenRequest","localStorage","setItem","serv","array_id","split","array_services","selected","getUsers","User","alter","duration","services","gutterBottom","exact","path","typography","fontFamily","join","App","loaded","Boolean","window","location","hostname","Root","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b36e710f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/servicios.8037ecbe.png\";","module.exports = __webpack_public_path__ + \"static/media/equipo.2aec46e0.png\";","module.exports = __webpack_public_path__ + \"static/media/unal.7f6bb381.png\";","module.exports = __webpack_public_path__ + \"static/media/uc.607c6927.png\";","module.exports = __webpack_public_path__ + \"static/media/sepro.9f9bdb38.png\";","module.exports = __webpack_public_path__ + \"static/media/Train.722b5233.png\";","module.exports = __webpack_public_path__ + \"static/media/question.dae5b4f8.svg\";","import { createMuiTheme } from '@material-ui/core/styles';\n\n\n const MyTheme = createMuiTheme({\n    palette: {\n        primary: { // works\n          main: '#165788',\n          contrastText: '#fff',\n        },\n        secondary: { // works\n          main: '#69BE28',\n          contrastText: '#fff',\n        },\n        bprimary: {\n            backgroundColor: '#183ea3',\n            color: '#fff',\n        },\n        bicons:{\n          //backgroundColor: '#1d0bbf',\n          //color: '#fff',\n          color: '#1d0bbf',\n          \n        },\n        bsecondary: { \n            backgroundColor: '#3362de',\n            color: '#ffff',\n        },\n    },\n});\n\nexport default MyTheme;","//const API_ROUTE = 'http://34.69.73.192:5000/graphql';\nexport const API_ROUTE = 'https://imaapig.azurewebsites.net/graphql';\n\nexport default API_ROUTE;","import API_ROUTE from '../constants/api_route'\nconst axios = require(\"axios\")\n\n// open dialog services\nexport const open = (option) =>{\n    return {\n        type: 'OPEN',\n        payload: option\n    }\n}\n\n// open notifications dialog \nexport const openDN = (option) =>{\n    return {\n        type: 'OPENDN',\n        payload: option\n    }\n}\n\n// change any value in dialog\nexport const change = (option) =>{\n    return {\n        type: 'CHANGE',\n        payload: option\n    }\n}\n\n// Create a service \nexport const create = (option) =>{\n    return {\n        type: 'CREATE',\n        payload: option\n    }\n}\n\n// update a service \nexport const update = (option) =>{\n    return {\n        type: 'UPDATE',\n        payload: option\n    }\n}\n\n// Load all services\nexport const load = () =>{\n    return(dispatch)=> {\n        axios.post(API_ROUTE, {\n            query: `query{\n                getServices{\n                    id \n                    id_user \n                    title \n                    class \n                    capacity\n                    places \n                    cost \n                    origin \n                    destination \n                    transport \n                    date_start\n                    date_end\n                }\n            }`\n            \n        }).then((result)=>{\n            //let service  = result.data.data.getServices\n            //dispatch(change(['cards',service]))\n            //console.log(\"service: \", state.cards)\n        }).catch(err => console.log(err))\n    } \n}\n","import API_ROUTE from '../constants/api_route'\nimport {load} from './Dialog';\nconst axios = require(\"axios\")\n\nexport const open_drawer = (option) =>{\n    return {\n        type: 'OPEN_DRAWER',\n        payload: option\n    }\n}\n\n// change any value in dialog\nexport const change = (option) =>{\n    return {\n        type: 'CHANGE',\n        payload: option\n    }\n}\n\n\n// load alternatives \nexport const loadA = () =>{\n    console.log('load alternatives')\n    return(dispatch)=> {\n        axios.post(API_ROUTE, {\n            query: `query{\n                getAlternatives{\n                    id\n                    array_id\n                    cost\n                    array_services\n                    duration\n                    origin\n                    destination\n                }\n            }`\n            \n        }).then((result)=>{\n            let alternative  = result.data.data.getAlternatives\n            dispatch(change(['alternatives',alternative]))\n            dispatch(load())\n        }).catch(err => console.log(err))\n    } \n    \n}","import React,{Component}   from 'react';\nimport '../css/admin.css';\n\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Divider from '@material-ui/core/Divider';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport Fab from '@material-ui/core/Fab';\nimport { Grid} from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MyTheme from '../constants/MyTheme';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PollIcon from '@material-ui/icons/Poll';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport {ThemeProvider} from '@material-ui/core/styles';\n\nimport {connect} from 'react-redux'\nimport {open_drawer} from '../_actions/Drawer'\n\nclass DrawerAdmin extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n    \n    handleClose(){\n        this.props.open('drawerA')\n    }\n    render(){\n        return(\n            <div>\n                <ThemeProvider theme={MyTheme}></ThemeProvider>\n                <Grid container direction=\"column\" >\n                    <Grid container direction=\"row\">\n                        <Grid item xs={9} md={9} >\n                            <div className=\"title_admin\">\n                                Panel administrador    \n                            </div>\n                        </Grid>\n                        <Grid item xs={2} md={2} className=\"arrow_admin\" align=\"center\">\n                            <Fab style={MyTheme.palette.bprimary} size={'small'}>\n                                <ChevronLeftIcon style={{ fontSize: 30 }} onClick={this.handleClose.bind(this)}/>\n                            </Fab>\n                        </Grid>\n                        <Grid item xs={1} md={1} ></Grid>\n                    </Grid>\n                    <Divider/>\n                    <List justify=\"center\">\n                        <Grid item xs={12} sm={12} md={12} className=\"drawerHeader_admin\">\n                            <ListItem button>\n                                <ThemeProvider theme={MyTheme}></ThemeProvider>\n                                <ListItemIcon> \n                                    <PersonIcon style={{fontSize: 45,color: '#22439c'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={\"\"} />\n                                <ListItemText primary={\"Usuarios\"} />\n                            </ListItem>\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={12} className=\"drawerHeader_admin\">\n                            <ListItem button>\n                                <ListItemIcon> \n                                    <EmojiObjectsIcon style={{fontSize: 45,color: '#22439c'}}/> \n                                </ListItemIcon>\n                                <ListItemText primary={\"\"} />\n                                <ListItemText primary={\"Servicios\"} />\n                            </ListItem>\n                            \n                        </Grid>\n                        <Grid item xs={12} sm={12} md={12} className=\"drawerHeader_admin\">\n                            <ListItem >\n                                <ListItemIcon> \n                                    <PollIcon style={{fontSize: 45,color: '#a6a9ad'}} /> \n                                </ListItemIcon>\n                                <ListItemText/>\n                                <ListItemText primary={\"Estadisticas\"} />\n                            </ListItem>\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={12} className=\"drawerHeader_admin\">\n                            <ListItem button>\n                                <ListItemIcon> \n                                    <SettingsIcon style={{fontSize: 45,color: '#22439c'}} /> \n                                </ListItemIcon>\n                                <ListItemText/>\n                                <ListItemText primary={\"Configuraciones\"} />\n                            </ListItem>\n                        </Grid>\n                    </List>\n                    <Divider/>\n                    <Grid item xs={12} sm={12} md={12}>\n                        <div className=\"footer_admin\">\n                            Pepito perez\n                        </div>\n                        \n                    </Grid>\n                </Grid>            \n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        Drawer: state.Drawer\n    };\n };\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n       open: (text) => {dispatch(open_drawer(text))},\n    }\n}\n \nexport default connect(mapStateToProps,mapDispatchToProps)(DrawerAdmin);","class Auth{\n    constructor(){\n        this.auth = false\n    }\n\n    login(cb){\n        console.log(\"entry in Auth.login\")\n        this.auth = true\n        \n        cb();\n    }\n    logout(cb){\n        console.log(\"entry in Auth.logout\")\n        this.auth = false\n        cb();\n    }\n    \n    isAuth(){return this.auth}\n}\n\nexport default new Auth();","import React, { Component } from 'react'\r\nimport '../css/navbar.css'; \r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport auth from '../router/Auth'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MyTheme from '../constants/MyTheme';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {withRouter } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport {ThemeProvider} from '@material-ui/core/styles';\r\n\r\nimport {connect} from 'react-redux'\r\nimport {open_drawer} from '../_actions/Drawer'\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    textButton: {\r\n        color: 'white',\r\n        textDecorationLine: 'none',\r\n    }\r\n});\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            openM: false,\r\n            anchor: null\r\n        }\r\n        this.openDrawer = this.openDrawer.bind(this);\r\n        this.openMenu = this.openMenu.bind(this);\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    openDrawer(){\r\n        this.props.open('drawerA')\r\n        //console.log(\"openDrawer-Admin!\")\r\n    }\r\n\r\n    openMenu(event){\r\n        this.setState({\r\n            openM: !this.state.openM,\r\n            anchor: event.currentTarget\r\n        })\r\n    }\r\n    // close session\r\n    logOut(){\r\n        auth.logout(() =>{this.props.history.push(\"/\")}) \r\n        //localStorage.setItem('auth',false)\r\n    }\r\n\r\n    render() {\r\n        const menuId = 'primary-search-account-menu';\r\n        \r\n\r\n        const { classes } = this.props;\r\n        \r\n        //console.log(Drawer)\r\n        return (\r\n            <div className=\"grow\">\r\n                <ThemeProvider theme={MyTheme}></ThemeProvider>\r\n                <AppBar position=\"static\" style={MyTheme.palette.bprimary}>     \r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            className={classes.menuButton}\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={this.openDrawer}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h4\" noWrap>IMA</Typography>\r\n                        <div className={classes.grow}/>\r\n                        <div className={classes.sectionDesktop}>\r\n                            <div className=\"icon_nav\">\r\n                            <IconButton disableRipple={true} aria-label=\"show 2 new notifications\" color=\"inherit\" >\r\n                                <CloudQueueIcon/>\r\n                            </IconButton>\r\n                            \r\n                            <IconButton aria-label=\"show 2 new notifications\" color=\"inherit\" >\r\n                                <Badge badgeContent={1} color=\"secondary\">\r\n                                    <NotificationsIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                            </div>\r\n                            <IconButton\r\n                                \r\n                                aria-label=\"account of current user\"\r\n                                color=\"inherit\"\r\n                                onClick={this.openMenu}\r\n                            >\r\n                                <AccountCircle />\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className=\"section-mobile\">\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                <Menu\r\n                    anchorEl={this.state.anchor}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                    id={menuId}\r\n                    keepMounted\r\n                    transformOrigin={{ vertical: 'down', horizontal: 'right' }}\r\n                    open={this.state.openM}\r\n                    onClose={this.openMenu}>\r\n                    <MenuItem onClick={this.LinkProfile}>Perfil</MenuItem>\r\n                    <MenuItem onClick={this.logOut}>Cerrar Sesión</MenuItem>\r\n                </Menu>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Drawer: state.Drawer\r\n    };\r\n };\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n       open: (text) => {dispatch(open_drawer(text))},\r\n    }\r\n}\r\nexport default withRouter(withStyles(styles)(connect(mapStateToProps,mapDispatchToProps)(Navbar)));\r\n","export const defaultState = {\n    open: false,\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    switch(type){\n        case 'OPENBD':\n            //console.log(\"entry in dialog open\")\n            return{ ...state,open: !state.open}\n        default:\n            return state\n            \n    }\n    \n}\n\nexport default reducer;","import API_ROUTE from '../constants/api_route'\n\n\nexport const defaultState = {\n    open: false,\n    cards: [],\n    openN: false,\n    id_user:  0,\n    title: '',\n    type: 'carga',\n    capacity: 0,\n    places: 0,\n    cost: '',\n    cities: [\n        {name:'Bogotá' ,lat: 4.6097100, lng: -74.0817500 ,option: false},\n        {name:'Santa Marta' ,lat: 11.2407900, lng: -74.1990400 ,option: false},\n        {name:'Barranquilla' ,lat: 10.9685400, lng: -74.7813200 ,option: false},\n        {name:'Cartagena' ,lat: 10.3997200, lng: -75.5144400 ,option: false},\n        {name:'La dorada' ,lat: 5.4478302, lng: -74.6631088 ,option: false},\n        {name:'Belencito' ,lat: 6.2518400, lng: -75.5635900 ,option: false},\n    ],\n    origin: '',\n    destination: '',\n    transport: '',\n    ubication: '',\n    dateStart: new Date('2019-10-31T09:00:00'),\n    dateEnd: new Date('2019-10-31T09:00:00')\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    const axios = require(\"axios\")\n    switch(type){\n        case 'OPEN':\n            //console.log(\"entry in dialog open\")\n            return{\n                ...state,open: !state.open\n            }\n        case 'OPENDN':\n            return{...state,openN: !state.openN}\n        case 'CHANGE':\n            switch(payload[0]){\n                case 'id_user':\n                    return {...state,id_user:payload[1]}\n                case 'cards':\n                    return {...state,cards:payload[1]}\n                case 'title':\n                    return {...state,title:payload[1]}\n                case 'capacity':\n                    return {...state,capacity:parseInt(payload[1])}\n                case 'places':\n                    return {...state,places:parseInt(payload[1])}\n                case 'cost':\n                    return {...state,cost:payload[1]}\n                case 'Transporte':\n                    return {...state,transport:payload[1]}\n                case 'Origen':\n                    return{...state,origin:payload[1]}\n                case 'Destino':\n                    return{...state,destination:payload[1]}\n                case 'salida':\n                    return{...state, dateStart: payload[1]}\n                default:\n                    return{...state,dateEnd: payload[1]}\n            }\n        case'CREATE':\n            \n            //let transport = store.getState().ListTrans.\n            axios.post(API_ROUTE,{\n                query : `mutation{\n                    createService(Service: {\n                        id_user: ${state.id_user}\n                        title:\"${state.title}\"\n                        class:\"${state.type}\"\n                        capacity: ${state.capacity}\n                        places: ${state.places}\n                        cost: \"${state.cost}\"\n                        origin :\"${state.origin}\"\n                        destination :\"${state.destination}\"\n                        transport :\"${state.transport}\"\n                        ubication:\"${state.ubication}\"\n                        date_start:\"${state.dateStart}\"\n                        date_end:\"${state.dateEnd}\"\n                    }){\n                        id\n                        title\n                    }\n                }`\n            }).then((result)=>{\n             \n                //console.log(result.data.data.createService)\n                const title = result.data.data.createService.title\n                //const id = result.data.data.createService.id\n                if(title !== \" \"){\n                    //console.log(\"service created\")\n                }else{\n                    alert(\"No se creo el servicio\")\n                }\n            }).catch(err => console.log(err))\n\n            //console.log(\"cities from dialog SendRq: \",payload)\n            break;\n        default:\n            return state\n            \n    }\n    \n}\n\nexport default reducer;","const defaultState = {\n    // drawer_user\n    open: false ,\n    // drawer_admin\n    openA: false ,\n    setOpen: false,\n    alternatives: []\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    switch(type){\n        \n        case 'OPEN_DRAWER':\n            switch(payload){\n                case 'drawer':\n                    //return{...state,open:!state.setOpen,setOpen:!state.open}\n                    return{...state,open:!state.open}\n                case 'drawerA':\n                    return{...state,openA:!state.openA}\n                default:\n                    return state\n            }  \n        case 'CHANGE':\n            switch(payload[0]){\n                case 'alternatives':\n                    return{...state,alternatives:payload[1]}\n                default:\n                    return state\n            }    \n        default:\n            return state\n    }\n    //return state\n}\n\nexport default reducer;","const defaultState = {\r\n    open: false ,\r\n    setOpen: false,\r\n    option: ''\r\n}\r\n\r\nconst reducer = (state = defaultState, { type, payload }) => {\r\n    switch(type){\r\n        case 'CHANGE':\r\n            return {...state,option:payload}\r\n        case 'OPEN':\r\n            return {...state,open:!state.setOpen,setOpen:!state.open}\r\n        default:\r\n            return state\r\n    }\r\n    //return state\r\n}\r\n\r\nexport default reducer;\r\n\r\n","const defaultState = {\r\n    users: [],\r\n    email: '',\r\n    password: '',\r\n    token: '',\r\n    rol: '',\r\n    id_user: '',\r\n    isAuth: false\r\n    // response of server\r\n}\r\n\r\nconst reducer = (state = defaultState, { type, payload }) => {\r\n    switch(type){\r\n        case 'FILL':\r\n            switch(payload[0]){\r\n                case 'users':{return {...state,users: payload[1]}}\r\n                case 'email':{return {...state,email: payload[1]}}\r\n                case 'rol':{return {...state,rol: payload[1]}}\r\n                case 'id_user':{return {...state,id_user: payload[1]}}\r\n                case 'token':{return {...state,token: payload[1]}}\r\n                case 'isAuth':{\r\n                    //console.log(\"isAuthQQ!!!_ \",payload[1])\r\n                    return {...state,isAuth: payload[1]}}\r\n                default: return{...state,password: payload[1]}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    //return state\r\n}\r\n\r\nexport default reducer;","\r\n\r\nconst defaultState = {\r\n    // all validate variables must stay in false except rol\r\n    nombre: '',\r\n    validate_nombre: false,\r\n    email: '',\r\n    unique: false,\r\n    validate_email: false,\r\n    password: '',\r\n    validate_password: false,\r\n    // confirm password for the register\r\n    confirm: '',\r\n    validate_confirm: false,\r\n    rol: '',\r\n    validate_rol: true,\r\n    nit: 0,\r\n    // verify the log_in\r\n    authSuccess: false,\r\n    // verify the sign_up\r\n    registerSuccess: false,\r\n    // display message in textField\r\n    message: ''\r\n}\r\n\r\nconst reducer = (state = defaultState, { type, payload }) => {\r\n    switch(type){\r\n        case 'CHANGE':\r\n            switch(payload[0]){\r\n                case 'nombre':{return {...state,nombre: payload[1]}}\r\n                case 'validate_nombre':{ return{...state,validate_nombre: payload[1]}}\r\n                case 'email':{return {...state,email: payload[1]}}\r\n                case 'unique':{return {...state,unique: payload[1]}}\r\n                case 'validate_email':{ return{...state,validate_email: payload[1]}}\r\n                case 'password':{return {...state,password: payload[1]}}\r\n                case 'validate_password':{ return{...state,validate_password: payload[1]}}\r\n                case 'confirm':{return {...state,confirm: payload[1]}}\r\n                case 'validate_confirm':{ return{...state,validate_confirm: payload[1]}}\r\n                case 'nit': {return{...state,nit: payload[1]}}\r\n                case 'rol':{return{...state,rol: payload[1]}}     \r\n                case 'validate_rol':{ return{...state,validate_rol: payload[1]}}\r\n                case 'authSuccess':{ return{...state,authSuccess: payload[1]}}  \r\n                case 'registerSuccess':{ return{...state,registerSuccess: payload[1]}}  \r\n                case 'message':{ return{...state,message: payload[1]}}  \r\n                default: return state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    //return state\r\n}\r\n\r\nexport default reducer;","const defaultState = {\n    open: false,\n    id_user: 0,\n    id_owner: 0,\n    id_service: 0,\n    requests: [],\n    title: '',\n    body: ''\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    switch(type){\n        \n        case 'OPENR':\n            return {...state,open:!state.open}\n        case 'CHANGER':\n            switch(payload[0]){\n                case 'title':\n                    return{...state,title:payload[1]}\n                case 'body':\n                    return{...state,body:payload[1]}\n                case 'requests':\n                    return{...state,requests:payload[1]}\n                default:\n                    return state\n            }    \n        default:\n            return state\n    }\n    //return state\n}\n\nexport default reducer;","const defaultState = {\n    open: false,\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    switch(type){\n        \n        case 'OPEN_SNACK':\n            return {...state,open:!state.open}\n        default:\n            return state\n    }\n    //return state\n}\n\nexport default reducer;","export const defaultState = {\n    opent: false\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    switch(type){\n        case 'OPENT':\n            return{ ...state,opent: !state.opent }\n        default:\n            return state\n            \n    }\n    \n}\n\nexport default reducer;","import {createStore,combineReducers,applyMiddleware} from 'redux';\r\n\r\nimport BackDrop from './reducers/BackDrop'\r\nimport Dialog from './reducers/Dialog';\r\nimport Drawer from './reducers/Drawer'\r\nimport ListRol from './reducers/ListRol'\r\nimport Login from './reducers/Login'\r\nimport Register from './reducers/Register'\r\nimport Request from './reducers/Request'\r\nimport Snack from './reducers/Snack'\r\nimport thunk from 'redux-thunk';\r\nimport Train from './reducers/Train'\r\n\r\nconst reducer = combineReducers({\r\n    BackDrop, Dialog, Drawer, ListRol,  Login, Register, Snack, Request, Train\r\n});\r\n\r\nconst store = createStore(reducer,applyMiddleware(thunk));  \r\nexport default store;","import React,{Component}   from 'react';\nimport '../../css/admin.css';\n\nimport { CssBaseline, Grid} from '@material-ui/core';\nimport Drawer from '@material-ui/core/Drawer';\nimport DrawerAdmin from '../../components/DrawerAdmin';\nimport Navbar from '../../components/NavAdmin';\nimport store from '../../store'\nimport { withRouter } from 'react-router-dom';\n\nimport {connect} from 'react-redux'\nclass Admin extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n \n \n    render(){\n        const { drawer } = this.props\n        return(\n            <div className=\"root\">\n                <Grid container component=\"main\" className=\"pater\" direction=\"row\">\n                    <Grid item xs={12}>\n                        <Navbar/>\n                        <CssBaseline/>\n                    </Grid>\n                    <Grid item xs={12} sm={2} md={2}>\n                        <Drawer\n                            className=\"drawer_admin\"\n                            variant=\"persistent\"\n                            anchor=\"left\"\n                            open={store.getState().Drawer.openA}\n                            classes={{paper: \"drawerPaper_admin\"}}\n                            ><DrawerAdmin/>\n                        </Drawer>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        drawer: state.Drawer,\n    };\n};\n \nexport default withRouter(connect(mapStateToProps)(Admin));","import React, { Component } from 'react'\r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link,withRouter } from 'react-router-dom';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nimport '../css/navbar.css'; \r\n\r\nconst styles = theme => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    textButton: {\r\n        color: 'white',\r\n        textDecorationLine: 'none',\r\n    }\r\n});\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className=\"grow\">\r\n                <AppBar position=\"static\" color = 'primary'>     \r\n                    <Toolbar>\r\n                        <Typography variant=\"h4\" noWrap>IMA</Typography>\r\n                        <div className={classes.grow}/>\r\n                        <div className={classes.sectionDesktop}>\r\n                            <Link className={classes.textButton}  to=\"/log_in\">\r\n                                <Button\r\n                                    fullWidth\r\n                                    color='inherit'\r\n                                    className={classes.submit}\r\n                                    onClick={this.sendReq}>\r\n                                    Ingreso\r\n                                </Button>\r\n                            </Link>\r\n                            <Link  className={classes.textButton} to=\"/sign_up\">\r\n                                <Button\r\n                                    fullWidth\r\n                                    variant='contained'\r\n                                    color=\"secondary\"\r\n                                    className={classes.submit}\r\n                                    onClick={this.sendReq}>\r\n                                    Registro\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"section-mobile\">\r\n\r\n                        </div>\r\n                        \r\n                    </Toolbar>\r\n                    \r\n                </AppBar>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default withRouter(withStyles(styles)(Navbar))","import React, { Component } from 'react'\r\nimport '../css/home.css';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { CssBaseline, Grid} from '@material-ui/core';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { Link,withRouter } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar'\r\n\r\n\r\nimport service from '../resources/servicios.png';\r\nimport equipo from '../resources/equipo.png';\r\nimport unal from '../resources/unal.png';\r\nimport uncund from '../resources/uc.png';\r\nimport sepro from '../resources/sepro.png';\r\n\r\n\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"root\">\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={12} >\r\n                        <Navbar/>\r\n                        <CssBaseline/>        \r\n                    </Grid>\r\n                    <Grid container  direction=\"column\"  className=\"main\" >\r\n                        <Hidden only=\"xs\">\r\n                            <Hidden only=\"sm\">\r\n                            <h1 className=\"main_title\">Intermodalidapp</h1>\r\n                            <p className=\"main_text\">Soluciones más allá de las fronteras</p>\r\n                            </Hidden>\r\n                        </Hidden>\r\n                        <Hidden only='md'>\r\n                            <Hidden only='lg'>\r\n                                \r\n                                <Grid container  direction=\"row\">\r\n                                    <Grid item xs={12}>\r\n                                        <h5 className=\"little_title\">Intermodalidapp</h5>\r\n                                    </Grid>    \r\n                                    <Grid item xs={2}></Grid>\r\n                                    <Grid item xs={4}>\r\n                                    <Link className=\"link\" to=\"/log_in\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color=\"secondary\"\r\n                                            onClick={this.sendReq}>\r\n                                            Ingreso\r\n                                        </Button>\r\n                                    </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <Link className=\"link\"  to=\"/sign_up\">\r\n                                            <Button\r\n                                                variant='contained'\r\n                                                color=\"primary\"\r\n                                                onClick={this.sendReq}>\r\n                                                Registro\r\n                                            </Button>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={2}></Grid>\r\n                                </Grid>\r\n                            </Hidden>\r\n                        </Hidden>\r\n                        \r\n                    </Grid>\r\n\r\n                    <Grid container  direction=\"row\"   className=\"div_white\">\r\n                        \r\n                        <Grid item xs={12} sm={6} md={6} className=\"img\">\r\n                            <Hidden only='xs'>\r\n                                <img src={service} alt=\"cu\" width=\"300\" height=\"300\"/>\r\n                            </Hidden>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={6}>\r\n                            <h3 className=\"div_title\">Servicios</h3>\r\n                            <div className=\"div_text\">\r\n                            Esta aplicacion tiene como finalidad \r\n                            presentar a los generadores de carga \r\n                            las diferentes alternativas para el \r\n                            transporte de su mercancia de manera intermodal.\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container  direction=\"row\"  className=\"div_black\">\r\n                        <Grid item xs={12} sm={6} md={6}>\r\n                            <h3 className=\"div_title\">Equipo</h3>\r\n                            <p className=\"div_text\">\r\n                            Este desarrollo fue realizado por el \r\n                            grupo de investigación Sepro, un grupo \r\n                            interdisciplicinar que aborda desde \r\n                            diferentes puntos de vista los temas \r\n                            relaciones con la logistica y la cadena de suministro.\r\n                            </p>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={6} className=\"img\">\r\n                            <Hidden only='xs'>\r\n                                <img src={equipo} alt=\"cu\" width=\"300\" height=\"300\"/>\r\n                            </Hidden>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    \r\n                    <Grid container direction=\"row\" alignItems=\"center\" className=\"div_white\">\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Grid container direction=\"row\">\r\n                                <Grid item xs={12}>\r\n                                <img src={unal} alt=\"cu\" width=\"160\" height=\"180\"/>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container direction=\"row\">\r\n                                <Grid item xs={6}>\r\n                                    <img src={sepro} alt=\"sepro\" width=\"150\" height=\"110\"/>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <img src={uncund} alt=\"cu\" width=\"110\" height=\"120\"/>   \r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Hidden only='xs'>\r\n                                <h3 className=\"div_title\">Colaboradores</h3>\r\n                                <p className=\"div_text\">\r\n                                En esta etapa del proyecto \r\n                                se trabajó en convenio de la \r\n                                Universidad Nacional de Colombia \r\n                                y la Universidad de Cundinamarca\r\n                                </p>\r\n                            </Hidden>\r\n                            \r\n                        </Grid>\r\n\r\n                            \r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default withRouter(Home);","\nexport const openBD = (option) =>{\n    return {\n        type: 'OPENBD',\n        payload: option\n    }\n}","import React,{Component}   from 'react';\nimport '../css/back_drop.css'\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid'\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n\nimport {connect} from 'react-redux'\nimport {openBD} from '../_actions/actions_backdrop'\n\nconst styles = theme => ({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n      fontSize: '30px'\n    },\n    message:{\n        paddingBottom: '60px',\n        marginTop: '-120px'\n    }\n});\n\nclass BackDrop extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            open: true\n        }\n    }\n \n    handleClose(){\n        this.setState({open: false})\n    }\n    render(){\n        const { classes } = this.props;\n        const { back_drop } = this.props;\n        return(\n            <div>\n                <Backdrop className={classes.backdrop} open={back_drop.open}>\n                    <Grid container direction=\"row\">\n                        <Grid item xs={12} sm={12} align=\"center\" className={classes.message}>\n                            {this.props.message}\n                        </Grid>\n                        <Grid item xs={12} sm={12} align=\"center\">\n                        <CircularProgress size={120} color=\"primary\" />\n                        </Grid>\n                    </Grid>\n                </Backdrop>\n            </div>\n        );\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        back_drop: state.BackDrop\n    };\n };\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n       open: (text) => {dispatch(openBD(text))},\n    }\n}\n \nexport default withStyles(styles)(connect(mapStateToProps,mapDispatchToProps)(BackDrop));","\nexport const openSnack = (option) =>{\n    return {\n        type: 'OPEN_SNACK',\n        payload: option\n    }\n}","import React,{Component}   from 'react';\nimport '../../css/snackbar.css'; \n\n\nimport Slide from '@material-ui/core/Slide';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\n\nimport {connect} from 'react-redux'\nimport { openSnack } from '../../_actions/actions_snack'\n\nclass SnackAlert extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            open: true\n        }\n    }\n    \n    SlideTransition(props) {\n        return <Slide {...props} direction=\"right\" />;\n    }\n\n    render(){\n        const { Snack } = this.props;\n        return(\n            <div>\n                <Snackbar\n                    key={`${this.state.vertical},${this.state.horizontal}`}\n                    open={Snack.open}\n                    autoHideDuration={3000}\n                    TransitionComponent={this.SlideTransition.bind(this)}\n                    //onClose={()=>{this.props.open_snack('snack_alert')}}\n                >\n                    <SnackbarContent style={{ backgroundColor: '#c9432e'}}\n                        message={\n                            <div className=\"message_snackAlert\">\n                                {this.props.message}\n                            </div>\n                        }\n                    />\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        Snack: state.Snack\n    };\n };\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n        open_snack: (text) => {dispatch(openSnack(text))},\n    }\n}\n\n \nexport default connect(mapStateToProps,mapDispatchToProps)(SnackAlert);","import API_ROUTE from '../constants/api_route'\r\nimport store from '../store'\r\nconst axios = require(\"axios\")\r\n\r\n\r\n\r\nexport const change = (option) =>{\r\n    return {\r\n        type: 'CHANGE',\r\n        payload: option\r\n    }\r\n}\r\n\r\nexport const verify = (option) =>{\r\n    return (dispatch) => {\r\n        let state = store.getState().Register\r\n        //console.log(\"state: \",state.email)\r\n        axios.post(API_ROUTE, { \r\n            query : `query{\r\n                userByEmail(email: \"${state.email}\"){ id }\r\n            }`\r\n        }).then((result) => {\r\n            //console.log(result.data)\r\n            let user = result.data.data.userByEmail\r\n            if (user.id !== -1){dispatch(change(['unique', true]))}\r\n            else{ dispatch(change(['unique', false]))}\r\n        }).catch(err => console.log(err))\r\n    }\r\n}\r\n\r\nexport const email_success = (validEmail,view) =>{\r\n    \r\n    return (dispatch) => {\r\n        setTimeout(() => { \r\n            //this.props.verify(validEmail)\r\n            dispatch( verify(validEmail) )\r\n        }, 2000);\r\n        setTimeout(() => {\r\n            let Register = store.getState().Register\r\n            \r\n            // email in the db\r\n            if (Register.unique === true){\r\n                if (view === 'sign_up'){\r\n                    //this.setState({validate: true})\r\n                    //this.props.change(['validate_email',true])\r\n                    //this.setState({information: 'Correo electronico en uso'}) \r\n                    dispatch(change(['validate_email',true]))  \r\n                    dispatch(change(['message', 'Correo electronico en uso']))\r\n                }\r\n            }\r\n            // email not in the db\r\n            else{\r\n                if (view === 'log_in'){\r\n                    //this.props.change(['validate_email',true])\r\n                    //this.setState({information: 'Correo electrónico no registrado'})\r\n                    dispatch(change(['validate_email',true])) \r\n                    dispatch(change(['message', 'Correo electrónico no registrado']))\r\n                }\r\n            }\r\n            //console.log(\"finish email_success\",Register.unique)\r\n        }, 3000);\r\n    }\r\n}\r\n\r\n\r\n// register an user\r\nexport const register = () =>{\r\n    //console.log(\"Register redux\")\r\n    let state = store.getState().Register\r\n    //console.log(\"state-rol: \",state)\r\n    return(dispatch)=> {\r\n        \r\n        //dispatch()\r\n        if (!state.validate_nombre & state.nombre.length > 1 &\r\n            !state.validate_password & state.password.length >= 8 &\r\n            !state.validate_confirm & state.confirm.length >= 8 &\r\n            !state.validate_email  & state.confirm.length >= 6 &\r\n            !state.validate_rol){\r\n                \r\n            axios.post(API_ROUTE, { \r\n                query : `mutation{\r\n                    createUser(user: {\r\n                    nameE:\"${state.nombre}\"\r\n                    email:\"${state.email}\"\r\n                    passw:\"${state.password}\"\r\n                    rol:\"${state.rol}\"\r\n                    nit:\"${state.nit}\"\r\n                    }){\r\n                        nameE\r\n                    }\r\n                }`\r\n            }).then((result) => {\r\n                let user = result.data.data.createUser\r\n                //console.log(user.nameE)\r\n                if (user.nameE !== \" \") { dispatch(change(['registerSuccess', true]))}\r\n                \r\n            }).catch(err => console.log(err))\r\n        }\r\n        \r\n    } \r\n}","import React,{Component}   from 'react';\n \n\n\nimport TextField from '@material-ui/core/TextField';\nimport confirmEmail from '../../scripts/confirmEmail.js';\n \nimport {connect} from 'react-redux'\nimport {change,verify} from '../../_actions/Register'\n// view loading\nimport {openBD} from '../../_actions/actions_backdrop'\n\n\n\nclass TextEmail extends Component{\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            validate: false,\n            information: 'Ingresa la información',\n        }\n    }\n    \n    inputChange(event){\n        \n        let id = event.target.id;\n        let value = event.target.value;\n        \n        switch(id){\n            case \"nombre\":\n                /*if (value.length < 1){this.setState({validate: true})}\n                else{this.setState({validate: false})}*/\n                if (value.length < 1){this.props.change(['validate_nombre',true])}\n                else{this.props.change(['validate_nombre',false])}\n                break\n            case \"email\":\n                \n                //this.setState({validate: true})\n                this.props.change(['validate_email',true])\n                let validEmail = confirmEmail(value)\n                if (validEmail) {\n                    //console.log(\"VIEW: \",this.props.view)\n                    this.props.change(['validate_email',false])\n                }\n                break\n            default:\n                break\n        }\n        this.props.change([id,value])\n    }\n    /*componentDidUpdate(){\n        //this.setState({validate: true})\n        const {Register} = this.props\n        console.log(Register)\n        this.render()\n    }*/\n\n    render(){\n        const {Register} = this.props\n        //console.log(\"message: \",Register.message)\n        let validate = null\n        switch(this.props.id){\n            case \"nombre\":\n                validate = Register.validate_nombre\n                break\n            case \"email\": \n                validate = Register.validate_email\n                break\n            case \"password\":\n                    validate = Register.validate_password\n                break\n            case \"nit\":\n                    validate = Register.validate_nit\n                break\n            default:\n                break\n        }\n        \n        return(\n            <div>\n                <TextField\n                    error={validate}\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    id={this.props.id}\n                    required\n                    fullWidth\n                    label={this.props.label}\n                    onChange={this.inputChange.bind(this)}\n                    helperText={validate === true ? \n                        Register.message :  [\n                            this.props.id === 'email' ? 'Puedes usar letras, numeros y signos de puntuación' : ''\n                        ]\n                    }\n                />\n            </div>\n        );\n    }\n}\n \n\nconst mapStateToProps = (state) => {\n    return {\n        Register: state.Register\n    };\n };\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n       change: (text) => {dispatch(change(text))},\n       verify: (text) => {dispatch(verify(text))},\n       openbd: (text) => {dispatch(openBD(text))},\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(TextEmail);","export default function( email ){ \n    let reg =  /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i;\n    return reg.test(email);\n}","import React,{Component}   from 'react';\n \n \nimport IconButton from '@material-ui/core/IconButton';\nimport FormControl from '@material-ui/core/FormControl';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport {testPassword} from '../../scripts/testPassword'\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport {connect} from 'react-redux'\nimport {change} from '../../_actions/Register'\n\n \nclass TextPassword extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            validate: false,\n        }\n    }\n\n    \n    handleClickShowPassword (){\n        this.setState({showPassword: !this.state.showPassword });\n    };\n    handleMouseDownPassword (event){\n        event.preventDefault();\n    };\n    \n    async inputChange(event){\n        \n        let id = event.target.id;\n        let value = event.target.value;\n        var md5 = require('md5');\n        \n        if (id === 'password' ){\n            if (testPassword(value)){ \n                //this.setState({validate: false})\n                this.props.change(['validate_password',false])\n            }\n            else{this.props.change(['validate_password',true])}\n            value = md5(value)\n        }\n\n        if (id === 'confirm'){\n            //this.setState({validate: true})\n            this.props.change(['validate_confirm',true])\n            let {Register} = this.props;\n            if (Register.confirm.length > 0){\n                if(md5(value) === Register.password ){\n                    //this.setState({validate: false})\n                    this.props.change(['validate_confirm',false])\n                }else{\n                    //this.setState({validate: true})\n                    this.props.change(['validate_confirm',true])\n                }\n            }\n        }\n        this.props.change([id,value])\n    }\n    \n\n    render(){\n        const {Register} = this.props\n        let validate = null\n        switch(this.props.id){\n            case \"password\":\n                validate = Register.validate_password\n                break\n            case \"confirm\": \n                validate = Register.validate_confirm\n                break\n        }\n        return(\n           <div>\n                <FormControl variant=\"outlined\" fullWidth={true}>\n                    <InputLabel>{this.props.label}</InputLabel>\n                    <OutlinedInput\n                        //error={this.props.id === 'password' ? this.state.validate : this.state.validateC}\n                        error={validate}\n                        id={this.props.id}\n                        fullWidth={true}\n                        type={this.state.showPassword ? 'text' : 'password'}\n                        onChange={this.inputChange.bind(this)}\n                        endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={this.handleClickShowPassword.bind(this)}\n                                onMouseDown={this.handleMouseDownPassword.bind(this)}\n                                edge=\"end\"\n                                \n                                >\n                                {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                        }\n                        labelWidth={this.props.width}\n                    />\n                </FormControl>\n                \n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        Register: state.Register\n    };\n };\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n       change: (text) => {dispatch(change(text))},\n    }\n}\n \nexport default connect(mapStateToProps,mapDispatchToProps)(TextPassword);","export function testPassword(password){\n    let passCheck = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,20}$/;\n    return password.match(passCheck);\n}","import store from '../store'\r\nimport API_ROUTE from '../constants/api_route'\r\nimport { change } from './Register'\r\n//\r\nconst axios = require(\"axios\")\r\n\r\nexport const fill = (option) =>{\r\n    return {\r\n        type: 'FILL',\r\n        payload: option\r\n    }\r\n}\r\n// send the requesto to backend\r\nexport const send = () =>{\r\n    let state = store.getState().Register\r\n    //console.log(\"state...\", state,\"email\",state.email)\r\n    return(dispatch) => {\r\n        //console.log(\"entry in return\")\r\n        axios.post(API_ROUTE, {\r\n            query: `query{\r\n                userByEmail(email:\"${state.email}\"){ rol nameE }\r\n            }`\r\n        })\r\n        .then((result)=>{\r\n            let user = result.data.data.userByEmail\r\n            dispatch(fill(['rol',user.rol]))\r\n            dispatch(change(['nombre',user.nameE]))\r\n        })\r\n        .catch(err => console.log(err))\r\n        \r\n        console.log(\"need auth\",state.email,state.password)\r\n\r\n        // authentication\r\n        axios.post(API_ROUTE,{\r\n            query: `mutation{\r\n                authUser(credentials: { email: \"${state.email}\", passw: \"${state.password}\"})\r\n                { token success }\r\n            }`    \r\n        }).then((result)=>{\r\n            \r\n            const loginUser = result.data.data.authUser\r\n            console.log(\"loginUSer: \",loginUser)\r\n            dispatch(fill(['token',loginUser.token]))\r\n            if(loginUser.success){\r\n                //auth user incorrect\r\n                dispatch(change(['authSuccess',true]))\r\n            }\r\n            \r\n        }).catch(err => console.log(err))\r\n    } \r\n}\r\n\r\n// load all users\r\nexport const load = () =>{\r\n    console.log('load users in login')\r\n    return(dispatch)=> {\r\n        axios.post(API_ROUTE, {\r\n            query: `query{\r\n                getUsers{\r\n                    id\r\n                    nameE\r\n                    email\r\n                    nit\r\n                    rol\r\n                }\r\n            }`\r\n            \r\n        }).then((result)=>{\r\n            let users  = result.data.data.getUsers\r\n            dispatch(fill(['users',users]))\r\n        }).catch(err => console.log(err))\r\n    } \r\n    \r\n}","import React,{Component}   from 'react';\n\n\nimport Avatar from '@material-ui/core/Avatar';\nimport BackDrop from '../components/BackDrop'\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Grid from '@material-ui/core/Grid';\n//import TextField from '@material-ui/core/TextField';\nimport SnackAlert from '../components/_Snacks/SnackAlert';\nimport TextEmail from '../components/_Form/TextEmail'\nimport TextPassword from '../components/_Form/TextPassword'\nimport Typography from '@material-ui/core/Typography'; \nimport { withRouter } from 'react-router-dom';\n\n\nimport {connect} from 'react-redux'\nimport {change,email_success} from '../_actions/Register'\n// this action have to change into Register\nimport {send} from '../_actions/Login'\n// view loading\nimport {openBD} from '../_actions/actions_backdrop' \nimport { openSnack } from '../_actions/actions_snack'\n\nclass StepLogin extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeStep: 0,\n            skipped: new Set(),\n            message_backdrop: '',\n            message_snackAlert: ''\n        }\n        this.handleNext = this.handleNext.bind(this)\n        this.handleReset = this.handleReset.bind(this)\n        this.handleBack = this.handleBack.bind(this)\n    }\n    changeEmail(){\n        this.setState({activeStep: this.state.activeStep-1})\n        this.props.change(['validate_email',true])\n    }\n    handleNext() {\n        let {Register} = this.props\n        if (this.state.activeStep < 1){\n            \n            // verify email\n            this.setState({message_backdrop: 'Verificando correo electrónico..'})\n            this.props.openbd('back_drop')\n            setTimeout(() => { \n                //this.props.openbd('back_drop')\n                this.props.email_success(Register.email,'log_in');    \n            }, 2000);\n            \n            // change View\n            setTimeout(() => { \n                //console.log(\"before change view\")\n                let {Register} = this.props\n                //console.log(Register.validate_email, Register.email, Register.unique)\n                if (!Register.validate_email & Register.email.length > 0 & Register.unique){\n                    //this.props.openbd('back_drop')\n                    this.setState({activeStep: this.state.activeStep + 1})\n                }else{\n                    this.setState({ message_snackAlert: 'No se ha podido encontrar tu cuenta'})\n                    this.props.open_snack('snack_alert');\n                    setTimeout(() => { this.props.open_snack('snack_alert');}, 3000);\n                }\n\n                this.props.openbd('back_drop')\n            }, 6000);\n            \n        }else{\n            //send request to log_in\n            this.setState({message_backdrop: 'Autenticando usuario..'})\n            this.props.openbd('back_drop')\n            if (Register.password.length > 0){\n                setTimeout(() => { this.props.send('') }, 2000);\n                setTimeout(() => { \n                    let {Register} = this.props;\n                    let {Login} = this.props;\n                    if (Register.authSuccess){\n                        if(Login.rol === 'generador'){this.props.history.push('/user')}\n                        else{this.props.history.push('/services')}\n                    }\n                    this.props.openbd('back_drop')\n                }, 3000);\n            }\n            //alert('correo no existe')\n        }\n    };\n\n    handleReset = () => { this.setState({activeStep: 0})};\n    handleBack () { \n        \n        if (this.state.activeStep === 0){\n            this.props.history.push(\"/sign_up\")\n\n        }else{\n            alert('recovery pass')\n        }\n    };\n\n\n    isStepOptional = step => {\n        return step === 1;\n    };\n\n    isStepSkipped = step => {\n        return this.state.skipped.has(step);\n    };\n    \n    \n    getStepContent(step) {\n        let {Register} = this.props\n        switch (step) {\n            case 0:\n                //const id = this.state.open ? 'simple-popover' : undefined;\n                return(\n                    <div className=\"root_step\" id=\"root_step\">\n                        <Grid container spacing={4} direction=\"row\" justify=\"center\">\n                            <Grid item sm={8}>\n                                <TextEmail label=\"Correo electrónico\" id=\"email\" view=\"log_in\"/>\n                            </Grid>\n                        </Grid>\n                    </div>\n                )\n            case 1:\n                return (\n                    <div>\n                        <Grid container spacing={4} direction=\"row\" justify=\"center\" alignItems=\"center\">\n                            <Grid item sm={5} align=\"right\">\n                                <h2>Bienvenido</h2>\n                            </Grid>\n                            <Grid item sm={7}>\n                                <Chip\n                                    avatar={<Avatar>M</Avatar>}\n                                    label={Register.email}\n                                    clickable\n                                    color=\"primary\"\n                                    onClick={this.changeEmail.bind(this)}\n                                    deleteIcon={<DoneIcon />}\n                                />\n                            </Grid>\n                            <Grid item sm={8}>\n                                <TextPassword label=\"Ingresa tu contraseña\" width={150} id=\"password\"/>\n                            </Grid>\n                        </Grid>\n                    </div>\n                )\n            default:\n                return 'Unknown step';\n        }\n    }\n    render(){\n        return(\n            <div className=\"root\">\n                <Grid container direction=\"row\">\n                    <Grid item xs={12} sm={12} md={12}>\n                        <Typography className=\"instructions\">\n                            {this.getStepContent(this.state.activeStep)}\n                        </Typography>\n\n                        <BackDrop message={this.state.message_backdrop}/>\n                        <SnackAlert message={this.state.message_snackAlert}/>\n\n                        <Grid container direction=\"row\" className=\"buttons\" justify=\"center\">\n                            <Grid item xs={1} sm={1} md={1}></Grid>\n                            <Grid item xs={4} sm={5} md={5}>\n                                <Button \n                                    color=\"secondary\"\n                                    onClick={this.handleBack} \n                                    className=\"button\"\n                                    >\n                                    {this.state.activeStep === 0 ? 'Crear Cuenta' : 'Olvidaste tu contraseña'}\n                                </Button>\n                            </Grid>\n                            <Grid item xs={4} sm={1} md={1}></Grid>\n                            <Grid item xs={4} sm={4} md={4} align=\"center\">\n                                <Button\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={this.handleNext}\n                                    className=\"button\"\n                                    >\n                                    Siguiente\n                                </Button>\n                            </Grid>\n                            <Grid item xs={4} sm={1} md={1}></Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        Register: state.Register,\n        Login: state.Login\n    };\n};\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n       change: (text) => {dispatch(change(text))},\n       send: (text) => {dispatch(send(text))},\n       openbd: (text) => {dispatch(openBD(text))},\n       email_success: (text) => {dispatch(email_success(text))},\n       open_snack: (text) => {dispatch(openSnack(text))},\n    }\n}\n\n \nexport default  withRouter(connect(mapStateToProps,mapDispatchToProps)(StepLogin)) ;","import React, { Component } from 'react'\r\nimport '../css/login.css';\r\n\r\nimport auth from '../router/Auth'\r\n//import BackDrop from '../components/BackDrop'\r\n//import Button from '@material-ui/core/Button';\r\n//import Checkbox from '@material-ui/core/Checkbox';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Fab from '@material-ui/core/Fab';\r\n//import FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\n//import HomeIcon from '@material-ui/icons/Home';\r\nimport LinkUI from '@material-ui/core/Link';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport StepLogin from '../components/StepLogin'\r\n//import TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Redux\r\nimport {connect} from 'react-redux'\r\nimport {fill,send} from '../_actions/Login'\r\n\r\n\r\nclass Log_in extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        //this.state = {}\r\n        this.inputChange = this.inputChange.bind(this);\r\n        this.sendRequest = this.sendRequest.bind(this);\r\n        this.changeView = this.changeView.bind(this);\r\n        this.moveRegister = this.moveRegister.bind(this);\r\n    }\r\n\r\n    async inputChange(event){\r\n        let {id , value} = event.target\r\n        var md5 = require('md5');\r\n        if (id === 'password'){value = md5(value)}\r\n        this.props.fill([id,value])\r\n    }\r\n    \r\n    \r\n    changeView(rol){\r\n        \r\n        if(rol === 'generador'){\r\n            auth.login(() =>{this.props.history.push(\"/user\")}) \r\n            //localStorage.setItem('auth',true)\r\n            //this.props.history.push(\"/user\")\r\n        }\r\n            \r\n        if(rol === 'transportador'){\r\n            auth.login(() =>{this.props.history.push(\"/services\")}) \r\n            //localStorage.setItem('auth',true)\r\n            //this.props.history.push(\"/services\")\r\n        }\r\n    }\r\n    \r\n    async sendRequest(){ \r\n        this.props.send();\r\n        /*setTimeout(function(){\r\n            login = store.getState().Login\r\n            \r\n        },2000);*/\r\n        \r\n        //await this.changeView();\r\n        \r\n        /*const { Login } = this.props;\r\n        console.log(\"rol before push in login\",Login.rol)\r\n        if(Login.rol === 'generador'){this.props.history.push(\"/user\")}\r\n        else{this.props.history.push(\"/services\")}\r\n        let promise = new Promise(function(resolve,reject){\r\n            setTimeout(function(){\r\n                resolve(\r\n                    \"hallo promise\"        \r\n                );\r\n            },2000);\r\n        })\r\n        //const { Login } = this.props;\r\n        \r\n        promise.then(function(response){\r\n            let login = store.getState().Login\r\n            console.log(\"rol before push in login\",login.rol)\r\n            return '12'\r\n        })*/\r\n    }\r\n    \r\n    moveRegister(){\r\n        this.props.history.push(\"/sign_up\")\r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            <Grid container item spacing={4} component=\"main\" className=\"root\" >\r\n                <CssBaseline/>\r\n\r\n                <Grid item xs={12} sm={6} md={6} component={Paper} elevation={6} square>\r\n                    <div className=\"paper\">\r\n                        <div className=\"Avatar_login\">\r\n                            <Fab color=\"primary\" size={'large'} >\r\n                                <LockOutlinedIcon />\r\n                            </Fab>\r\n                        </div>\r\n                        <div className=\"title\">\r\n                            <Typography component=\"h1\" variant=\"h5\" > Inicio de Sesión</Typography>\r\n                        </div>\r\n                        <div className=\"stepper_login\">\r\n                            <StepLogin />\r\n                        </div>\r\n                        <form className=\"form\" noValidate>\r\n                            \r\n                            <Grid container item spacing={3} justify=\"center\">\r\n                                <Grid item xs={10} sm={10} > \r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" className=\"footer_login\">\r\n                                        {'Intermodalidapp & '}\r\n                                        <LinkUI color=\"inherit\" href=\"https://material-ui.com/\">\r\n                                            Material-UI\r\n                                        </LinkUI>\r\n                                    </Typography>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={false} sm={6} md={6} className=\"image\"/>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    };\r\n };\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n       fill: (text) => {dispatch(fill(text))},\r\n       send: (text) => {dispatch(send(text))}\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Log_in));","// Open the train\nexport const opent = (option) =>{\n    return {\n        type: 'OPENT',\n        payload: option\n    }\n}","import React, { Component } from 'react'\nimport '../css/train.css';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid' \n// open Train \nimport {opent} from '../_actions/Train';\nimport train from '../resources/Train.png';\nimport { withRouter } from 'react-router-dom';\n\n//redux\nimport {connect} from 'react-redux'\n\n\nclass Train extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {}\n        this.openTrain = this.openTrain.bind(this)\n    }\n    openTrain(){this.props.opent('close train')}\n\n    render(){\n        \n        const {Train} = this.props\n        let title = 'Estado del Tren: '+ this.props.name\n        return(\n            \n            <Dialog open={Train.opent}>\n                \n                <DialogTitle align={\"center\"}>\n                    <div className=\"title\"><b>{title}</b></div>\n                    \n                </DialogTitle>\n                <DialogContent>\n                    <Grid container direction=\"row\" item={true} spacing={1} className=\"all\">\n                        <Grid item xs={12} sm={4} md={4} align=\"center\">\n                            <img src={train} alt=\"train\" width=\"150\" height=\"110\"/>\n                        </Grid>\n                        <Grid item xs={12} sm={4} md={4} align=\"center\" >\n                            <div className=\"TrainE\">\n                                <h2>{this.props.free}</h2>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} sm={4} md={4} align=\"center\">\n                            <div className=\"TrainF\">\n                                <h2>{parseInt(this.props.capacity)-parseInt(this.props.free)}</h2>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} sm={8} md={8} align=\"center\" className=\"text_info\">\n                            <p>\n                            Contenedor <b>Verde</b> indica\n                            las plataformas <i>libres del tren</i>\n                            </p>\n                        </Grid>\n                        <Grid item xs={12} sm={4} md={4} align=\"center\" >\n                            <div className=\"TrainSE\">\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} sm={8} md={8} align=\"center\" className=\"text_info\" >\n                            <p>\n                            Contenedor <b>Rojo</b> indica\n                            las plataformas <i>ocupadas del tren</i>\n                            </p>\n                        </Grid>\n                        <Grid item xs={12} sm={4} md={4} align=\"center\">\n                            <div className=\"TrainSF\">\n                            </div>\n                        </Grid>\n\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.openTrain}> cerrar </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       Train: state.Train\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        opent: (option) => {dispatch(opent(option))},\n        \n    }\n}\nexport default withRouter((connect(mapStateToProps,mapDispatchToProps)(Train)));","import React, { Component } from 'react'\nimport '../css/cardServices.css';\n\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EventIcon from '@material-ui/icons/Event';\nimport Fab from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid' \n\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport Train from './Train'\nimport TrainIcon from '@material-ui/icons/Train';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\n\nimport {connect} from 'react-redux'\n// open Train \nimport {opent} from '../_actions/Train';\n\nvar wtf8 = require('wtf-8');\n\nclass CardServices extends Component {\n    constructor(props){\n        super(props);  \n        this.state = {\n           dialogVerMas: false,\n           dialogReservar: false,\n           openT: false,\n           open: false,\n           id: 0\n        }\n        this.openTrain = this.openTrain.bind(this);\n        /*this.handleClose = this.handleClose.bind(this);*/\n          \n    }\n    openTrain(){this.props.opent('open train')}\n    render(){\n        \n        return(\n            <Grid item xs={12} sm={12} md={6}>\n                <Card raised={true} className=\"card\">\n                    <CardHeader\n                        avatar={<div className=\"avatar\">R</div>}\n                        title= {wtf8.decode(this.props.card.title)}\n                        subheader= {this.props.card.class+\"  &  \"+this.props.card.transport}\n                        action={<IconButton aria-label=\"settings\"><MoreVertIcon /></IconButton>} \n                    />\n                    \n                    <CardContent>\n                        <Grid container direction=\"row\" className=\"body\">\n                            <Grid item xs={6} md={6} align=\"center\" >\n                                <PlaceIcon color={'primary'}/>\n                                <h2>Lugar de origen</h2>\n                                <h5>{wtf8.decode(this.props.card.origin)}</h5>\n                            </Grid>\n                            <Grid item xs={6} md={6} align=\"center\" >\n                                <PlaceIcon color={'secondary'}/>\n                                <h2>Lugar de destino</h2>\n                                <h5>{wtf8.decode(this.props.card.destination)}</h5>\n                            </Grid>\n\n                            <Grid item xs={6} md={6} align=\"center\" >\n                                <EventIcon color={'secondary'}/>\n                                <h2>Fecha de salida</h2>\n                                {this.props.card.date_start.slice(0,21)}\n                            </Grid>\n                            <Grid item xs={6} md={6} align=\"center\" >\n                            <EventIcon color={'primary'}/>\n                                <h2>Fecha de llegada</h2>\n                                {this.props.card.date_end.slice(0,21)}\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <CardActions>\n                        <Grid item xs={2} sm={2} align=\"center\">\n                            {this.props.card.transport === 'terrestre' ? \n                                <br/> : \n                                <Fab color=\"secondary\" size={'small'}>\n                                    <TrainIcon onClick={this.openTrain}/>\n                                </Fab>\n                            }\n                            <Train free={this.props.card.places} capacity={this.props.card.capacity} name={this.props.card.title}/>\n                        </Grid>\n                        <Grid item xs={4} sm={6} align=\"center\"></Grid>\n                        <Grid item xs={3} sm={2} align=\"center\">\n                            <Fab color=\"primary\" size={'small'} > <EditIcon onClick={this.handleClose}/> </Fab>\n                        </Grid>\n                        <Grid item xs={3} sm={2} align=\"center\">\n                            <Fab color=\"secondary\" size={'small'}><VisibilityOffIcon  onClick={this.handleClickButton2}/></Fab>\n                        </Grid>\n                    </CardActions>\n                </Card>\n            </Grid>\n            \n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       Train: state.Train\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        opent: (option) => {dispatch(opent(option))},\n        /*change: (option) => {dispatch(change(option))},\n       changeName: (option) => {dispatch(changeName(option))}*/\n    }\n}\n\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(CardServices));","import React, { Component } from 'react'\n\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Grid from '@material-ui/core/Grid';\n\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport { withRouter } from 'react-router-dom';\n\nimport {connect} from 'react-redux'\nimport {change} from '../_actions/Dialog'\n\nclass DateTime extends Component {\n    \n    constructor(props){\n       super(props);\n       this.state = {\n          selectedDate: new Date('2019-10-31T09:00:00')\n       }\n       this.ChangeOption = this.ChangeOption.bind(this)\n    }\n    ChangeOption(event){\n       //console.log(event)\n       \n        this.setState({\n            selectedDate: event\n        })\n        if (this.props.labelDate === 'Fecha Salida'){\n            this.props.change(['salida',event])\n        }else{\n            this.props.change(['llegada',event])\n        }\n       \n    }\n     \n \n    render(){\n       //const {DateTime} = this.props;\n       \n        return(\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <Grid container justify=\"space-around\">\n                    <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    id=\"date-picker-inline\"\n                    label={this.props.labelDate}\n                    value={this.state.selectedDate}\n                    onChange={this.ChangeOption}\n                    KeyboardButtonProps={{'aria-label': 'change date'}}\n                    />\n                    \n                    <KeyboardTimePicker\n                    margin=\"normal\"\n                    id=\"time-picker\"\n                    label={this.props.labelTime}\n                    value={this.state.selectedDate}\n                    onChange={this.ChangeOption}\n                    KeyboardButtonProps={{'aria-label': 'change time'}}\n                    /> \n                </Grid>\n            </MuiPickersUtilsProvider>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       Dialog: state.Dialog,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n       change: (date) => {dispatch(change(date))}\n    }\n}\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(DateTime));","import React, { Component } from 'react'\nimport '../css/cities.css'; \n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport { RadioGroup, Collapse, Grid } from '@material-ui/core';\n\nimport {connect} from 'react-redux'\nimport {change} from '../_actions/Dialog'\n\nclass ListCities extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            open: false,\n            setOpen: false,\n            text: ''\n        }\n        this.OpenList = this.OpenList.bind(this);\n        this.ChangeOption = this.ChangeOption.bind(this);\n\n    }\n    OpenList(){\n        this.setState({open: !this.state.setOpen, setOpen: !this.state.open})\n        \n    }\n\n    async ChangeOption(event){\n        let option = event.target.value\n        this.props.change([this.props.type,option]);\n        this.setState({ text: option })\n    }\n    \n    render(){\n        \n        const {dialog} = this.props\n        return(\n            <List justify=\"center\" style={{color:this.props.color}}>\n                <ListItem button onClick={this.OpenList}>\n                <ListItemText primary={\n                        this.state.text === '' ? \n                        this.props.type : \n                        this.props.type +\" : \"+this.state.text\n                    }/>\n                    {this.state.open ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n                    <RadioGroup>\n                        <ListItem >\n                            <FormControlLabel control={ <Radio className=\"list\" onChange={this.ChangeOption} value=\"bogotá\"/>}\n                            label=\"Bogotá\"/>\n                        </ListItem>\n                        <ListItem >\n                            <FormControlLabel control={ <Radio className=\"list\" onChange={this.ChangeOption} value=\"santa marta\"/>}\n                            label=\"Santa Marta\"/>\n                        </ListItem>    \n                        <ListItem >\n                            <FormControlLabel control={ <Radio className=\"list\" onChange={this.ChangeOption} value=\"barranquilla\"/>}\n                            label=\"Barranquilla\"/>\n                        </ListItem>\n                        <ListItem >\n                            <FormControlLabel control={<Radio className=\"list\" onChange={this.ChangeOption} value=\"cartagena\"/>}\n                            label=\"Cartagena\"/>\n                        </ListItem>\n                        <ListItem >\n                            <FormControlLabel control={ <Radio className=\"list\" onChange={this.ChangeOption} value=\"dorada\"/>}\n                            label=\"Dorada\"/>\n                        </ListItem>\n                        <ListItem >\n                            <FormControlLabel control={ <Radio className=\"list\"onChange={this.ChangeOption} value=\"belencito\"/>}\n                            label=\"Belencito\"/>\n                        </ListItem>\n                    </RadioGroup>\n                </Collapse>\n            </List>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        dialog: state.Dialog,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n       change: (value) => {dispatch(change(value))},\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(ListCities);","import React, { Component } from 'react'\nimport '../css/cities.css'; \n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport { RadioGroup, Collapse } from '@material-ui/core';\n\nimport {connect} from 'react-redux'\nimport {change} from '../_actions/Dialog'\n\nclass ListTrans extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            open: false,\n            setOpen: false\n        }\n        this.OpenList = this.OpenList.bind(this);\n        this.ChangeOption = this.ChangeOption.bind(this);\n\n    }\n    OpenList(){\n        this.setState({open: !this.state.setOpen, setOpen: !this.state.open})\n    }\n\n    async ChangeOption(event){\n        let option = event.target.value\n        this.props.change([this.props.type,option]);\n    }\n    \n    render(){\n        \n        //console.log(\"cities: \",ListTrans)\n        return(\n            <List justify=\"center\">\n                <ListItem button onClick={this.OpenList}>\n                <ListItemText primary={this.props.type}/>\n                    {this.state.open ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n                    <RadioGroup>\n                        <ListItem >\n                            <FormControlLabel control={ <Radio className=\"list\" onChange={this.ChangeOption} value=\"terrestre\" name={\"algo\"}/>}\n                            label=\"Terrestre\"/>\n                        </ListItem>\n                        <ListItem >\n                            <FormControlLabel control={ <Radio className=\"list\" onChange={this.ChangeOption} value=\"ferreo\"/>}\n                            label=\"Ferreo\"/>\n                        </ListItem>    \n                        <ListItem >\n                            <FormControlLabel control={ <Radio className=\"list\" onChange={this.ChangeOption} value=\"fluvial\"/>}\n                            label=\"Fluvial\"/>\n                        </ListItem>\n                        <ListItem >\n                            <FormControlLabel control={<Radio className=\"list\" onChange={this.ChangeOption} value=\"aereo\"/>}\n                            label=\"Aereo\"/>\n                        </ListItem>\n                    </RadioGroup>\n                </Collapse>\n            </List>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        dialog: state.Dialog,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        change: (value) => {dispatch(change(value))},\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(ListTrans);","import React,{Component}   from 'react';\n\n\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport Button from '@material-ui/core/Button';\nimport DateTime from './DateTime'\nimport Fab from '@material-ui/core/Fab';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport ListCities from './ListCities'\nimport ListTrans from './ListTrans'\nimport Popover from '@material-ui/core/Popover';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography'; \n//import {withRouter } from 'react-router-dom';\n\nimport '../css/stepper_service.css';\n \nclass StepService extends Component{\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            activeStep: 0,\n            setActiveStep: 0,\n            skipped: new Set(),\n            setSkipped: new Set(),\n            steps: ['Descripción', 'Programación'],\n            checked: true\n        }\n        /*const [activeStep, setActiveStep] = React.useState(0);\n        const [skipped, setSkipped] = React.useState(new Set());\n        const steps = getSteps();*/\n        this.isStepSkipped = this.isStepSkipped.bind(this);\n        this.isStepOptional = this.isStepOptional.bind(this);\n        this.handleNext = this.handleNext.bind(this);\n        this.handleBack = this.handleBack.bind(this);\n        \n    }\n    \n    getStepContent(step) {\n        switch (step) {\n            case 0:\n                const id = this.state.open ? 'simple-popover' : undefined;\n                return (\n                    <div>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"title\"\n                            label=\"Titulo\"\n                            autoFocus\n                            onChange={this.changeState}\n                        />\n                        <ListTrans type={\"Transporte\"}/>\n                        <Grid container direction={'row'}>\n                            <Grid item xs={10}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    disabled={false}\n                                    fullWidth\n                                    id=\"capacity\"\n                                    label=\"Capacidad\"\n                                    autoFocus\n                                    onChange={this.changeState}\n                                />\n                            </Grid>\n                            <Grid item xs={2} align={'center'} className=\"text_info\">\n                                <Fab color=\"secondary\" size={'small'}>\n                                    <AttachFileIcon onClick={this.openPop}/>\n                                    <Popover\n                                        id={id}\n                                        open={this.state.openP}\n                                        anchorEl={this.state.anchorEl}\n                                        onClose={this.openPop}\n                                        anchorOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'center',\n                                        }}\n                                        transformOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'center',\n                                        }}\n                                    >\n                                        <Typography className=\"typography\">\n                                        <b>Capacidad: </b>Plataformas que posee el tren \n                                        </Typography>\n                                        <Typography className=\"typography\">\n                                        <b>Espacios: </b>Plataformas disponibles del tren\n                                        </Typography>\n                                    </Popover>\n                                </Fab>\n                            </Grid>\n                        </Grid>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"places\"\n                            label=\"Espacios\"\n                            autoFocus\n                            onChange={this.changeState}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            //required\n                            fullWidth\n                            id=\"cost\"\n                            label=\"Costo\"\n                            name=\"costo\"\n                            autoFocus\n                            onChange={this.changeState}\n                        />\n                    </div>\n                )\n            case 1:\n                return (\n                    <div>\n                        <Grid container direction=\"row\">\n                            <Grid item xs={6}>\n                                <ListCities type={\"Origen\"} color=\"#132947\"/>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <ListCities type={\"Destino\"} color=\"#132947\"/>\n                            </Grid>\n                        </Grid>\n                        <Grid container direction={'row'}>\n                            <Grid item xs={6}>\n                                <DateTime labelDate={\"Fecha Salida\"} labelTime={\"Hora Salida\"}/>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <DateTime labelDate={\"Fecha Llegada\"} labelTime={\"Hora Llegada\"}/>        \n                            </Grid>\n                        </Grid>\n\n                        <Grid container direction={'row'} className=\"switch\">\n                            <Grid item xs={8} align=\"center\">\n                                Permite que otros usuarios vean el servicio\n                            </Grid>\n                            <Grid item xs={4} align=\"center\">\n                                <FormControlLabel\n                                    control={\n                                    <Switch\n                                        checked={this.state.checked}\n                                        onChange={this.handleChange.bind(this)}\n                                        value=\"checked\"\n                                        color=\"primary\"\n                                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                                    />\n                                    }\n                                    label=\"Hacer visible\"\n                                />\n                            </Grid>\n                        </Grid>\n                        \n                    </div>\n                )\n            default:\n                return 'Unknown step';\n        }\n    }\n    \n    //change que switch state\n    handleChange(){\n        this.setState({\n            checked: !this.state.checked\n        })\n    }\n    isStepOptional = step => {\n        return step === 1;\n    };\n\n    isStepSkipped = step => {\n        return this.state.skipped.has(step);\n    };\n\n    async handleNext() {\n        await this.setState({activeStep: this.state.activeStep + 1})\n    };\n\n    async handleBack () {\n        await this.setState({activeStep: this.state.activeStep - 1})\n        //console.log(\"hallo: \",this.state.activeStep)\n    };\n\n    handleSkip = () => {\n        if (!this.isStepOptional(this.state.activeStep)) {\n        // You probably want to guard against something like this,\n        // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        //this.state.setActiveStep(prevActiveStep => prevActiveStep + 1);\n        this.setState({\n            setActiveStep: prevActiveStep => prevActiveStep + 1\n        })\n        this.setState({\n            setSkipped: prevSkipped => {\n                const newSkipped = new Set(prevSkipped.values());\n                newSkipped.add(this.state.activeStep);\n                return newSkipped;\n            }\n        })\n        /*this.state.setSkipped(prevSkipped => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(this.state.activeStep);\n            return newSkipped;\n        });*/\n    };\n\n    handleReset = () => {\n        this.setState({activeStep: 0})\n    };\n \n    \n    render(){\n        \n        return(\n            <div className=\"root\">\n                <Grid container direction=\"row\">\n                    <Grid item xs={12} sm={12} md={12}>\n                        <Stepper activeStep={this.state.activeStep}>\n                            {   \n                                this.state.steps.map((label, index) => {\n                                    const stepProps = {};\n                                    const labelProps = {};\n                                    if (this.isStepSkipped(index)) {\n                                        stepProps.completed = false;\n                                    }\n                                    return (\n                                        <Step key={label} {...stepProps}>\n                                            <StepLabel {...labelProps}>{label}</StepLabel>\n                                        </Step>\n                                    );\n                                })\n                            }\n                        </Stepper>\n                    </Grid>\n                \n                    <Grid item xs={12} sm={12} md={12}>\n                        <div>\n                            {this.state.activeStep === this.state.steps.length ? (\n                                <div>\n                                    <Grid item xs={12} align=\"center\">\n                                    <Typography className=\"instructions\">\n                                        Servicio configurado correctamente.\n                                    </Typography>\n                                    </Grid>\n\n                                    <Grid container direction=\"row\" className=\"buttons\">\n                                        <Grid item xs={4} sm={4} md={4} align=\"center\">\n                                            <Button \n                                                fullWidth\n                                                variant=\"outlined\"\n                                                color=\"inherit\"\n                                                onClick={this.handleReset}\n                                                className=\"button\"\n                                                >\n                                                Reiniciar\n                                            </Button>\n                                        </Grid>\n                                        <Grid item xs={4} sm={4} md={4}></Grid>\n                                        <Grid item xs={4} sm={4} md={4} align=\"center\">\n                                            <Button\n                                                fullWidth\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                //onClick={this.sendRequest}\n                                                className=\"button\"\n                                                >\n                                                Crear\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                    \n                                </div>\n                            ) : (\n                                <div>\n                                    <Typography className=\"instructions\">{this.getStepContent(this.state.activeStep)}</Typography>\n                                    <div>\n                                        <Grid container direction=\"row\" className=\"buttons\">\n                                            <Grid item xs={4} sm={4} md={4} align=\"center\">\n                                                <Button \n                                                    fullWidth\n                                                    variant=\"contained\"\n                                                    color=\"secondary\"\n                                                    disabled={this.state.activeStep === 0} \n                                                    onClick={this.handleBack} \n                                                    className=\"button\"\n                                                    >\n                                                    Atras\n                                                </Button>\n                                            </Grid>\n                                            <Grid item xs={4} sm={4} md={4}></Grid>\n                                            <Grid item xs={4} sm={4} md={4} align=\"center\">\n                                                <Button\n                                                    fullWidth\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    onClick={this.handleNext}\n                                                    className=\"button\"\n                                                    >\n                                                    {this.state.activeStep === this.state.steps.length - 1 ? 'Terminar' : 'Siguiente'}\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </Grid>\n                </Grid>    \n            </div>\n        );\n    }\n}\n \nexport default StepService;","import React, { Component } from 'react'\nimport '../css/dialog.css'; \n\n//import AttachFileIcon from '@material-ui/icons/AttachFile';\n//import Button from '@material-ui/core/Button';\n//import DateTime from './DateTime'\nimport Dialog from '@material-ui/core/Dialog';\n//import DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport Fab from '@material-ui/core/Fab';\nimport { Grid } from '@material-ui/core';\n\n//import ListCities from './ListCities'\n//import ListTrans from './ListTrans'\n//import Popover from '@material-ui/core/Popover';\n\nimport StepService from '../components/StepService';\nimport store from '../store'\n//import TextField from '@material-ui/core/TextField';\n\n\n//import Typography from '@material-ui/core/Typography';\n\n\nimport {connect} from 'react-redux'\nimport {create,change,open} from '../_actions/Dialog'\n\nclass DialogService extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            /*SetOpenO: false,\n            openO: false,\n            openD: false,\n            setOpenD: false,\n            openT: false,\n            setOpenT: false,\n            //popOver\n            openP: false,\n            anchorEl: null*/\n            openP: false,\n            anchorEl: null\n        }\n        \n        //this.handleClick = this.handleClick.bind(this)\n        //this.handleClose = this.handleClose.bind(this)\n        this.SendRequest = this.SendRequest.bind(this);\n        this.openPop = this.openPop.bind(this);\n        this.changeState = this.changeState.bind(this);\n        this.closeDialog = this.closeDialog.bind(this);\n    }\n\n    openPop(event){\n        this.setState({ anchorEl: event.currentTarget, openP: !this.state.openP })\n    }\n\n    componentDidMount(){ \n        let id_user = store.getState().Login.id_user\n        this.props.change(['id_user',id_user])\n    }\n\n    async changeState(event){\n        const target = event.target.id;\n        const value = event.target.value;\n        this.props.change([target,value])\n    }\n\n    async SendRequest(){this.props.open('io')}\n    closeDialog(){ this.props.open('dialog')}\n    render(){\n        \n        const { dialog } = this.props;\n        //console.log(\"dialog\",dialog)\n\n        //const id = this.state.open ? 'simple-popover' : undefined;\n        return(\n            <Dialog open={dialog.open}>\n                \n                <DialogTitle >\n                    <Grid container direction=\"row\">\n                        <Grid item xs={5} md={5}>{\"Crear Nuevo Servicio\"}</Grid>\n                        <Grid item xs={3} md={3}></Grid>\n                        <Grid item xs={4} md={4} align=\"right\">\n                            <Fab color=\"primary\" size=\"small\" >\n                                <ExitToAppIcon onClick={this.closeDialog}/>\n                            </Fab>\n                        </Grid>\n                    </Grid>\n                </DialogTitle>\n                <DialogContent>\n                    <StepService/>\n                </DialogContent>\n            </Dialog>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       dialog: state.Dialog,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n       change: (date) => {dispatch(change(date))},\n       open: (date) => {dispatch(open(date))},\n       create: (text) => {dispatch(create(text))},\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(DialogService);","import React, { Component } from 'react'\nimport '../css/panel.css'; \n\nimport Button from '@material-ui/core/Button';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\n\n\nvar wtf8 = require('wtf-8');\nclass Panel extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            open: false\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n    handleChange(){this.setState({open: !this.state.open})}\n    \n\n    render(){\n        //console.log(\"this.props in panel: \",this.props.cardReq)\n        return(\n            <div className=\"wrap\">\n                <List className=\"list\">\n                    <ListItem> \n                        <ExpansionPanel expanded={this.state.open} onChange={this.handleChange}>\n                            <ExpansionPanelSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1bh-content\"\n                                id=\"panel1bh-header\"\n                                >\n                                <Typography className=\"heading\">{wtf8.decode(this.props.cardReq.title)}</Typography>\n                                <Typography className=\"secondaryHeading\">{this.props.cardReq.accept}</Typography>\n                                </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                            \n                            <Grid container direction={\"row\"}>\n                                <Grid item xs={12} md={12} sm={12}>\n                                    <Typography>\n                                        Cada petición presentada por el usuario tiene un cuerpo, el cual \n                                        presenta de manera resumida la intención de la misma, en esta ocasión es\n                                        presentado a continuación:<br/><br/>\n                                        {wtf8.decode(this.props.cardReq.body)}\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={4} md={8} sm={4} className=\"item\"></Grid>\n                                <Grid item xs={4} md={2} sm={4} className=\"item\" align=\"right\">\n                                    <Button variant='contained' color=\"secondary\">Aceptar</Button>\n                                </Grid>\n                                <Grid item xs={4} md={2} sm={4} className=\"item\" align=\"right\">\n                                    <Button variant=\"outlined\" color=\"secondary\">Rechazar</Button>\n                                </Grid>\n                            </Grid>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>    \n                    </ListItem>\n                </List>\n            </div>\n        )\n    }\n}\n\nexport default Panel;","import API_ROUTE from '../constants/api_route'\nconst axios = require(\"axios\")\n\nexport const openr = (option) =>{\n    return {\n        type: 'OPENR',\n        payload: option\n    }\n}\n\n//change the request values\nexport const changer = (option) =>{\n    return {\n        type: 'CHANGER',\n        payload: option\n    }\n}\n\n\n// Load all request\nexport const loadr = () =>{\n    return(dispatch)=> {\n        axios.post(API_ROUTE, {\n            query: `query{\n                getRequests{\n                    id\n                    title\n                    body\n                    accept\n                }\n            }`\n        }).then((result)=>{\n            //let request  = result.data.data.getRequests\n            //dispatch(changer(['requests',request]))\n        }).catch(err => console.log(err))\n    } \n    \n}\n","import React, { Component } from 'react'\nimport '../css/dialogN.css'; \n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { CssBaseline, Grid} from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\n/*import ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';*/\nimport Panel from './Panel'\nimport Slide from '@material-ui/core/Slide';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport {connect} from 'react-redux'\nimport {openDN} from '../_actions/Dialog'\nimport {loadr} from '../_actions/Request'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nclass DialogNotification extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            openP: false,\n            anchorEl: null\n        }\n        \n        //this.handleClick = this.handleClick.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n    }\n    componentDidMount(){this.props.loadr('load requests')}\n    handleClose(){\n        this.props.openDN('dialogN')\n    }\n    render(){\n        const { dialog } = this.props;\n        const { request } = this.props;\n        //console.log(\"request_ :\",request['requests'])\n        let requestCard = request['requests'].map(card=>{\n            return(\n                <Panel key={card.id} cardReq={card}/>\n            )\n        })\n        \n        return(\n            <Dialog fullScreen open={dialog.openN} onClose={this.handleClose} TransitionComponent={Transition}>\n                <div className=\"root-not\">\n                <Grid container direction=\"row\">\n                    <Grid item xs={12}>\n                        <AppBar className=\"appBar\">\n                            <Toolbar>\n                                <IconButton edge=\"start\" color=\"inherit\" onClick={this.handleClose} aria-label=\"close\">\n                                    <CloseIcon />\n                                </IconButton>\n                                <Typography variant=\"h6\" className=\"title\"></Typography>\n                                <Button \n                                    variant=\"contained\" \n                                    color=\"secondary\" \n                                    onClick={this.handleClose}>\n                                    save\n                                </Button>\n                            </Toolbar>\n                        </AppBar>\n                        <CssBaseline/> \n                    </Grid>\n                    <Grid container  direction=\"column\" >\n                        {requestCard}                            \n                    </Grid>\n                </Grid>\n                </div>\n                \n            </Dialog>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       dialog: state.Dialog,\n       request: state.Request,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n       openDN: (date) => {dispatch(openDN(date))},\n       // load requests\n       loadr: (date) => {dispatch(loadr(date))}\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(DialogNotification);","import React, { Component } from 'react'\r\nimport '../css/navbar.css'; \r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\n//import auth from '../router/Auth'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Info from '../resources/question.svg'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {withRouter } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\n\r\nimport {connect} from 'react-redux'\r\nimport {open_drawer} from '../_actions/Drawer'\r\nimport {change} from '../_actions/Register'\r\n\r\n\r\nconst styles = theme => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    textButton: {\r\n        color: 'white',\r\n        textDecorationLine: 'none',\r\n    }\r\n});\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            openM: false,\r\n            anchor: null\r\n        }\r\n        this.openDrawer = this.openDrawer.bind(this);\r\n        this.openMenu = this.openMenu.bind(this);\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    openDrawer(){this.props.open('drawer');}\r\n\r\n    openMenu(event){\r\n        this.setState({\r\n            openM: !this.state.openM,\r\n            anchor: event.currentTarget\r\n        })\r\n    }\r\n    // close session\r\n    logOut(){\r\n        //auth.logout(() =>{})\r\n        this.props.history.push(\"/\") \r\n        this.props.change(['authSuccess',false])\r\n        //localStorage.setItem('auth',false)\r\n    }\r\n\r\n    render() {\r\n        const menuId = 'primary-search-account-menu';\r\n        \r\n\r\n        const { classes } = this.props;\r\n        //const { Drawer } = this.props;\r\n        \r\n        return (\r\n            <div className=\"grow\">\r\n                <AppBar position=\"static\" color ='primary'>     \r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            className={classes.menuButton}\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={this.openDrawer}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h4\" noWrap>IMA</Typography>\r\n                        <div className={classes.grow}/>\r\n                        <div className={classes.sectionDesktop}>\r\n                            <div className=\"icon_nav\">\r\n                                <IconButton \r\n                                    aria-label=\"show 1 new mails\" \r\n                                    color=\"inherit\"\r\n                                    onClick={this.openInfo}\r\n                                    >\r\n                                    <img alt=\"information\" src={Info} width=\"30px\" />\r\n                                </IconButton>\r\n                                <IconButton disableRipple={true} aria-label=\"show 2 new notifications\" color=\"inherit\" >\r\n                                    <CloudQueueIcon/>\r\n                                </IconButton>\r\n                                <IconButton aria-label=\"show 2 new notifications\" color=\"inherit\" >\r\n                                    <Badge badgeContent={1} color=\"secondary\">\r\n                                        <NotificationsIcon />\r\n                                    </Badge>\r\n                                </IconButton>\r\n                            </div>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                color=\"inherit\"\r\n                                onClick={this.openMenu}\r\n                            >\r\n                                <AccountCircle style={{fontSize: '35px'}}/>\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className=\"section-mobile\"></div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Menu\r\n                    anchorEl={this.state.anchor}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                    id={menuId}\r\n                    keepMounted\r\n                    //transformOrigin={{ vertical: 'down', horizontal: 'right' }}\r\n                    open={this.state.openM}\r\n                    onClose={this.openMenu}>\r\n                    <MenuItem onClick={this.LinkProfile}>Perfil</MenuItem>\r\n                    <MenuItem onClick={this.logOut}>Cerrar Sesión</MenuItem>\r\n                </Menu>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Drawer: state.Drawer\r\n    };\r\n };\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n       open: (text) => {dispatch(open_drawer(text))},\r\n       // change the state of authSuccess\r\n       change: (text) => {dispatch(change(text))},\r\n    }\r\n}\r\nexport default withRouter(withStyles(styles)(connect(mapStateToProps,mapDispatchToProps)(Navbar)));\r\n","import React,{Component}   from 'react';\nimport '../css/snackbar.css'; \n\n\nimport Slide from '@material-ui/core/Slide';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n \n\n\nclass SnackUser extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            vertical: 'bottom',\n            horizontal: 'left',\n            open: true\n        }\n    }\n    \n    handleClose(){ this.setState({ open: false })}\n    SlideTransition(props) {\n        return <Slide {...props} direction=\"right\" />;\n    }\n    \n    render(){\n        return(\n            <div>\n                <Snackbar\n                    anchorOrigin={{vertical: this.state.vertical,horizontal: this.state.horizontal}}\n                    key={`${this.state.vertical},${this.state.horizontal}`}\n                    open={this.state.open}\n                    autoHideDuration={4000}\n                    TransitionComponent={this.SlideTransition.bind(this)}\n                    onClose={this.handleClose.bind(this)}\n                >\n                    <SnackbarContent style={{ backgroundColor: '#0749e6'}}\n                        message={\n                            <div className=\"message_snack\">\n                                <span id=\"client-snackbar\">Bienvenido</span>\n                                <span className=\"user_snack\">{this.props.message}</span>\n                            </div>\n                            \n                        }\n                    />\n                </Snackbar>\n            </div>\n        );\n    }\n}\n \n \nexport default SnackUser ;","import React, { Component } from 'react'\r\nimport '../css/services.css';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\n//import auth from '../router/Auth'\r\nimport CardService from '../components/CardServices'\r\n//import CommentIcon from '@material-ui/icons/Comment';\r\nimport { CssBaseline, Grid} from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport Dialog from '../components/DialogService'\r\nimport DialogN from '../components/DialogNotification'\r\nimport Fab from '@material-ui/core/Fab';\r\n//import LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\n//import MyTheme from '../constants/MyTheme';\r\nimport Navbar from '../components/NavUser';\r\nimport SnackUser from '../components/SnackUser'\r\n//import {ThemeProvider} from '@material-ui/core/styles';\r\n\r\n//import store from '../store'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\n//import {load,open,openDN} from '../actions/Dialog'\r\nimport * as actions from '../_actions/Dialog';\r\n\r\n\r\n\r\n//var wtf8 = require('wtf-8');\r\n\r\nclass Services extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            \r\n        }\r\n        this.openDialog = this.openDialog.bind(this)\r\n        // notification dialog\r\n        this.openDialogN = this.openDialogN.bind(this)\r\n    }\r\n\r\n    openDialog(){ this.props.open('dialog')}\r\n    openDialogN(){ this.props.openDN('dialog')}\r\n\r\n    componentDidMount(){ this.props.load('load data')}\r\n\r\n    render(){\r\n        \r\n        const {dialog} = this.props\r\n        //const {Login} = this.props\r\n        const {register} = this.props\r\n\r\n        //console.log(\"dialog in services: \",dialog['cards'])\r\n        //console.log(\"login; \",Login)\r\n        let cards = dialog['cards'].map(card =>{\r\n            return(\r\n                <CardService key={card.id} card={card}/>\r\n            )\r\n        })\r\n        /*let a = store.getState().Dialog\r\n        console.log(a['cards'])*/\r\n        \r\n        return(\r\n            <div className=\"root\">\r\n                <SnackUser message={register.nombre}/>\r\n                <Grid container component=\"main\" className=\"pater\" direction=\"row\">\r\n                    <Grid item xs={12}>\r\n                        <Navbar/>\r\n                        <CssBaseline/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={1} md={1}>\r\n                        <Container>\r\n                            <Grid container direction=\"row\" >\r\n                                <Grid item xs={6} sm={12} className=\"fab\">\r\n                                    <Tooltip title=\"Crear Servicio\">\r\n                                        <Fab color=\"secondary\" size=\"medium\"  >\r\n                                            <AddIcon onClick={this.openDialog} style={{ fontSize: 30 }}/>\r\n                                        </Fab>\r\n                                    </Tooltip>\r\n                                    \r\n                                </Grid>\r\n                            </Grid>\r\n                        </Container>\r\n                    </Grid>\r\n                    <Grid container  xs={12} sm={11} md={11} alignItems=\"center\"  item={true} spacing={2} className=\"cards\">\r\n                            {cards}\r\n                        <Container>\r\n                            <Dialog></Dialog>\r\n                            <DialogN></DialogN>    \r\n                        </Container>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n       dialog: state.Dialog,\r\n       Login : state.Login,\r\n       register: state.Register\r\n    };\r\n};\r\n/*\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n       open: (date) => {dispatch(open(date))},\r\n       openDN: (date) => {dispatch(openDN(date))},\r\n       //load: (date) => {dispatch(load(date))}\r\n    }\r\n}*/\r\nexport default withRouter(connect(mapStateToProps,/*mapDispatchToProps,*/actions)(Services));","import React, { Component } from 'react'\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\n//import InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport { RadioGroup } from '@material-ui/core';\r\n\r\n\r\n// Redux\r\nimport {connect} from 'react-redux'\r\n//import {change} from '../actions/ListRol'\r\nimport {change} from '../_actions/Register'\r\nimport {open} from '../_actions/ListRol'\r\n\r\n\r\nclass ListRol extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.changeState = this.changeState.bind(this);\r\n        this.OpenList = this.OpenList.bind(this);\r\n    }\r\n    async changeState(event){\r\n        let option = event.target.value\r\n        this.props.change(['rol',option]);\r\n        this.props.change(['validate_rol',false]);\r\n        this.setState({ text: option })\r\n        \r\n    }\r\n    \r\n    OpenList() {this.props.open('change')};\r\n\r\n    render() {\r\n        let {listRol} = this.props\r\n        return (\r\n            <div>\r\n                <List justify=\"center\">\r\n                    <ListItem button onClick={this.OpenList}>\r\n                        <ListItemIcon>\r\n                            <PersonIcon color=\"primary\" />    \r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\r\n                            this.state.text === '' ? \r\n                            \"Rol\" : \r\n                            \"Rol\" +\" : \"+this.state.text\r\n                        }\r\n                        />\r\n                        {listRol.open ? <ExpandLess /> : <ExpandMore />}\r\n                    </ListItem>\r\n                    \r\n                    <Collapse in={listRol.open} timeout=\"auto\" unmountOnExit>\r\n                        <List component=\"div\" disablePadding>\r\n                            <RadioGroup >\r\n                                <ListItem className=\"nested\">\r\n                                <FormControlLabel\r\n                                    control={<Radio onChange={this.changeState} value=\"generador\"/>}\r\n                                    label=\"Generador de Carga\"\r\n                                />\r\n                                </ListItem>\r\n                                <ListItem className=\"nested\">\r\n                                <FormControlLabel\r\n                                    control={<Radio disabled={false} onChange={this.changeState} value=\"transportador\"/>}\r\n                                    label=\"Transportador de Carga\"\r\n                                />\r\n                                </ListItem>\r\n                                <ListItem className=\"nested\">\r\n                                <FormControlLabel\r\n                                    control={<Radio disabled={true} onChange={this.changeState} value=\"operador\"/>}\r\n                                    label=\"Operador logistico\"\r\n                                />\r\n                                </ListItem>\r\n                            </RadioGroup>\r\n                        </List>\r\n                    </Collapse>\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n       listRol: state.ListRol,\r\n    };\r\n };\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n       change: (text) => {dispatch(change(text))},\r\n       open: (text) => {dispatch(open(text))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ListRol);","export const change = (option) =>{\r\n    return {\r\n        type: 'CHANGE',\r\n        payload: option\r\n    }\r\n}\r\n\r\nexport const open = (option) =>{\r\n    return {\r\n        type: 'OPEN',\r\n        payload: option\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../css/register.css';\r\n\r\nimport BackDrop from '../components/BackDrop'\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListRol from '../components/ListRol'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport SnackAlert from '../components/_Snacks/SnackAlert';\r\nimport TextEmail from '../components/_Form/TextEmail'\r\n//import TextField from '@material-ui/core/TextField';\r\nimport TextPassword from '../components/_Form/TextPassword'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\n// Redux\r\nimport {connect} from 'react-redux'\r\nimport {change,register,email_success} from '../_actions/Register'\r\n// view loading\r\nimport { openBD } from '../_actions/actions_backdrop' \r\nimport { openSnack } from '../_actions/actions_snack'\r\n\r\nclass Sign_up extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            validate: false,\r\n            success: false,\r\n            view: \"password\",\r\n            password: '',\r\n            showPassword: false,\r\n            color: '#bf6c2c'\r\n        }\r\n        this.sendRequest = this.sendRequest.bind(this);\r\n    }\r\n\r\n    sendRequest(){ \r\n        \r\n        this.props.openbd('back_drop')\r\n        setTimeout(() => {  \r\n            let { Register } = this.props\r\n            this.props.email_success(Register.email,'sign_up')\r\n        }, 2000);\r\n        \r\n        setTimeout(() => {  \r\n            let { Register } = this.props\r\n            //console.log(\"before register: \",Register.unique)\r\n            if (!Register.unique){\r\n                setTimeout(() => {  \r\n                    //console.log(\"start register!!\")\r\n                    this.props.register() }, 1000);\r\n                setTimeout(() => {  \r\n                    let { Register } = this.props\r\n                    //console.log(\"Rsuccess: \",Register.registerSuccess)\r\n                    if (Register.registerSuccess ){ \r\n                        //console.log(\"entry true\"); \r\n                        this.changeView()\r\n                    }\r\n                    this.props.openbd('back_drop')\r\n                }, 9000);\r\n            }else{\r\n                this.props.openbd('back_drop');\r\n                this.props.open_snack('snack_alert');\r\n                setTimeout(() => { this.props.open_snack('snack_alert');}, 3000);\r\n            }\r\n        }, 7000);\r\n    }\r\n\r\n    changeView(){ this.props.history.push('/log_in')}\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <Grid container component=\"main\" className=\"root\">\r\n                <CssBaseline />\r\n                <Grid item xs={false} sm={6} md={6} className=\"image\"/>\r\n                <Grid item xs={12} sm={6} md={6} component={Paper} elevation={5} square>\r\n                    <div className=\"paper\">\r\n                        <div className=\"Avatar\">\r\n                            <Fab color=\"primary\" size={'large'} >\r\n                                <PersonAddIcon/>\r\n                            </Fab>\r\n                        </div>\r\n                        <div className=\"title\">\r\n                            <Typography component=\"h5\" variant=\"h5\" className=\"title\"> Registro</Typography>\r\n                        </div>\r\n                        \r\n                        <form className=\"form\" noValidate>\r\n                            <Grid container item spacing={2} xs={12} justify=\"center\">\r\n                                \r\n                                <BackDrop message=\"Registrando usuario...\"/>\r\n                                <SnackAlert message=\"Correo electrónico en uso\"/>\r\n\r\n                                <Grid container direction=\"row\" spacing={1} justify=\"center\">\r\n                                    <Grid item xs={10} sm={9}>\r\n                                        <TextEmail id=\"nombre\" label=\"Nombre empresa\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={10} sm={9} >\r\n                                        <TextEmail id=\"email\" label=\"Correo electrónico\" view=\"sign_up\"/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                \r\n                                <Grid item xs={10} sm={9} className=\"text_password\"></Grid>\r\n\r\n                                <Grid container direction=\"row\" spacing={1}>\r\n                                    <Grid item xs={1} sm={1}></Grid>\r\n                                    <Grid item xs={4} sm={5} className=\"password\" >\r\n                                        <TextPassword label=\"contraseña\" width={78} id=\"password\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={4} sm={5} className=\"password\" >\r\n                                        <TextPassword label=\"confirmación\" width={88} id=\"confirm\"/>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={10} sm={9} className=\"text_password\">\r\n                                    Utiliza ocho caracteres como mínimo con una \r\n                                    combinación de letras, números y símbolos.\r\n                                </Grid>\r\n                                <Grid item xs={10} sm={5}>\r\n                                    <TextEmail id=\"nit\" label=\"Nit empresa\"/>\r\n                                </Grid>\r\n                                <Grid item xs={10} sm={5} >\r\n                                    <div className=\"list_signup\">\r\n                                        <ListRol />\r\n                                    </div>\r\n                                </Grid>\r\n                                \r\n                                <Grid container spacing={3} direction=\"row\" justify=\"center\" className=\"submit_signup\">\r\n                                    <Grid item xs={6} sm={4} className=\"submit\">\r\n                                        <Button\r\n                                            fullWidth\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className=\"submit\"\r\n                                            onClick={this.sendRequest}>\r\n                                            Registrar usuario\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} sm={6} className=\"submit\">\r\n                                        <Button\r\n                                            fullWidth\r\n                                            variant=\"outlined\"\r\n                                            color=\"secondary\"\r\n                                            className=\"submit\"\r\n                                            onClick={this.changeView.bind(this)}>\r\n                                            prefiero iniciar sesión\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Register: state.Register\r\n    };\r\n};\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n       change: (text) => {dispatch(change(text))},\r\n       // Register an user\r\n       register: (text) => {dispatch(register(text))},\r\n       email_success: (text) => {dispatch(email_success(text))},\r\n       openbd: (text) => {dispatch(openBD(text))},\r\n       open_snack: (text) => {dispatch(openSnack(text))},\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Sign_up));","import React, { Component } from 'react'\nimport '../css/user.css';\n\n//import { CssBaseline, Grid} from '@material-ui/core';\nimport AirplanemodeActiveIcon from '@material-ui/icons/AirplanemodeActive';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport DirectionsBoatIcon from '@material-ui/icons/DirectionsBoat';\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\nimport Divider from '@material-ui/core/Divider';\nimport Fab from '@material-ui/core/Fab';\nimport {Grid} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton'\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport ListCities from '../components/ListCities'\n//import SearchIcon from '@material-ui/icons/Search';\nimport TrainIcon from '@material-ui/icons/Train';\n\n\nimport {connect} from 'react-redux'\nimport {open_drawer} from '../_actions/Drawer'\nimport {change} from '../_actions/Dialog'\n\n//import Navbar from '../components/NavUser'\n\n\nclass DrawerUser extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            \n        }\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleClose(){\n        this.props.open('drawer')\n    }\n    changeValues(){\n        let origin = this.props.dialog.origin\n        let destination = this.props.dialog.destination\n        this.props.change([\"Origen\",destination]);\n        this.props.change([\"Destino\",origin]);\n        //console.log( this.props.dialog.origin,this.props.dialog.destination)\n    }\n\n    render(){\n        const {dialog} = this.props\n        return(\n            <div>\n                <Grid container direction=\"row\" >\n                    <Grid item xs={3} className=\"drawerHeader\">\n                        <IconButton className=\"button\" onClick={this.handleDrawerOpen}>\n                            <TrainIcon color={'secondary'}/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={3} md={3} className=\"drawerHeader\">\n                        <IconButton  className=\"button\" onClick={this.handleDrawerOpen}>\n                            <DirectionsBoatIcon color={'secondary'}/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={3} md={3} className=\"drawerHeader\">\n                        <IconButton className=\"button\" onClick={this.handleDrawerOpen}>\n                            <AirplanemodeActiveIcon color={'secondary'}/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={3} md={3} className=\"drawerHeader\">\n                        <IconButton className=\"button\" onClick={this.handleDrawerOpen}>\n                            <DirectionsBusIcon color={'secondary'}/>\n                        </IconButton>\n                    </Grid>\n                </Grid>\n                <Grid container justify=\"center\" alignItems=\"center\" className='drawerH'>\n                    <Grid item xs={1} md={1}></Grid>\n                    <Grid item xs={9} md={9} >\n                        <ListCities type=\"Origen\" color=\"#6fc9b2\"/>\n                    </Grid>\n                    <Grid item xs={2} md={2}>\n                        <IconButton className='button' onClick={this.changeValues.bind(this)}>\n                            <ImportExportIcon color={'secondary'}/> \n                        </IconButton>\n                    </Grid>\n\n                    <Grid item xs={1} md={1}></Grid>\n                    <Grid item xs={9} md={9} >\n                        <ListCities type=\"Destino\" color=\"#6fc9b2\"/>\n                    </Grid>\n                    <Grid item xs={2} md={2}>\n                    </Grid>\n\n                    <Grid item xs={10} md={10}></Grid>\n                    <Grid item xs={2} md={2}>\n                        <Fab color=\"secondary\" size={'small'}><ChevronLeftIcon onClick={this.handleClose}/></Fab>\n                    </Grid>\n                    \n                </Grid>\n                <Divider/>\n                <Grid item md={12}>\n                    <div className=\"info_drawer\">\n                        {dialog.origin + \" > \" + dialog.destination}\n                    </div>\n                    {this.props.cards}\n                </Grid>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        Drawer: state.Drawer,\n        dialog: state.Dialog\n    };\n };\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n       open: (text) => {dispatch(open_drawer(text))},\n       change: (value) => {dispatch(change(value))},\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(DrawerUser);","import React, { Component } from 'react'\nimport '../css/dialog.css'; \n\n//import Button from '@material-ui/core/Button';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Fab from '@material-ui/core/Fab';\nimport { Grid } from '@material-ui/core';\n\nimport SendIcon from '@material-ui/icons/Send';\nimport TextField from '@material-ui/core/TextField';\n\nimport {connect} from 'react-redux'\nimport {changer,openr} from '../_actions/Request'\n\nclass DialogRequest extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            \n        }\n        \n        this.SendRequest = this.SendRequest.bind(this);\n        this.changeState = this.changeState.bind(this);\n    }\n\n    \n    async changeState(event){\n        const target = event.target.id;\n        const value = event.target.value;\n        this.props.changer([target,value])\n    }\n\n    async SendRequest(){this.props.openr('close request')}\n    render(){\n        \n        const { request } = this.props;\n        \n\n        //const id = this.state.open ? 'simple-popover' : undefined;\n        return(\n            <Dialog open={request.open}>\n                <DialogTitle >\n                    <Grid container direction={\"row\"}>\n                    <Grid item xs={10} md= {10} sm={10}>{\"Solicitar reserva\"}</Grid>\n                    <Grid item xs={2} md={2} sm={2} align=\"right\">\n                        <CancelIcon onClick={this.SendRequest}/>\n                    </Grid>\n                    </Grid>\n                </DialogTitle>\n                <DialogContent>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"title\"\n                        label=\"Titulo\"\n                        autoFocus\n                        onChange={this.changeState}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"body\"\n                        label=\"Cuerpo\"\n                        autoFocus\n                        onChange={this.changeState}\n                    />\n                    \n                    <DialogActions>\n                        <Fab color=\"secondary\" size={'small'} className=\"fab\">\n                           <SendIcon onClick={this.SendRequest}/>\n                        </Fab>\n                    </DialogActions>\n                </DialogContent>\n            </Dialog>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       request: state.Request\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n       //change: (date) => {dispatch(change(date))},\n       openr: (date) => {dispatch(openr(date))},\n       changer: (date) => {dispatch(changer(date))},\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(DialogRequest);","import React, { Component } from 'react'\nimport '../css/listInfo.css'\n\nimport Collapse from '@material-ui/core/Collapse';\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\nimport DialogRequest from './DialogRequest'\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport Fab from '@material-ui/core/Fab';\nimport { Grid } from '@material-ui/core';\nimport GroupIcon from '@material-ui/icons/Group';\nimport LabelIcon from '@material-ui/icons/Label';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MessageIcon from '@material-ui/icons/Message';\nimport Train from './Train'\nimport TrainIcon from '@material-ui/icons/Train';\n\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport { withRouter } from 'react-router-dom';\n//import * as actions from '../actions/Login';\nimport {load} from '../_actions/Login';\n\n// open request generated by user\nimport {openr} from '../_actions/Request';\n// open Train \nimport {opent} from '../_actions/Train';\n\n// Redux\nimport {connect} from 'react-redux'\n\n\nvar wtf8 = require('wtf-8');\n\n\n\nclass ListInfo extends Component {\n   \n   constructor(props){\n        super(props);\n        this.state = {\n            SetOpen: false,\n            open: false,\n            info:[\n                {\n                'id': 1,\n                'nombre': 'Pepito Perez',\n                'rol': 'Transportador',  \n                'Servicio': 'otra cosa'\n                },\n                {\n                'id': 2,\n                'nombre': 'juan Perez',\n                'rol': 'Transportador',  \n                'Servicio': 'otra cosa x2'\n                }\n            ],\n            capacity: 120,\n            places: 10\n            \n         \n        }\n        this.handleClick = this.handleClick.bind(this)\n        this.updateTrain = this.updateTrain.bind(this)\n        this.OpenRequest = this.OpenRequest.bind(this)\n        this.openTrain = this.openTrain.bind(this)\n      \n      \n   }\n   // Origin \n    handleClick(){\n        localStorage.setItem('type', 'Origin');\n        this.setState({\n            setOpen: !this.state.open,\n            open: !this.state.setOpen\n        })\n    }\n    componentDidMount(){this.props.load('hallo')}\n    openTrain(){this.props.opent('open train')}\n    updateTrain(value){\n        //console.log(\"value: \",value)\n        //this.props.change(value)\n    }\n\n\n    /*componentWillMount() {\n      //this.props.change([this.state.capacity,this.state.places])   \n    }*/\n    async OpenRequest(){\n        //temṕoral arreglar luego\n        this.props.openr('open request')\n    }\n   \n    render(){\n      \n        const { dialog } = this.props;\n        const { login } = this.props\n        //console.log('login in listinfo:',login)\n\n        let serv = []\n        //console.log(dialog)\n        dialog.cards.map(option => {\n            serv.push([option.id,option.title,option.date_start ,option.date_end])\n            return(<div></div>)\n        })\n\n        let info = login.users.map(option => {\n            \n            let id_user = parseInt(this.props.alternative.array_id.split(',')[option.id-1])\n            let id_service = parseInt(this.props.alternative.array_services.split(',')[option.id-1])\n        \n            let any = dialog.cards.map(service =>{\n                if (option.id === id_user && service.id === id_service){\n                    //console.log(\"trans: \",service.transport)\n                    return(\n                        <div className=\"div-list\">\n                            <List component=\"div\" disablePadding key={option.id}>\n                                <ListItem selected={true} >\n                                    <Grid container direction={\"row\"}>\n                                        <Grid item xs={2} md={2}><GroupIcon color=\"primary\"/></Grid>\n                                        <Grid item xs={8} md={8}>\n                                            {option.nameE}\n                                        </Grid>\n                                        <Grid item xs={2} md={2} align=\"right\">\n                                            <VerifiedUserIcon color=\"secondary\"/>\n                                        </Grid>\n                                    </Grid>\n                                    \n                                </ListItem>\n\n                                <ListItem>\n                                    <Grid item xs={2} md={2}>\n                                        {service.transport === 'terrestre' ? \n                                            <DirectionsBusIcon/> : \n                                            <Fab color=\"primary\" size={'small'} align={\"left\"}>\n                                                <TrainIcon onClick={this.openTrain}/>\n                                            </Fab>\n                                        }\n                                        <Train free={service.places} capacity={service.capacity} name={service.title}/>\n                                    </Grid>\n                                    <Grid item xs={10} md={10}>{wtf8.decode(service.title)}</Grid>\n                                </ListItem>\n\n                                <ListItem>\n                                    <Grid item xs={2} md={2}><LabelIcon color=\"primary\"/></Grid>\n                                    <Grid item xs={10} md={10}>{wtf8.decode(service.origin)}</Grid>\n                                </ListItem>\n\n                                <ListItem>\n                                    <Grid item xs={2} md={2}><LabelIcon color=\"primary\"/></Grid>\n                                    <Grid item xs={10} md={10}>{service.date_start.slice(0,21)}</Grid>\n                                </ListItem>\n\n                                <ListItem>\n                                    <Grid item xs={2} md={2}><LabelIcon color=\"primary\"/></Grid>\n                                    <Grid item xs={10} md={10}>{wtf8.decode(service.destination)}</Grid>\n                                </ListItem>\n                                \n                                <ListItem>\n                                    <Grid item xs={2} md={2}><LabelIcon color=\"primary\"/></Grid>\n                                    <Grid item xs={10} md={10}>{service.date_end.slice(0,21)}</Grid>\n                                </ListItem>\n                                \n                                <ListItem>\n                                    <Grid item xs={10} md={10}>Solicitar reserva</Grid>\n                                    <Grid item xs={2} md={2} align=\"right\">\n                                        <Fab color=\"secondary\" size={'small'} >\n                                            <MessageIcon onClick={this.OpenRequest}/>\n                                        </Fab>\n                                    </Grid>\n                                </ListItem>\n                            </List>\n                        </div>\n                        \n                    )\n                }else{return(<p></p>)}\n         })\n         return any\n      })\n      //console.log(\"classe of list-->> \",listCities)\n      //this.props.openList('hallo')\n      return(\n         <List justify=\"center\" color={'black'}>\n            <ListItem button onClick={this.handleClick}>\n               <ListItemText primary={this.props.type}/>\n               {this.state.open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n                {info}\n               <DialogRequest/>\n            </Collapse>\n            \n         </List>\n         \n      )\n   }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        dialog: state.Dialog,\n        login: state.Login,\n        request: state.Request\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        openr: (option) => {dispatch(openr(option))},\n        opent: (option) => {dispatch(opent(option))},\n        load: (option) => {dispatch(load(option))},\n        // change: (option) => {dispatch(change(option))},\n    }\n}\n\nexport default withRouter((connect(mapStateToProps,mapDispatchToProps,/*actions*/)(ListInfo)));","import React, { Component } from 'react'\nimport '../css/user.css';\n\n//import auth from '../router/Auth'\nimport Card from '@material-ui/core/Card';\n//import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { CssBaseline, Grid} from '@material-ui/core';\nimport Drawer from '@material-ui/core/Drawer';\nimport DrawerUser from '../components/DrawerUser';\nimport ListInfo from '../components/ListInfo'\nimport Navbar from '../components/NavUser'\nimport SnackUser from '../components/SnackUser'\nimport store from '../store'\nimport Typography from '@material-ui/core/Typography'\nimport { withRouter } from 'react-router-dom';\n\nimport {connect} from 'react-redux'\nimport * as actions from '../_actions/Drawer';\n\n//var wtf8 = require('wtf-8');\n\nclass User extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            alter:[{\n                origin: 'bogotá',\n                destination: 'santa marta',\n                duration: '722 km',\n                array_id: '1,2',\n                array_services: '1,2'\n            },\n            {\n                origin: 'bogotá',\n                destination: 'santa marta',\n                duration: '722 km',\n                array_id: '1,2',\n                array_services: '1,2'\n            },\n            {\n                origin: 'bogotá',\n                destination:'dorada',\n                duration: '104 km',\n                array_id: '1',\n                array_services: '1'\n            }]\n        }\n    }\n\n    componentDidMount(){ \n        /*console.log(\"login, localStorage\",localStorage.getItem('auth'))\n        if (localStorage.getItem('auth')){\n            this.props.history.push(\"/user\")\n        }else{\n            this.props.history.push(\"/\")\n        }*/\n        this.props.loadA('load data')  \n    }\n\n    render(){\n        const {drawer} = this.props\n        const {dialog} = this.props\n        const {register} = this.props\n\n        let services = dialog.cards\n        let alternatives = drawer.alternatives\n        \n        console.log(services)\n        console.log(\"alñter dbv: \",alternatives)\n        let cards = this.state.alter.map(card =>{\n            /*console.log(dialog.origin ,\"+\", card.origin)\n            console.log(dialog.destination ,\"+\", card.destination)*/\n            if(dialog.origin === card.origin && dialog.destination === card.destination){\n                return(\n                    <Card key={card.id}>\n                        <CardContent>\n                            <Grid container direction=\"row\" >\n                                <Grid item xs={9} md={9} align=\"left\">\n                                    <Typography gutterBottom color=\"inherit\" component=\"h2\" align=\"left\">\n                                    {card.origin+\" \"}\n                                    <ChevronRightIcon  style={{ fontSize: 15 }} />\n                                    {\" \"+card.destination}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={3} md={3} align=\"right\">\n                                    <Typography gutterBottom  color=\"primary\" component=\"h4\">\n                                        15h 30 min\n                                    </Typography>\n                                </Grid>\n    \n                                <Grid item xs={8} md={8} align=\"center\">\n                                    <p>Información detallada del servicio y\n                                    del transportador.\n                                    </p>\n                                </Grid>\n                                <Grid item xs={4} md={4} align=\"right\">{card.duration}</Grid>\n                                <Grid item xs={12} md={12}>\n                                    <ListInfo type=\"Detalles\" alternative={card}/>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>    \n                )   \n            }\n            else{return(<div></div>)}\n        })\n\n        return(\n            <div className=\"root\">\n                <Grid container component=\"main\" className=\"pater\" direction=\"row\">\n                    <Grid item xs={12}>\n                        <Navbar/>\n                        <CssBaseline/>\n                    </Grid>\n                    <Grid item xs={12}></Grid>\n                        <Drawer\n                            className=\"drawer\"\n                            variant=\"persistent\"\n                            anchor=\"left\"\n                            open={store.getState().Drawer.open}\n                            classes={{paper: \"drawerPaper\"}}\n                        ><DrawerUser cards={cards}/>\n                    </Drawer>\n                    <SnackUser message={register.nombre}/>\n                </Grid>\n                    \n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        drawer: state.Drawer,\n        dialog: state.Dialog,\n        register: state.Register\n    };\n};\n\n/*const mapDispatchToProps = (dispatch) => {\n    return{\n       open: (text) => {dispatch(open(text))},\n       load: (text) => {dispatch(load(text))}\n    }\n}*/\nexport default withRouter(connect(mapStateToProps,actions)(User))","import React from 'react'\r\nimport Admin from '../views/Admin/Admin'\r\n\r\nimport Home from '../views/Home'\r\n\r\nimport Log_in from '../views/Log_in'\r\n\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Services from '../views/Services'\r\nimport Sign_up from '../views/Sign_up'\r\n//import { ProtectedRoute } from './ProtectedRoute'\r\n\r\nimport User from '../views/User'\r\n\r\nexport default props => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={Home}/>\r\n        <Route exact path=\"/sign_up\" component={Sign_up}/>\r\n        <Route exact path=\"/log_in\" component={Log_in}/>\r\n        <Route exact path=\"/services\" component={Services}/>\r\n        <Route exact path=\"/user\" component={User}/>\r\n        <Route exact path=\"/admin_home\" component={Admin}/>\r\n    </Switch>\r\n)","import React, { Component } from 'react';\n//import logo from '../logo.svg';\nimport '../css/App.css';\nimport Routes from '../router/routes'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: { secondary: {main: '#81ABFF'}, primary: {main: '#0749e6'}},\n  typography: { fontFamily: [ 'Lato', 'sans-serif'].join(',')}\n});\n\nclass App extends Component {\n\n    state = { loaded: false }\n\n    componentDidMount(){\n        this.setState({ loaded: true });\n    }\n    render() {\n        return (\n            <div>\n                <MuiThemeProvider theme={theme}> <Routes/> </MuiThemeProvider>\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n// Redux\nimport {Provider} from 'react-redux'\nimport store from './store'\n\n\n\nconst Root = (\n    <Provider store={store}>\n      <BrowserRouter>\n         <App/>\n      </BrowserRouter>\n   </Provider>\n )\n \nReactDOM.render(Root, document.getElementById('root'));\nserviceWorker.unregister();\n\n"],"sourceRoot":""}