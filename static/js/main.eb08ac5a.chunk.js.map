{"version":3,"sources":["resources/Train.png","views/Forbidden.js","router/Auth.js","_actions/actions_backdrop.js","components/BackDrop.js","_actions/actions_snack.js","components/_Snacks/SnackAlert.js","constants/api_route.js","reducers/BackDrop.js","reducers/Dialog.js","reducers/Drawer.js","reducers/ListRol.js","reducers/Login.js","reducers/Navbar.js","reducers/Register.js","reducers/Request.js","reducers/Snack.js","reducers/Train.js","store.js","_actions/Register.js","components/_Form/TextEmail.js","scripts/confirmEmail.js","components/_Form/TextPassword.js","scripts/testPassword.js","_actions/Login.js","components/StepLogin.js","views/Log_in.js","_actions/Train.js","components/Train.js","_actions/Dialog.js","components/CardServices.js","components/DateTime.js","components/ListCities.js","components/ListTrans.js","components/StepService.js","components/DialogService.js","components/Panel.js","_actions/Request.js","components/DialogNotification.js","components/DialogInformation.js","components/EditService.js","_actions/actions_navbar.js","components/MenuNav.js","_actions/Drawer.js","components/NavUser.js","views/Services.js","components/ListRol.js","_actions/ListRol.js","views/Sign_up.js","router/ProtectedRoute.js","components/DrawerUser.js","components/DialogRequest.js","components/ListInfo.js","components/SnackUser.js","views/User.js","router/routes.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Forbidden","props","state","Grid","container","direction","alignItems","style","paddingTop","fontSize","color","Button","variant","onClick","history","push","className","Component","this","auth","cb","console","log","openBD","option","type","payload","BackDrop","open","success","setState","classes","back_drop","Backdrop","backdrop","complete","item","xs","sm","align","message","CircularProgress","size","withStyles","theme","zIndex","drawer","paddingBottom","marginTop","connect","dispatch","text","openSnack","SnackAlert","Slide","Snack","Snackbar","key","vertical","horizontal","autoHideDuration","TransitionComponent","SlideTransition","bind","SnackbarContent","backgroundColor","open_snack","API_ROUTE","defaultState","reducer","checked","cards","openN","openES","openI","id_service","title","capacity","places","cost","cities","name","lat","lng","origin","destination","transport","service_created","service_updated","visibility","dateStart","Date","dateEnd","parseInt","openA","setOpen","alternatives","users","email","password","token","rol","id_user","isAuth","anchorEl","nombre","validate_nombre","unique","validate_email","validate_password","confirm","validate_confirm","validate_rol","nit","authSuccess","registerSuccess","id_owner","requests","body","opent","combineReducers","Dialog","Drawer","ListRol","Login","Navbar","Register","Request","Train","store","createStore","applyMiddleware","thunk","axios","require","change","verify","getState","post","query","then","result","data","userByEmail","id","catch","err","email_success","validEmail","view","setTimeout","TextEmail","validate","information","event","target","value","length","test","validate_nit","TextField","error","margin","required","fullWidth","label","onChange","inputChange","helperText","openbd","TextPassword","showPassword","preventDefault","md5","match","FormControl","InputLabel","OutlinedInput","endAdornment","InputAdornment","position","IconButton","aria-label","handleClickShowPassword","onMouseDown","handleMouseDownPassword","edge","labelWidth","width","fill","send","user","localStorage","setItem","nameE","loginUser","authUser","StepLogin","handleReset","activeStep","isStepOptional","step","isStepSkipped","skipped","has","Set","message_backdrop","message_snackAlert","handleNext","handleBack","alert","spacing","justify","Chip","avatar","Avatar","clickable","changeEmail","deleteIcon","md","Typography","getStepContent","withRouter","Log_in","sendRequest","changeView","moveRegister","login","component","CssBaseline","Paper","elevation","square","Fab","noValidate","Link","href","openTrain","DialogTitle","DialogContent","src","train","alt","height","DialogActions","openDN","openDI","change_dialog","create","getItem","createService","update","updateService","load","service","getServices","CardServices","dialogVerMas","dialogReservar","openT","card","Card","raised","CardHeader","subheader","class","action","CardContent","date_start","slice","date_end","CardActions","free","Tooltip","openEdit","handleClickButton2","DateTime","selectedDate","ChangeOption","labelDate","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","labelTime","date","ListCities","OpenList","dialog","map","city","ListItem","FormControlLabel","control","Radio","disabled","List","button","ListItemText","primary","Collapse","in","timeout","unmountOnExit","RadioGroup","ListTrans","StepService","handleSkip","Error","setActiveStep","prevActiveStep","setSkipped","prevSkipped","newSkipped","values","add","openP","steps","changeState","undefined","autoFocus","openPop","Popover","onClose","anchorOrigin","transformOrigin","Switch","handleChange","inputProps","Stepper","index","stepProps","completed","Step","StepLabel","register","DialogService","SendRequest","closeDialog","currentTarget","wtf8","Panel","ExpansionPanel","expanded","ExpansionPanelSummary","expandIcon","aria-controls","decode","cardReq","accept","ExpansionPanelDetails","openr","Transition","React","forwardRef","ref","DialogNotification","handleClose","loadr","requestCard","request","fullScreen","AppBar","Toolbar","DialogInformation","EditService","children","enterTouchDelay","placement","Slider","ValueLabelComponent","defaultValue","min","max","changeSlider","gutterBottom","open_menu","MenuNav","keepMounted","MenuItem","returnView","logOut","open_drawer","openM","anchor","openDrawer","openMenu","change_menu","menuButton","noWrap","grow","sectionDesktop","openInfo","disableRipple","Badge","badgeContent","flexGrow","display","breakpoints","up","textButton","textDecorationLine","Services","openDialog","openDialogN","Container","actions","listRol","ListItemIcon","disablePadding","Sign_up","backDrop_complete","BackDrop_message","createUser","ProtectedRoute","rest","render","to","pathname","from","location","DrawerUser","handleDrawerOpen","changeValues","Divider","DialogRequest","changer","ListInfo","SetOpen","info","handleClick","updateTrain","OpenRequest","serv","selected","getUsers","SnackUser","User","alter","duration","array_id","array_services","loadA","toUpperCase","paper","alternative","getAlternatives","exact","path","createMuiTheme","palette","secondary","main","typography","fontFamily","join","App","loaded","Boolean","window","hostname","Root","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb08ac5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Train.722b5233.png\";","import React,{Component}   from 'react';\n\nimport BlockIcon from '@material-ui/icons/Block';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n \nclass Forbidden extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n    \n \n    render(){\n        return(\n            <Grid container direction=\"column\" alignItems=\"center\">\n                <BlockIcon style={{paddingTop: '50px',fontSize: '280px'}} color=\"primary\"></BlockIcon>\n                <p style={{fontSize: '80px'}}>No tienes acceso a esta ruta ...</p>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {this.props.history.push('/')}}\n                    className=\"button\"\n                    >\n                    Regresar\n                </Button>\n            </Grid>\n        );\n    }\n}\n \n \nexport default Forbidden ;","class Auth{\n    constructor(){\n        this.auth = false\n    }\n\n    login(cb){\n        console.log(\"entry in Auth.login\")\n        this.auth = true\n        \n        cb();\n    }\n    logout(cb){\n        console.log(\"entry in Auth.logout\")\n        this.auth = false\n        cb();\n    }\n    \n    isAuth(){return this.auth}\n}\n\nexport default new Auth();","\nexport const openBD = (option) =>{\n    return {\n        type: 'OPENBD',\n        payload: option\n    }\n}","import React,{Component}   from 'react';\nimport '../css/back_drop.css'\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid'\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n\nimport {connect} from 'react-redux'\nimport {openBD} from '../_actions/actions_backdrop'\n\nconst styles = theme => ({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n      fontSize: '40px'\n    },\n    message:{\n        paddingBottom: '60px',\n        marginTop: '-110px',\n    }\n});\n\nclass BackDrop extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            open: true,\n            success: true,\n        }\n    }\n \n    handleClose(){\n        this.setState({open: false})\n    }\n    render(){\n        const { classes } = this.props;\n        const { back_drop } = this.props;\n        return(\n            <div>\n                <Backdrop className={classes.backdrop} open={back_drop.open}>\n                    <Grid container direction=\"row\">\n                        {   !this.props.complete ? \n                            <Grid container direction=\"row\">\n                                <Grid item xs={12} sm={12} align=\"center\" className={classes.message}>\n                                    {this.props.message}\n                                </Grid>\n                                <Grid item xs={12} sm={12} align=\"center\">\n                                    <CircularProgress size={150} color=\"primary\"/>\n                                </Grid>\n                            </Grid>\n                        :   \n                            <Grid container direction=\"row\">\n                                <Grid item xs={12} sm={12} align=\"center\" className={classes.message}>\n                                    {this.props.message}\n                                </Grid>\n                                <Grid item xs={12} sm={12} align=\"center\">\n                                    <CheckCircleIcon style={{fontSize: '220px', color: '#31a361'}}/>\n                                </Grid>\n                            </Grid>\n                        }\n                    </Grid>\n                </Backdrop>\n            </div>\n        );\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        back_drop: state.BackDrop\n    };\n };\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n       open: (text) => {dispatch(openBD(text))},\n    }\n}\n \nexport default withStyles(styles)(connect(mapStateToProps,mapDispatchToProps)(BackDrop));","\nexport const openSnack = (option) =>{\n    return {\n        type: 'OPEN_SNACK',\n        payload: option\n    }\n}","import React,{Component}   from 'react';\nimport '../../css/snackbar.css'; \n\n\nimport Slide from '@material-ui/core/Slide';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\n\nimport {connect} from 'react-redux'\nimport { openSnack } from '../../_actions/actions_snack'\n\nclass SnackAlert extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            open: true\n        }\n    }\n    \n    SlideTransition(props) {\n        return <Slide {...props} direction=\"right\" />;\n    }\n\n    render(){\n        const { Snack } = this.props;\n        return(\n            <div>\n                <Snackbar\n                    key={`${this.state.vertical},${this.state.horizontal}`}\n                    open={Snack.open}\n                    autoHideDuration={4500}\n                    TransitionComponent={this.SlideTransition.bind(this)}\n                    //onClose={()=>{this.props.open_snack('snack_alert')}}\n                >\n                    <SnackbarContent style={{ backgroundColor: this.props.color}}\n                        message={\n                            <div className=\"message_snackAlert\">\n                                {this.props.message}\n                            </div>\n                        }\n                    />\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        Snack: state.Snack\n    };\n };\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n        open_snack: (text) => {dispatch(openSnack(text))},\n    }\n}\n\n \nexport default connect(mapStateToProps,mapDispatchToProps)(SnackAlert);","//const API_ROUTE = 'http://34.69.73.192:5000/graphql';\nconst API_ROUTE = 'https://imaapig.azurewebsites.net/graphql';\n//const API_ROUTE = 'http://127.0.0.1:5000/graphql';\nexport default API_ROUTE;","export const defaultState = {\n    open: false,\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    switch(type){\n        case 'OPENBD':\n            //console.log(\"entry in dialog open\")\n            return{ ...state,open: !state.open}\n        default:\n            return state\n            \n    }\n    \n}\n\nexport default reducer;","export const defaultState = {\n    checked: '',\n    open: false,\n    cards: [\n        /*{   \n            id: 1,\n            title: 'hallo',\n            class: 'fdafd',\n            transport: 'fasdfasdf',\n            origin: 'dsadfasf',\n            destination: 'sadfasdf',\n            date_start: 'sdafasdfadsfadfadfs',\n            date_end: 'sdafasdfadsfadfadfs',\n        }*/\n    ],\n    openN: false,\n    openES: false,\n    openI: false,\n    id_service:  0,\n    title: '',\n    type: 'carga',\n    capacity: 0,\n    places: 0,\n    cost: '',\n    cities: [\n        {name:'Bogotá' ,lat: 4.6097100, lng: -74.0817500 ,option: false},\n        {name:'Santa Marta' ,lat: 11.2407900, lng: -74.1990400 ,option: false},\n        {name:'Barranquilla' ,lat: 10.9685400, lng: -74.7813200 ,option: false},\n        {name:'Cartagena' ,lat: 10.3997200, lng: -75.5144400 ,option: false},\n        {name:'La dorada' ,lat: 5.4478302, lng: -74.6631088 ,option: false},\n        {name:'Belencito' ,lat: 6.2518400, lng: -75.5635900 ,option: false},\n    ],\n    origin: '',\n    destination: '',\n    transport: '',\n    service_created: false,\n    service_updated: false,\n    visibility: false,\n    dateStart: new Date(),\n    dateEnd: new Date()\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    switch(type){\n        case 'OPEN':\n            //console.log(\"entry in dialog open\")\n            return{ ...state,open: !state.open}\n        case 'OPENDN':\n            return{...state,openN: !state.openN}\n        case 'OPENES':\n            return{...state,openES: !state.openES}\n        case 'OPENDI':\n            return{...state,openI: !state.openI}\n        case 'CHANGE_DIALOG':\n            switch(payload[0]){\n                case 'id_service':\n                    return {...state,id_service:payload[1]}\n                case 'cards':\n                    return {...state,cards:payload[1]}\n                case 'checked':\n                    return {...state,checked:payload[1]}\n                case 'title':return {...state,title:payload[1]}\n                case 'capacity':return {...state,capacity:parseInt(payload[1])}\n                case 'places':return {...state,places:parseInt(payload[1])}\n                case 'cost':return {...state,cost:payload[1]}\n                case 'Transporte':return {...state,transport:payload[1]}\n                case 'Origen':return{...state,origin:payload[1]}\n                case 'Destino':return{...state,destination:payload[1]}\n                case 'salida':return{...state, dateStart: payload[1]}\n                case 'visibility': return{...state, visibility: !state.visibility}\n                case 'service_created': return{...state, service_created: !state.service_created}\n                case 'service_updated': return{...state, service_updated: !state.service_updated}\n                default:return{...state,dateEnd: payload[1]}\n            }\n        default:\n            return state\n            \n    }\n    \n}\n\nexport default reducer;","const defaultState = {\n    // drawer_user\n    open: false ,\n    // drawer_admin\n    openA: false ,\n    setOpen: false,\n    alternatives: []\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    switch(type){\n        \n        case 'OPEN_DRAWER':\n            switch(payload){\n                case 'drawer':\n                    //return{...state,open:!state.setOpen,setOpen:!state.open}\n                    return{...state,open:!state.open}\n                case 'drawerA':\n                    return{...state,openA:!state.openA}\n                default:\n                    return state\n            }  \n        case 'CHANGE':\n            switch(payload[0]){\n                case 'alternatives':\n                    return{...state,alternatives:payload[1]}\n                default:\n                    return state\n            }    \n        default:\n            return state\n    }\n    //return state\n}\n\nexport default reducer;","const defaultState = {\r\n    open: false ,\r\n    setOpen: false,\r\n    option: ''\r\n}\r\n\r\nconst reducer = (state = defaultState, { type, payload }) => {\r\n    switch(type){\r\n        case 'CHANGE':\r\n            return {...state,option:payload}\r\n        case 'OPEN':\r\n            return {...state,open:!state.setOpen,setOpen:!state.open}\r\n        default:\r\n            return state\r\n    }\r\n    //return state\r\n}\r\n\r\nexport default reducer;\r\n\r\n","const defaultState = {\r\n    users: [],\r\n    email: '',\r\n    password: '',\r\n    token: '',\r\n    rol: '',\r\n    id_user: '',\r\n    isAuth: false\r\n    // response of server\r\n}\r\n\r\nconst reducer = (state = defaultState, { type, payload }) => {\r\n    switch(type){\r\n        case 'FILL':\r\n            switch(payload[0]){\r\n                case 'users':{return {...state,users: payload[1]}}\r\n                case 'email':{return {...state,email: payload[1]}}\r\n                case 'rol':{return {...state,rol: payload[1]}}\r\n                case 'id_user':{return {...state,id_user: payload[1]}}\r\n                case 'token':{return {...state,token: payload[1]}}\r\n                case 'isAuth':{\r\n                    console.log(\"isAuthQQ!!!_ \",payload[1])\r\n                    return {...state,isAuth: payload[1]}}\r\n                default: return{...state,password: payload[1]}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    //return state\r\n}\r\n\r\nexport default reducer;","export const defaultState = {\n    anchorEl: null,\n    open: false,\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    switch(type){\n        case 'OPEN_MENU':\n            //console.log(\"entry in dialog open\")\n            return{ ...state,open: !state.open}\n        case 'CHANGE_MENU':\n            switch(payload[0]){\n                case 'anchorEl':{return {...state,anchorEl: payload[1]}}\n                default: return state\n            }\n        default:\n            return state\n            \n    }\n    \n}\n\nexport default reducer;","\r\n\r\nconst defaultState = {\r\n    // all validate variables must stay in false except rol\r\n    nombre: '',\r\n    validate_nombre: false,\r\n    email: '',\r\n    unique: false,\r\n    validate_email: false,\r\n    password: '',\r\n    validate_password: false,\r\n    // confirm password for the register\r\n    confirm: '',\r\n    validate_confirm: false,\r\n    rol: '',\r\n    validate_rol: true,\r\n    nit: 0,\r\n    // verify the log_in\r\n    authSuccess: false,\r\n    // verify the sign_up\r\n    registerSuccess: false,\r\n    // display message in textField\r\n    message: ''\r\n}\r\n\r\nconst reducer = (state = defaultState, { type, payload }) => {\r\n    switch(type){\r\n        case 'CHANGE':\r\n            switch(payload[0]){\r\n                case 'nombre':{return {...state,nombre: payload[1]}}\r\n                case 'validate_nombre':{ return{...state,validate_nombre: payload[1]}}\r\n                case 'email':{return {...state,email: payload[1]}}\r\n                case 'unique':{return {...state,unique: payload[1]}}\r\n                case 'validate_email':{ return{...state,validate_email: payload[1]}}\r\n                case 'password':{return {...state,password: payload[1]}}\r\n                case 'validate_password':{ return{...state,validate_password: payload[1]}}\r\n                case 'confirm':{return {...state,confirm: payload[1]}}\r\n                case 'validate_confirm':{ return{...state,validate_confirm: payload[1]}}\r\n                case 'nit': {return{...state,nit: payload[1]}}\r\n                case 'rol':{return{...state,rol: payload[1]}}     \r\n                case 'validate_rol':{ return{...state,validate_rol: payload[1]}}\r\n                case 'authSuccess':{ return{...state,authSuccess: payload[1]}}  \r\n                case 'registerSuccess':{ return{...state,registerSuccess: payload[1]}}  \r\n                case 'message':{ return{...state,message: payload[1]}}  \r\n                default: return state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    //return state\r\n}\r\n\r\nexport default reducer;","const defaultState = {\n    open: false,\n    id_user: 0,\n    id_owner: 0,\n    id_service: 0,\n    requests: [],\n    title: '',\n    body: ''\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    switch(type){\n        \n        case 'OPENR':\n            return {...state,open:!state.open}\n        case 'CHANGER':\n            switch(payload[0]){\n                case 'title':\n                    return{...state,title:payload[1]}\n                case 'body':\n                    return{...state,body:payload[1]}\n                case 'requests':\n                    return{...state,requests:payload[1]}\n                default:\n                    return state\n            }    \n        default:\n            return state\n    }\n    //return state\n}\n\nexport default reducer;","const defaultState = {\n    open: false,\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    switch(type){\n        \n        case 'OPEN_SNACK':\n            return {...state,open:!state.open}\n        default:\n            return state\n    }\n    //return state\n}\n\nexport default reducer;","export const defaultState = {\n    opent: false\n}\n\nconst reducer = (state = defaultState, { type, payload }) => {\n    switch(type){\n        case 'OPENT':\n            return{ ...state,opent: !state.opent }\n        default:\n            return state\n            \n    }\n    \n}\n\nexport default reducer;","import {createStore,combineReducers,applyMiddleware} from 'redux';\r\n\r\nimport BackDrop from './reducers/BackDrop'\r\nimport Dialog from './reducers/Dialog';\r\nimport Drawer from './reducers/Drawer'\r\nimport ListRol from './reducers/ListRol'\r\nimport Login from './reducers/Login'\r\nimport Navbar from './reducers/Navbar' \r\nimport Register from './reducers/Register'\r\nimport Request from './reducers/Request'\r\nimport Snack from './reducers/Snack'\r\nimport thunk from 'redux-thunk';\r\nimport Train from './reducers/Train'\r\n\r\nconst reducer = combineReducers({\r\n    BackDrop, Dialog, Drawer, ListRol,  Login, Navbar, Register, Snack, Request, Train\r\n});\r\n\r\nconst store = createStore(reducer,applyMiddleware(thunk));  \r\nexport default store;","import API_ROUTE from '../constants/api_route'\r\nimport store from '../store'\r\nconst axios = require(\"axios\")\r\n\r\n\r\n\r\nexport const change = (option) =>{\r\n    return {\r\n        type: 'CHANGE',\r\n        payload: option\r\n    }\r\n}\r\n\r\nexport const verify = (option) =>{\r\n    return (dispatch) => {\r\n        let state = store.getState().Register\r\n        //console.log(\"state: \",state.email)\r\n        axios.post(API_ROUTE, { \r\n            query : `query{\r\n                userByEmail(email: \"${state.email}\"){ id }\r\n            }`\r\n        }).then((result) => {\r\n            //console.log(result.data)\r\n            let user = result.data.data.userByEmail\r\n            if (user.id !== -1){dispatch(change(['unique', true]))}\r\n            else{ dispatch(change(['unique', false]))}\r\n        }).catch(err => console.log(err))\r\n    }\r\n}\r\n\r\nexport const email_success = (validEmail,view) =>{\r\n    \r\n    return (dispatch) => {\r\n        setTimeout(() => { \r\n            //this.props.verify(validEmail)\r\n            dispatch( verify(validEmail) )\r\n        }, 2000);\r\n        setTimeout(() => {\r\n            let Register = store.getState().Register\r\n            \r\n            // email in the db\r\n            if (Register.unique === true){\r\n                if (view === 'sign_up'){\r\n                    //this.setState({validate: true})\r\n                    //this.props.change(['validate_email',true])\r\n                    //this.setState({information: 'Correo electronico en uso'}) \r\n                    dispatch(change(['validate_email',true]))  \r\n                    dispatch(change(['message', 'Correo electronico en uso']))\r\n                }\r\n            }\r\n            // email not in the db\r\n            else{\r\n                if (view === 'log_in'){\r\n                    //this.props.change(['validate_email',true])\r\n                    //this.setState({information: 'Correo electrónico no registrado'})\r\n                    dispatch(change(['validate_email',true])) \r\n                    dispatch(change(['message', 'Correo electrónico no registrado']))\r\n                }\r\n            }\r\n            //console.log(\"finish email_success\",Register.unique)\r\n        }, 3000);\r\n    }\r\n}\r\n\r\n\r\n// register an user\r\nexport const register = () =>{\r\n    //console.log(\"Register redux\")\r\n    let state = store.getState().Register\r\n    //console.log(\"state-rol: \",state)\r\n    return(dispatch)=> {\r\n        \r\n        //dispatch()\r\n        if (!state.validate_nombre & state.nombre.length > 1 &\r\n            !state.validate_password & state.password.length >= 8 &\r\n            !state.validate_confirm & state.confirm.length >= 8 &\r\n            !state.validate_email  & state.confirm.length >= 6 &\r\n            !state.validate_rol){\r\n                \r\n            axios.post(API_ROUTE, { \r\n                query : `mutation{\r\n                    createUser(user: {\r\n                    nameE:\"${state.nombre}\"\r\n                    email:\"${state.email}\"\r\n                    passw:\"${state.password}\"\r\n                    rol:\"${state.rol}\"\r\n                    nit:\"${state.nit}\"\r\n                    }){\r\n                        nameE\r\n                    }\r\n                }`\r\n                \r\n            }).then((result) => {\r\n                let user = result.data.data.createUser\r\n                //console.log(user.nameE)\r\n                if (user.nameE !== \" \") { dispatch(change(['registerSuccess', true]))}\r\n                \r\n            }).catch(err => console.log(err))\r\n        }\r\n        \r\n    } \r\n}","import React,{Component}   from 'react';\n \n\n\nimport TextField from '@material-ui/core/TextField';\nimport confirmEmail from '../../scripts/confirmEmail.js';\n \nimport {connect} from 'react-redux'\nimport {change,verify} from '../../_actions/Register'\n// view loading\nimport {openBD} from '../../_actions/actions_backdrop'\n\n\n\nclass TextEmail extends Component{\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            validate: false,\n            information: 'Ingresa la información',\n        }\n    }\n    \n    inputChange(event){\n        \n        let id = event.target.id;\n        let value = event.target.value;\n        \n        switch(id){\n            case \"nombre\":\n                /*if (value.length < 1){this.setState({validate: true})}\n                else{this.setState({validate: false})}*/\n                if (value.length < 1){this.props.change(['validate_nombre',true])}\n                else{this.props.change(['validate_nombre',false])}\n                break\n            case \"email\":\n                \n                //this.setState({validate: true})\n                this.props.change(['validate_email',true])\n                let validEmail = confirmEmail(value)\n                if (validEmail) {\n                    //console.log(\"VIEW: \",this.props.view)\n                    this.props.change(['validate_email',false])\n                }\n                break\n            default:\n                break\n        }\n        this.props.change([id,value])\n    }\n    /*componentDidUpdate(){\n        //this.setState({validate: true})\n        const {Register} = this.props\n        console.log(Register)\n        this.render()\n    }*/\n\n    render(){\n        const {Register} = this.props\n        //console.log(\"message: \",Register.message)\n        let validate = null\n        switch(this.props.id){\n            case \"nombre\":\n                validate = Register.validate_nombre\n                break\n            case \"email\": \n                validate = Register.validate_email\n                break\n            case \"password\":\n                    validate = Register.validate_password\n                break\n            case \"nit\":\n                    validate = Register.validate_nit\n                break\n            default:\n                break\n        }\n        \n        return(\n            <div>\n                <TextField\n                    error={validate}\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    id={this.props.id}\n                    required\n                    fullWidth\n                    label={this.props.label}\n                    onChange={this.inputChange.bind(this)}\n                    helperText={validate === true ? \n                        Register.message :  [\n                            this.props.id === 'email' ? 'Puedes usar letras, numeros y signos de puntuación' : ''\n                        ]\n                    }\n                />\n            </div>\n        );\n    }\n}\n \n\nconst mapStateToProps = (state) => {\n    return {\n        Register: state.Register\n    };\n };\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n       change: (text) => {dispatch(change(text))},\n       verify: (text) => {dispatch(verify(text))},\n       openbd: (text) => {dispatch(openBD(text))},\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(TextEmail);","export default function( email ){ \n    let reg =  /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i;\n    return reg.test(email);\n}","import React,{Component}   from 'react';\n \n \nimport IconButton from '@material-ui/core/IconButton';\nimport FormControl from '@material-ui/core/FormControl';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport {testPassword} from '../../scripts/testPassword'\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport {connect} from 'react-redux'\nimport {change} from '../../_actions/Register'\n\n \nclass TextPassword extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            validate: false,\n        }\n    }\n\n    \n    handleClickShowPassword (){\n        this.setState({showPassword: !this.state.showPassword });\n    };\n    handleMouseDownPassword (event){\n        event.preventDefault();\n    };\n    \n    async inputChange(event){\n        \n        let id = event.target.id;\n        let value = event.target.value;\n        var md5 = require('md5');\n        \n        if (id === 'password' ){\n            if (testPassword(value)){ \n                //this.setState({validate: false})\n                this.props.change(['validate_password',false])\n            }\n            else{this.props.change(['validate_password',true])}\n            value = md5(value)\n        }\n\n        if (id === 'confirm'){\n            //this.setState({validate: true})\n            this.props.change(['validate_confirm',true])\n            let {Register} = this.props;\n            if (Register.confirm.length > 0){\n                if(md5(value) === Register.password ){\n                    //this.setState({validate: false})\n                    this.props.change(['validate_confirm',false])\n                }else{\n                    //this.setState({validate: true})\n                    this.props.change(['validate_confirm',true])\n                }\n            }\n        }\n        this.props.change([id,value])\n    }\n    \n\n    render(){\n        const {Register} = this.props\n        let validate = null\n        switch(this.props.id){\n            case \"password\":\n                validate = Register.validate_password\n                break\n            case \"confirm\": \n                validate = Register.validate_confirm\n                break\n        }\n        return(\n           <div>\n                <FormControl variant=\"outlined\" fullWidth={true}>\n                    <InputLabel>{this.props.label}</InputLabel>\n                    <OutlinedInput\n                        //error={this.props.id === 'password' ? this.state.validate : this.state.validateC}\n                        error={validate}\n                        id={this.props.id}\n                        fullWidth={true}\n                        type={this.state.showPassword ? 'text' : 'password'}\n                        onChange={this.inputChange.bind(this)}\n                        endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={this.handleClickShowPassword.bind(this)}\n                                onMouseDown={this.handleMouseDownPassword.bind(this)}\n                                edge=\"end\"\n                                \n                                >\n                                {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                        }\n                        labelWidth={this.props.width}\n                    />\n                </FormControl>\n                \n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        Register: state.Register\n    };\n };\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n       change: (text) => {dispatch(change(text))},\n    }\n}\n \nexport default connect(mapStateToProps,mapDispatchToProps)(TextPassword);","export function testPassword(password){\n    let passCheck = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,20}$/;\n    return password.match(passCheck);\n}","import store from '../store'\r\nimport API_ROUTE from '../constants/api_route'\r\nimport { change } from './Register'\r\n//\r\nconst axios = require(\"axios\")\r\n\r\nexport const fill = (option) =>{\r\n    return {\r\n        type: 'FILL',\r\n        payload: option\r\n    }\r\n}\r\n// send the requesto to backend\r\nexport const send = () =>{\r\n    let state = store.getState().Register\r\n    //console.log(\"state...\", state,\"email\",state.email)\r\n    return(dispatch) => {\r\n        //console.log(\"entry in return\")\r\n        axios.post(API_ROUTE, {\r\n            query: `query{\r\n                userByEmail(email:\"${state.email}\"){ rol nameE id}\r\n            }`\r\n        })\r\n        .then((result)=>{\r\n            let user = result.data.data.userByEmail\r\n            // guarda en local storage el id del usuario!\r\n            localStorage.setItem('id_user',user.id)\r\n            // guarda en store(redux) el rol y nombre del usuario\r\n            dispatch(fill(['rol',user.rol]))\r\n            dispatch(change(['nombre',user.nameE]))\r\n        })\r\n        .catch(err => console.log(err))\r\n        \r\n        console.log(\"need auth\",state.email,state.password)\r\n\r\n        // authentication\r\n        axios.post(API_ROUTE,{\r\n            query: `mutation{\r\n                authUser(credentials: { email: \"${state.email}\", passw: \"${state.password}\"})\r\n                { token success }\r\n            }`    \r\n        }).then((result)=>{\r\n            \r\n            const loginUser = result.data.data.authUser\r\n            console.log(\"loginUSer: \",loginUser)\r\n            dispatch(fill(['token',loginUser.token]))\r\n            if(loginUser.success){\r\n                //auth user incorrect\r\n                dispatch(change(['authSuccess',true]))\r\n            }\r\n            \r\n        }).catch(err => console.log(err))\r\n    } \r\n}\r\n\r\n// load all users\r\nexport const load = () =>{\r\n    console.log('load users in login')\r\n    return(dispatch)=> {\r\n        axios.post(API_ROUTE, {\r\n            query: `query{\r\n                getUsers{\r\n                    id\r\n                    nameE\r\n                    email\r\n                    nit\r\n                    rol\r\n                }\r\n            }`\r\n            \r\n        }).then((result)=>{\r\n            let users  = result.data.data.getUsers\r\n            dispatch(fill(['users',users]))\r\n        }).catch(err => console.log(err))\r\n    } \r\n    \r\n}","import React,{Component}   from 'react';\n\n\nimport Avatar from '@material-ui/core/Avatar';\nimport BackDrop from '../components/BackDrop'\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Grid from '@material-ui/core/Grid';\n//import TextField from '@material-ui/core/TextField';\nimport SnackAlert from '../components/_Snacks/SnackAlert';\nimport TextEmail from '../components/_Form/TextEmail'\nimport TextPassword from '../components/_Form/TextPassword'\nimport Typography from '@material-ui/core/Typography'; \nimport { withRouter } from 'react-router-dom';\n\n\nimport {connect} from 'react-redux'\nimport {change,email_success} from '../_actions/Register'\n// this action have to change into Register\nimport {send,fill} from '../_actions/Login'\n// view loading\nimport {openBD} from '../_actions/actions_backdrop' \nimport { openSnack } from '../_actions/actions_snack'\n\nclass StepLogin extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeStep: 0,\n            skipped: new Set(),\n            message_backdrop: '',\n            message_snackAlert: ''\n        }\n        this.handleNext = this.handleNext.bind(this)\n        this.handleReset = this.handleReset.bind(this)\n        this.handleBack = this.handleBack.bind(this)\n    }\n    changeEmail(){\n        this.setState({activeStep: this.state.activeStep-1})\n        this.props.change(['validate_email',true])\n    }\n    handleNext() {\n        let {Register} = this.props\n        if (this.state.activeStep < 1){\n            \n            // verify email\n            this.setState({message_backdrop: 'Verificando correo electrónico..'})\n            this.props.openbd('back_drop')\n            setTimeout(() => { \n                //this.props.openbd('back_drop')\n                this.props.email_success(Register.email,'log_in');    \n            }, 2000);\n            \n            // change View\n            setTimeout(() => { \n                //console.log(\"before change view\")\n                let {Register} = this.props\n                //console.log(Register.validate_email, Register.email, Register.unique)\n                if (!Register.validate_email & Register.email.length > 0 & Register.unique){\n                    //this.props.openbd('back_drop')\n                    this.setState({activeStep: this.state.activeStep + 1})\n                }else{\n                    this.setState({ message_snackAlert: 'No se ha podido encontrar tu cuenta'})\n                    this.props.open_snack('snack_alert');\n                    setTimeout(() => { this.props.open_snack('snack_alert');}, 3000);\n                }\n\n                this.props.openbd('back_drop')\n            }, 7000);\n            \n        }else{\n            //send request to log_in\n            this.setState({message_backdrop: 'Autenticando usuario..'})\n            this.props.openbd('back_drop')\n            if (Register.password.length > 0){\n                setTimeout(() => { \n                    \n                    this.props.send('') \n                }, 2000);\n                setTimeout(() => { \n                    let {Register} = this.props;\n                    let {Login} = this.props;\n                    if (Register.authSuccess){\n                        \n                        //this.props.fill(['isAuth',true])\n                        //setTimeout(() => {}, 1000);\n                        localStorage.setItem('auth',true)\n                        \n                        if(Login.rol === 'generador'){\n                            this.props.history.push('/user')\n                            localStorage.setItem('view','user')\n                        }\n                        else{\n                            this.props.history.push('/services')\n                            localStorage.setItem('view','services')\n                        }\n                        \n                    }\n                    this.props.openbd('back_drop')\n                }, 3000);\n            }\n            //alert('correo no existe')\n        }\n    };\n\n    handleReset = () => { this.setState({activeStep: 0})};\n    handleBack () { \n        \n        if (this.state.activeStep === 0){\n            this.props.history.push(\"/sign_up\")\n\n        }else{\n            alert('recovery pass')\n        }\n    };\n\n\n    isStepOptional = step => {\n        return step === 1;\n    };\n\n    isStepSkipped = step => {\n        return this.state.skipped.has(step);\n    };\n    \n    \n    getStepContent(step) {\n        let {Register} = this.props\n        switch (step) {\n            case 0:\n                //const id = this.state.open ? 'simple-popover' : undefined;\n                return(\n                    <div className=\"root_step\" id=\"root_step\">\n                        <Grid container spacing={4} direction=\"row\" justify=\"center\">\n                            <Grid item sm={8}>\n                                <TextEmail label=\"Correo electrónico\" id=\"email\" view=\"log_in\"/>\n                            </Grid>\n                        </Grid>\n                    </div>\n                )\n            case 1:\n                return (\n                    <div>\n                        <Grid container spacing={4} direction=\"row\" justify=\"center\" alignItems=\"center\">\n                            <Grid item sm={5} align=\"right\">\n                                <h2>Bienvenido</h2>\n                            </Grid>\n                            <Grid item sm={7}>\n                                <Chip\n                                    avatar={<Avatar>M</Avatar>}\n                                    label={Register.email}\n                                    clickable\n                                    color=\"primary\"\n                                    onClick={this.changeEmail.bind(this)}\n                                    deleteIcon={<DoneIcon />}\n                                />\n                            </Grid>\n                            <Grid item sm={8}>\n                                <TextPassword label=\"Ingresa tu contraseña\" width={150} id=\"password\"/>\n                            </Grid>\n                        </Grid>\n                    </div>\n                )\n            default:\n                return 'Unknown step';\n        }\n    }\n    render(){\n        return(\n            <div className=\"root\">\n                <Grid container direction=\"row\">\n                    <Grid item xs={12} sm={12} md={12}>\n                        <Typography className=\"instructions\">\n                            {this.getStepContent(this.state.activeStep)}\n                        </Typography>\n\n                        <BackDrop message={this.state.message_backdrop}/>\n                        <SnackAlert message={this.state.message_snackAlert} color='#c9432e'/>\n\n                        <Grid container direction=\"row\" className=\"buttons\" justify=\"center\">\n                            <Grid item xs={1} sm={1} md={1}></Grid>\n                            <Grid item xs={4} sm={5} md={5}>\n                                <Button \n                                    color=\"secondary\"\n                                    onClick={this.handleBack} \n                                    className=\"button\"\n                                    >\n                                    {this.state.activeStep === 0 ? 'Crear Cuenta' : 'Olvidaste tu contraseña'}\n                                </Button>\n                            </Grid>\n                            <Grid item xs={4} sm={1} md={1}></Grid>\n                            <Grid item xs={4} sm={4} md={4} align=\"center\">\n                                <Button\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={this.handleNext}\n                                    className=\"button\"\n                                    >\n                                    Siguiente\n                                </Button>\n                            </Grid>\n                            <Grid item xs={4} sm={1} md={1}></Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        Register: state.Register,\n        Login: state.Login\n    };\n};\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n       change: (text) => {dispatch(change(text))},\n       email_success: (text) => {dispatch(email_success(text))},\n       fill: (text) => {dispatch(fill(text))},\n       openbd: (text) => {dispatch(openBD(text))},\n       open_snack: (text) => {dispatch(openSnack(text))},\n       send: (text) => {dispatch(send(text))},\n       \n    }\n}\n\n \nexport default  withRouter(connect(mapStateToProps,mapDispatchToProps)(StepLogin)) ;","import React, { Component } from 'react'\r\nimport '../css/login.css';\r\n\r\nimport auth from '../router/Auth'\r\n//import BackDrop from '../components/BackDrop'\r\n//import Button from '@material-ui/core/Button';\r\n//import Checkbox from '@material-ui/core/Checkbox';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Fab from '@material-ui/core/Fab';\r\n//import FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\n//import HomeIcon from '@material-ui/icons/Home';\r\nimport LinkUI from '@material-ui/core/Link';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport StepLogin from '../components/StepLogin'\r\n//import TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Redux\r\nimport {connect} from 'react-redux'\r\nimport {fill,send} from '../_actions/Login'\r\n\r\n\r\nclass Log_in extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        //this.state = {}\r\n        this.inputChange = this.inputChange.bind(this);\r\n        this.sendRequest = this.sendRequest.bind(this);\r\n        this.changeView = this.changeView.bind(this);\r\n        this.moveRegister = this.moveRegister.bind(this);\r\n    }\r\n\r\n    async inputChange(event){\r\n        let {id , value} = event.target\r\n        var md5 = require('md5');\r\n        if (id === 'password'){value = md5(value)}\r\n        this.props.fill([id,value])\r\n    }\r\n    \r\n    \r\n    changeView(rol){\r\n        \r\n        if(rol === 'generador'){\r\n            auth.login(() =>{this.props.history.push(\"/user\")}) \r\n            //localStorage.setItem('auth',true)\r\n            //this.props.history.push(\"/user\")\r\n        }\r\n            \r\n        if(rol === 'transportador'){\r\n            auth.login(() =>{this.props.history.push(\"/services\")}) \r\n            //localStorage.setItem('auth',true)\r\n            //this.props.history.push(\"/services\")\r\n        }\r\n    }\r\n    \r\n    async sendRequest(){ \r\n        this.props.send();\r\n        /*setTimeout(function(){\r\n            login = store.getState().Login\r\n            \r\n        },2000);*/\r\n        \r\n        //await this.changeView();\r\n        \r\n        /*const { Login } = this.props;\r\n        console.log(\"rol before push in login\",Login.rol)\r\n        if(Login.rol === 'generador'){this.props.history.push(\"/user\")}\r\n        else{this.props.history.push(\"/services\")}\r\n        let promise = new Promise(function(resolve,reject){\r\n            setTimeout(function(){\r\n                resolve(\r\n                    \"hallo promise\"        \r\n                );\r\n            },2000);\r\n        })\r\n        //const { Login } = this.props;\r\n        \r\n        promise.then(function(response){\r\n            let login = store.getState().Login\r\n            console.log(\"rol before push in login\",login.rol)\r\n            return '12'\r\n        })*/\r\n    }\r\n    \r\n    moveRegister(){\r\n        this.props.history.push(\"/sign_up\")\r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            <Grid container item spacing={4} component=\"main\" className=\"root\" >\r\n                <CssBaseline/>\r\n\r\n                <Grid item xs={12} sm={6} md={6} component={Paper} elevation={6} square>\r\n                    <div className=\"paper\">\r\n                        <div className=\"Avatar_login\">\r\n                            <Fab color=\"primary\" size={'large'} >\r\n                                <LockOutlinedIcon />\r\n                            </Fab>\r\n                        </div>\r\n                        <h2>INTERMODALIDAPP</h2>\r\n                        <div className=\"title\">\r\n                            <Typography component=\"h1\" variant=\"h5\" >Inicio de Sesión</Typography>\r\n                        </div>\r\n                        <div className=\"stepper_login\">\r\n                            <StepLogin />\r\n                        </div>\r\n                        <form className=\"form\" noValidate>\r\n                            \r\n                            <Grid container item spacing={3} justify=\"center\">\r\n                                <Grid item xs={10} sm={10} > \r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" className=\"footer_login\">\r\n                                        {'Intermodalidapp & '}\r\n                                        <LinkUI color=\"inherit\" href=\"https://material-ui.com/\">\r\n                                            Material-UI\r\n                                        </LinkUI>\r\n                                    </Typography>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={false} sm={6} md={6} className=\"image\"/>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    };\r\n };\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n       fill: (text) => {dispatch(fill(text))},\r\n       send: (text) => {dispatch(send(text))}\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Log_in));","// Open the train\nexport const opent = (option) =>{\n    return {\n        type: 'OPENT',\n        payload: option\n    }\n}","import React, { Component } from 'react'\nimport '../css/train.css';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid' \n// open Train \nimport {opent} from '../_actions/Train';\nimport train from '../resources/Train.png';\nimport { withRouter } from 'react-router-dom';\n\n//redux\nimport {connect} from 'react-redux'\n\n\nclass Train extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {}\n        this.openTrain = this.openTrain.bind(this)\n    }\n    openTrain(){this.props.opent('close train')}\n\n    render(){\n        \n        const {Train} = this.props\n        let title = 'Estado del Tren: '+ this.props.name\n        return(\n            \n            <Dialog open={Train.opent}>\n                \n                <DialogTitle align={\"center\"}>\n                    <div className=\"title\"><b>{title}</b></div>\n                    \n                </DialogTitle>\n                <DialogContent>\n                    <Grid container direction=\"row\" item={true} spacing={1} className=\"all\">\n                        <Grid item xs={12} sm={4} md={4} align=\"center\">\n                            <img src={train} alt=\"train\" width=\"150\" height=\"110\"/>\n                        </Grid>\n                        <Grid item xs={12} sm={4} md={4} align=\"center\" >\n                            <div className=\"TrainE\">\n                                <h2>{parseInt(this.props.capacity)-parseInt(this.props.places)}</h2>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} sm={4} md={4} align=\"center\">\n                            <div className=\"TrainF\">\n                                <h2>{this.props.places}</h2>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} sm={8} md={8} align=\"center\" className=\"text_info\">\n                            <p>\n                            Contenedor <b>Verde</b> indica la cantidad\n                            de plataformas <i>libres del tren</i>\n                            </p>\n                        </Grid>\n                        <Grid item xs={12} sm={4} md={4} align=\"center\" >\n                            <div className=\"TrainSE\"/>\n                        </Grid>\n                        <Grid item xs={12} sm={8} md={8} align=\"center\" className=\"text_info\" >\n                            <p>\n                            Contenedor <b>Rojo</b> indica la cantidad\n                            de plataformas <i>ocupadas del tren</i>\n                            </p>\n                        </Grid>\n                        <Grid item xs={12} sm={4} md={4} align=\"center\">\n                            <div className=\"TrainSF\"/>\n                            \n                        </Grid>\n\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.openTrain}> cerrar </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       Train: state.Train\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        opent: (option) => {dispatch(opent(option))},\n        \n    }\n}\nexport default withRouter((connect(mapStateToProps,mapDispatchToProps)(Train)));","import API_ROUTE from '../constants/api_route'\nimport store from '../store'\n\n\nconst axios = require(\"axios\")\n\n\n// open services dialog \nexport const open = (option) =>{\n    return {\n        type: 'OPEN',\n        payload: option\n    }\n}\n\n// open notifications dialog \nexport const openDN = (option) =>{\n    return {\n        type: 'OPENDN',\n        payload: option\n    }\n}\n\n// open information dialog \nexport const openDI = (option) =>{\n    return {\n        type: 'OPENDI',\n        payload: option\n    }\n}\n\n// open edit_service dialog \nexport const openES = (option) =>{\n    return {\n        type: 'OPENES',\n        payload: option\n    }\n}\n\n\n// change any value in dialog\nexport const change_dialog = (option) =>{\n    return {\n        type: 'CHANGE_DIALOG',\n        payload: option\n    }\n}\n\n// Create a service \nexport const create = () =>{\n    return (dispatch) => {\n        //setTimeout(() => {}, 2000);\n        let state = store.getState().Dialog\n        console.log(state)\n        axios.post(API_ROUTE,{\n            query : `mutation{\n                createService(Service: {\n                    id_user: ${localStorage.getItem('id_user')}\n                    title: \"${state.title}\"\n                    class: \"${state.type}\"\n                    capacity: ${state.capacity}\n                    places: ${state.places}\n                    cost: \"${state.cost}\"\n                    origin: \"${state.origin}\"\n                    destination: \"${state.destination}\"\n                    transport: \"${state.transport}\"\n                    visibility: ${state.visibility}\n                    date_start: \"${state.dateStart}\"\n                    date_end: \"${state.dateEnd}\"\n                }){\n                    id\n                    title\n                }\n            }`\n        }).then((result)=>{\n         \n            const title = result.data.data.createService.title\n            if(title !== \" \"){\n                dispatch(change_dialog(['service_created','any']))\n            }else{\n                alert(\"No se creo el servicio\")\n            }\n        }).catch(err => console.log(err))\n        \n    }\n}\n\n// update a service \nexport const update = (id_service) =>{\n    return (dispatch) => {\n        let state = store.getState().Dialog\n        console.log(id_service)\n        //setTimeout(() => {}, 2000);\n        console.log(state)\n        axios.post(API_ROUTE,{\n            query : `mutation{\n                updateService(id: ${id_service},Service:{\n                    places: ${state.places}\n                    date_start: \"${state.dateStart}\"\n                    date_end: \"${state.dateEnd}\"\n                }){\n                    places\n                }\n              }`\n        }).then((result)=>{\n         \n            const places = result.data.data.updateService.places\n            if(places === state.places){\n                dispatch(change_dialog(['service_updated','any']))\n            }\n\n        }).catch(err => console.log(err))\n        \n    }\n}\n\n// Load all services\nexport const load = () =>{\n    return(dispatch)=> {\n        axios.post(API_ROUTE, {\n            query: `query{\n                getServices{\n                    id \n                    id_user \n                    title \n                    class \n                    capacity\n                    places \n                    cost \n                    origin \n                    destination \n                    transport \n                    date_start\n                    date_end\n                }\n            }`\n            \n        }).then((result)=>{\n            let service  = result.data.data.getServices\n            dispatch(change_dialog(['cards',service]))\n            //console.log(\"service: \", state.cards)\n        }).catch(err => console.log(err))\n    } \n}\n","import React, { Component } from 'react'\nimport '../css/cardServices.css';\n\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n\n//import DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n//import EditService from '../components/EditService';\nimport EventIcon from '@material-ui/icons/Event';\nimport Fab from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid' \n\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Train from './Train'\nimport TrainIcon from '@material-ui/icons/Train';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\n\nimport {connect} from 'react-redux'\n// open Train \nimport {opent} from '../_actions/Train';\nimport {change_dialog,openES} from '../_actions/Dialog'\n\n\n//var wtf8 = require('wtf-8');\n\nclass CardServices extends Component {\n    constructor(props){\n        super(props);  \n        this.state = {\n           dialogVerMas: false,\n           dialogReservar: false,\n           openT: false,\n           open: false,\n           id: 0\n        }\n        this.openTrain = this.openTrain.bind(this);\n        /*this.handleClose = this.handleClose.bind(this);*/\n          \n    }\n    openEdit(){\n        this.props.change_dialog(['id_service',this.props.card.id])\n        this.props.openES();\n    }\n\n    openTrain(){this.props.opent('open train')}\n    render(){\n        \n        return(\n            <Grid item xs={12} sm={12} md={6}>\n                <Card raised={true} className=\"card\">\n                    <CardHeader\n                        avatar={<div className=\"avatar\">R</div>}\n                        title= {this.props.card.title}\n                        subheader= {this.props.card.class+\"  &  \"+this.props.card.transport}\n                        action={<IconButton aria-label=\"settings\"><MoreVertIcon /></IconButton>} \n                    />\n                    <CardContent>\n                        <Grid container direction=\"row\" className=\"body\">\n                            <Grid item xs={6} md={6} align=\"center\" >\n                                <PlaceIcon color={'primary'}/>\n                                <h2>Lugar de origen</h2>\n                                <h5>{this.props.card.origin}</h5>\n                            </Grid>\n                            <Grid item xs={6} md={6} align=\"center\" >\n                                <PlaceIcon color={'secondary'}/>\n                                <h2>Lugar de destino</h2>\n                                <h5>{this.props.card.destination}</h5>\n                            </Grid>\n\n                            <Grid item xs={6} md={6} align=\"center\" >\n                                <EventIcon color={'secondary'}/>\n                                <h2>Fecha de salida</h2>\n                                {this.props.card.date_start.slice(0,21)}\n                            </Grid>\n                            <Grid item xs={6} md={6} align=\"center\" >\n                            <EventIcon color={'primary'}/>\n                                <h2>Fecha de llegada</h2>\n                                {this.props.card.date_end.slice(0,21)}\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <CardActions>\n                        <Grid item xs={2} sm={2} align=\"center\">\n                            {this.props.card.transport === 'terrestre' ? \n                                <br/> : \n                                <Fab color=\"secondary\" size={'small'}>\n                                    <TrainIcon onClick={this.openTrain}/>\n                                </Fab>\n                            }\n                            <Train \n                                free={this.props.card.places} \n                                capacity={this.props.card.capacity} \n                                name={this.props.card.title}\n                                \n                                />\n                        </Grid>\n                        <Grid item xs={4} sm={6} align=\"center\"></Grid>\n                        <Grid item xs={3} sm={2} align=\"center\">\n                            <Tooltip title=\"Editar servicio\">\n                                <Fab color=\"primary\" size={'small'} > \n                                    <EditIcon onClick={this.openEdit.bind(this)}/> \n                                </Fab>\n                            </Tooltip>\n                        </Grid>\n                        <Grid item xs={3} sm={2} align=\"center\">\n                            <Fab color=\"secondary\" size={'small'}><VisibilityOffIcon  onClick={this.handleClickButton2}/></Fab>\n                        </Grid>\n                    </CardActions>\n                </Card>\n                \n            </Grid>\n            \n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       Train: state.Train\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        change_dialog: (option) => {dispatch(change_dialog(option))},\n        opent: (option) => {dispatch(opent(option))},\n        openES: (option) => {dispatch(openES(option))},\n        /*change: (option) => {dispatch(change(option))},\n       changeName: (option) => {dispatch(changeName(option))}*/\n    }\n}\n\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(CardServices));","import React, { Component } from 'react'\n\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Grid from '@material-ui/core/Grid';\n\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport { withRouter } from 'react-router-dom';\n\nimport {connect} from 'react-redux'\nimport {change_dialog} from '../_actions/Dialog'\n\nclass DateTime extends Component {\n    \n    constructor(props){\n       super(props);\n        this.state = {\n            //selectedDate: new Date('2019-10-31T09:00:00')\n            selectedDate: new Date()\n        }\n       this.ChangeOption = this.ChangeOption.bind(this)\n    }\n    ChangeOption(event){\n       //console.log(event)\n       \n        this.setState({\n            selectedDate: event\n        })\n        if (this.props.labelDate === 'Fecha Salida'){\n            this.props.change_dialog(['salida',event])\n        }else{\n            this.props.change_dialog(['llegada',event])\n        }\n       \n    }\n     \n \n    render(){\n       //const {DateTime} = this.props;\n       \n        return(\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <Grid container justify=\"space-around\">\n                    <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    id=\"date-picker-inline\"\n                    label={this.props.labelDate}\n                    value={this.state.selectedDate}\n                    onChange={this.ChangeOption}\n                    KeyboardButtonProps={{'aria-label': 'change date'}}\n                    />\n                    \n                    <KeyboardTimePicker\n                    margin=\"normal\"\n                    id=\"time-picker\"\n                    label={this.props.labelTime}\n                    value={this.state.selectedDate}\n                    onChange={this.ChangeOption}\n                    KeyboardButtonProps={{'aria-label': 'change time'}}\n                    /> \n                </Grid>\n            </MuiPickersUtilsProvider>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       Dialog: state.Dialog,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n       change_dialog: (date) => {dispatch(change_dialog(date))}\n    }\n}\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(DateTime));","import React, { Component } from 'react'\nimport '../css/cities.css'; \n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport { RadioGroup, Collapse} from '@material-ui/core';\n\nimport {connect} from 'react-redux'\nimport {change_dialog} from '../_actions/Dialog'\n\nclass ListCities extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            open: false,\n            setOpen: false,\n            text: '',\n            cities:[\n                { label: 'Bogotá',value: 'bogotá' },\n                { label: 'Santa Marta',value: 'santa marta'},\n                { label: 'Barranquilla',value: 'barranquilla'},\n                { label: 'Cartagena',value: 'cartagena'},\n                { label: 'La Dorada',value: 'dorada'},\n                { label: 'Belencito',value: 'belencito'},\n            ],\n            checked: ''\n        }\n        this.OpenList = this.OpenList.bind(this);\n        this.ChangeOption = this.ChangeOption.bind(this);\n\n    }\n    OpenList(){\n        this.setState({open: !this.state.setOpen, setOpen: !this.state.open})\n        \n    }\n\n    async ChangeOption(event){\n        let option = event.target.value\n        this.props.change_dialog([this.props.type,option]);\n        this.setState({ text: option })\n        this.props.change_dialog(['checked',option])\n    }\n    \n    render(){\n        \n        const {dialog} = this.props\n        let cities = this.state.cities.map((city)=>{\n            if (dialog.checked !== city.value){\n                return(\n                    <ListItem>\n                        <FormControlLabel \n                            control={ \n                                <Radio \n                                    className=\"list\" \n                                    onChange={this.ChangeOption} \n                                    disabled={false}\n                                    value={city.value}/>\n                            }\n                            label={city.label}/>\n                    </ListItem>\n                )\n            }\n        })\n\n        return(\n            <List justify=\"center\" style={{color:this.props.color}}>\n                \n                <ListItem button onClick={this.OpenList}>\n                <ListItemText primary={\n                        this.state.text === '' ? \n                        this.props.type : \n                        this.props.type +\" : \"+this.state.text\n                    }/>\n                    {this.state.open ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n                    <RadioGroup>\n                        {cities}\n                    </RadioGroup>\n                </Collapse>\n            </List>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        dialog: state.Dialog,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n       change_dialog: (value) => {dispatch(change_dialog(value))},\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(ListCities);","import React, { Component } from 'react'\nimport '../css/cities.css'; \n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport { RadioGroup, Collapse } from '@material-ui/core';\n\nimport {connect} from 'react-redux'\nimport {change_dialog} from '../_actions/Dialog'\n\nclass ListTrans extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            open: false,\n            setOpen: false,\n            text: ''\n        }\n        this.OpenList = this.OpenList.bind(this);\n        this.ChangeOption = this.ChangeOption.bind(this);\n\n    }\n    OpenList(){\n        this.setState({open: !this.state.setOpen, setOpen: !this.state.open})\n    }\n\n    async ChangeOption(event){\n        let option = event.target.value\n        this.props.change_dialog([this.props.type,option]);\n        this.setState({ text: option })\n    }\n    \n    render(){\n        \n        //console.log(\"cities: \",ListTrans)\n        return(\n            <List justify=\"center\">\n                <ListItem button onClick={this.OpenList}>\n                <ListItemText primary={\n                        this.state.text === '' ? \n                        this.props.type : \n                        this.props.type +\" --- > \"+this.state.text\n                    }/>\n                    {this.state.open ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n                    <RadioGroup>\n                        <ListItem >\n                            <FormControlLabel control={ <Radio className=\"list\" onChange={this.ChangeOption} value=\"terrestre\" name={\"algo\"}/>}\n                            label=\"Terrestre\"/>\n                        </ListItem>\n                        <ListItem >\n                            <FormControlLabel control={ <Radio className=\"list\" onChange={this.ChangeOption} value=\"ferreo\"/>}\n                            label=\"Ferreo\"/>\n                        </ListItem>    \n                        <ListItem >\n                            <FormControlLabel control={ <Radio className=\"list\" onChange={this.ChangeOption} value=\"fluvial\"/>}\n                            label=\"Fluvial\"/>\n                        </ListItem>\n                        <ListItem >\n                            <FormControlLabel control={<Radio className=\"list\" onChange={this.ChangeOption} value=\"aereo\"/>}\n                            label=\"Aereo\"/>\n                        </ListItem>\n                    </RadioGroup>\n                </Collapse>\n            </List>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        dialog: state.Dialog,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        change_dialog: (value) => {dispatch(change_dialog(value))},\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(ListTrans);","import React,{Component}   from 'react';\nimport '../css/stepper_service.css';\n\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport BackDrop from '../components/BackDrop'\nimport Button from '@material-ui/core/Button';\nimport DateTime from './DateTime'\nimport Fab from '@material-ui/core/Fab';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport ListCities from './ListCities'\nimport ListTrans from './ListTrans'\nimport Popover from '@material-ui/core/Popover';\n\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography'; \n//import {withRouter } from 'react-router-dom';\n\nimport {connect} from 'react-redux'\n// load data to service\nimport {open, change_dialog, create } from '../_actions/Dialog';\n// view loading\nimport {openBD} from '../_actions/actions_backdrop' \nimport { openSnack } from '../_actions/actions_snack'\n\n\nclass StepService extends Component{\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            openP: false,\n            activeStep: 0,\n            setActiveStep: 0,\n            skipped: new Set(),\n            setSkipped: new Set(),\n            steps: ['Descripción', 'Programación'],\n            checked: true,\n            message_backdrop: 'Creando servicio..',\n            \n\n        }\n        /*const [activeStep, setActiveStep] = React.useState(0);\n        const [skipped, setSkipped] = React.useState(new Set());\n        const steps = getSteps();*/\n        this.isStepSkipped = this.isStepSkipped.bind(this);\n        this.isStepOptional = this.isStepOptional.bind(this);\n        this.handleNext = this.handleNext.bind(this);\n        this.handleBack = this.handleBack.bind(this);\n        this.changeState= this.changeState.bind(this);\n    }\n    changeState(event){\n        //console.log(\"entry changeState\")\n        let {id , value} = event.target\n        this.props.change_dialog([id,value])\n    }\n\n    //change que switch state\n    handleChange(){ this.props.change_dialog(['visibility','any'])}\n     \n    // Create Service request\n    createService(){\n        \n        // open backDrop\n        // send request to create services\n        setTimeout(() => { \n            this.props.openbd()\n            this.props.create()    \n        }, 1000);\n        \n        //verify if the service its created\n        setTimeout(() => { \n            let {dialog} = this.props\n            if (dialog.service_created){\n                this.props.openbd()\n                this.props.open('close')\n                //this.props.open_snack('snack_alert');\n                this.props.open_snack('snack_alert')\n                setTimeout(() => { this.props.open_snack('snack_alert');}, 4000);\n            }\n        }, 3000);\n        \n    }\n\n    getStepContent(step) {\n        switch (step) {\n            case 0:\n                const id = this.state.open ? 'simple-popover' : undefined;\n                return (\n                    <div>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"title\"\n                            label=\"Nombre del servicio\"\n                            autoFocus\n                            onChange={this.changeState}\n                        />\n                        <ListTrans type={\"Transporte\"}/>\n                        <Grid container spacing={1} direction={'row'}>\n                            <Grid item xs={5}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    disabled={false}\n                                    fullWidth\n                                    id=\"capacity\"\n                                    label=\"Capacidad total\"\n                                    autoFocus\n                                    onChange={this.changeState}\n                                />\n                            </Grid>\n                            <Grid item xs={5}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    fullWidth\n                                    id=\"places\"\n                                    label=\"Espacios libres\"\n                                    autoFocus\n                                    onChange={this.changeState}\n                                />\n                            </Grid>\n                            \n                            <Grid item xs={2} align={'center'} >\n                                <div className=\"clip_info\"/>\n                                <Fab color=\"secondary\" size={'small'}>\n                                    <AttachFileIcon onClick={this.openPop}/>\n                                    <Popover\n                                        id={id}\n                                        open={this.state.openP}\n                                        anchorEl={this.state.anchorEl}\n                                        onClose={this.openPop}\n                                        anchorOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'center',\n                                        }}\n                                        transformOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'center',\n                                        }}\n                                    >\n                                        <Typography className=\"typography\">\n                                        <b>Capacidad: </b>Plataformas que posee el tren \n                                        </Typography>\n                                        <Typography className=\"typography\">\n                                        <b>Espacios: </b>Plataformas disponibles del tren\n                                        </Typography>\n                                    </Popover>\n                                </Fab>\n                            </Grid>\n                        </Grid>\n                        \n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            //required\n                            fullWidth\n                            id=\"cost\"\n                            label=\"Costo\"\n                            name=\"costo\"\n                            autoFocus\n                            onChange={this.changeState}\n                        />\n                    </div>\n                )\n            case 1:\n                let {dialog} = this.props\n                return (\n                    <div>\n                        <Grid container direction=\"row\">\n                            <Grid item xs={6}>\n                                <ListCities type={\"Origen\"} color=\"#132947\"/>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <ListCities type={\"Destino\"} color=\"#132947\"/>\n                            </Grid>\n                        </Grid>\n                        <Grid container direction={'row'}>\n                            <Grid item xs={6}>\n                                <DateTime labelDate={\"Fecha Salida\"} labelTime={\"Hora Salida\"}/>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <DateTime labelDate={\"Fecha Llegada\"} labelTime={\"Hora Llegada\"}/>        \n                            </Grid>\n                        </Grid>\n\n                        <Grid container direction={'row'} className=\"switch\">\n                            <Grid item xs={8} align=\"center\">\n                                Permite que otros usuarios vean el servicio\n                            </Grid>\n                            <Grid item xs={4} align=\"center\">\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={dialog.visibility}\n                                            onChange={this.handleChange.bind(this)}\n                                            value=\"checked\"\n                                            color=\"primary\"\n                                            inputProps={{ 'aria-label': 'primary checkbox' }}\n                                        />\n                                    }label=\"Hacer visible\"\n                                />\n                            </Grid>\n                        </Grid>\n                        \n                    </div>\n                )\n            default:\n                return 'Unknown step';\n        }\n    }\n    \n   \n\n\n    isStepOptional = step => { return step === 1;};\n    isStepSkipped = step => {return this.state.skipped.has(step);};\n\n    async handleNext() {\n        await this.setState({activeStep: this.state.activeStep + 1})\n    };\n\n    async handleBack () {\n        await this.setState({activeStep: this.state.activeStep - 1})\n        //console.log(\"hallo: \",this.state.activeStep)\n    };\n\n    handleSkip = () => {\n        if (!this.isStepOptional(this.state.activeStep)) {\n        // You probably want to guard against something like this,\n        // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        //this.state.setActiveStep(prevActiveStep => prevActiveStep + 1);\n        this.setState({\n            setActiveStep: prevActiveStep => prevActiveStep + 1\n        })\n        this.setState({\n            setSkipped: prevSkipped => {\n                const newSkipped = new Set(prevSkipped.values());\n                newSkipped.add(this.state.activeStep);\n                return newSkipped;\n            }\n        })\n        /*this.state.setSkipped(prevSkipped => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(this.state.activeStep);\n            return newSkipped;\n        });*/\n    };\n\n    handleReset = () => {\n        this.setState({activeStep: 0})\n    };\n    \n\n    \n    render(){\n        \n        return(\n            <div className=\"root\">\n                <Grid container direction=\"row\">\n                    <Grid item xs={12} sm={12} md={12}>\n                        <Stepper activeStep={this.state.activeStep}>\n                            {   \n                                this.state.steps.map((label, index) => {\n                                    const stepProps = {};\n                                    const labelProps = {};\n                                    if (this.isStepSkipped(index)) {\n                                        stepProps.completed = false;\n                                    }\n                                    return (\n                                        <Step key={label} {...stepProps}>\n                                            <StepLabel {...labelProps}>{label}</StepLabel>\n                                        </Step>\n                                    );\n                                })\n                            }\n                        </Stepper>\n                    </Grid>\n                            \n                    <Grid item xs={12} sm={12} md={12}>\n                        <BackDrop message={this.state.message_backdrop}/>\n                        <div>\n                            {this.state.activeStep === this.state.steps.length ? (\n                                <div>\n                                    <Grid item xs={12} align=\"center\">\n                                    <Typography className=\"instructions\">\n                                        Servicio configurado correctamente.\n                                    </Typography>\n                                    </Grid>\n\n                                    <Grid container direction=\"row\" className=\"buttons\">\n                                        <Grid item xs={4} sm={4} md={4} align=\"center\">\n                                            <Button \n                                                fullWidth\n                                                variant=\"outlined\"\n                                                color=\"inherit\"\n                                                onClick={this.handleReset}\n                                                className=\"button\"\n                                                >\n                                                Reiniciar\n                                            </Button>\n                                        </Grid>\n                                        <Grid item xs={4} sm={4} md={4}></Grid>\n                                        <Grid item xs={4} sm={4} md={4} align=\"center\">\n                                            <Button\n                                                fullWidth\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={this.createService.bind(this)}\n                                                className=\"button\"\n                                                >\n                                                Crear\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                    \n                                </div>\n                            ) : (\n                                <div>\n                                    <Typography className=\"instructions\"></Typography>\n                                    {this.getStepContent(this.state.activeStep)}\n                                    <div>\n                                        <Grid container direction=\"row\" className=\"buttons\">\n                                            <Grid item xs={4} sm={4} md={4} align=\"center\">\n                                                <Button \n                                                    fullWidth\n                                                    variant=\"contained\"\n                                                    color=\"secondary\"\n                                                    disabled={this.state.activeStep === 0} \n                                                    onClick={this.handleBack} \n                                                    className=\"button\"\n                                                    >\n                                                    Atras\n                                                </Button>\n                                            </Grid>\n                                            <Grid item xs={4} sm={4} md={4}></Grid>\n                                            <Grid item xs={4} sm={4} md={4} align=\"center\">\n                                                <Button\n                                                    fullWidth\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    onClick={this.handleNext}\n                                                    className=\"button\"\n                                                    >\n                                                    {this.state.activeStep === this.state.steps.length - 1 ? 'Terminar' : 'Siguiente'}\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </Grid>\n                </Grid>    \n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       dialog: state.Dialog,\n       Login : state.Login,\n       register: state.Register\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        create: (date) => {dispatch(create(date))},\n        change_dialog: (date) => {dispatch(change_dialog(date))},\n        open: (text) => {dispatch(open(text))},\n        openbd: (text) => {dispatch(openBD(text))},\n        open_snack: (text) => {dispatch(openSnack(text))},\n    }\n}\n \nexport default connect(mapStateToProps,mapDispatchToProps)(StepService);","import React, { Component } from 'react'\nimport '../css/dialog.css'; \n\n//import AttachFileIcon from '@material-ui/icons/AttachFile';\n//import Button from '@material-ui/core/Button';\n//import DateTime from './DateTime'\nimport Dialog from '@material-ui/core/Dialog';\n//import DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport Fab from '@material-ui/core/Fab';\nimport { Grid } from '@material-ui/core';\n\n//import ListCities from './ListCities'\n//import ListTrans from './ListTrans'\n//import Popover from '@material-ui/core/Popover';\n\nimport StepService from '../components/StepService';\nimport store from '../store'\n//import TextField from '@material-ui/core/TextField';\n\n\n//import Typography from '@material-ui/core/Typography';\n\n\nimport {connect} from 'react-redux'\nimport {create,change_dialog,open} from '../_actions/Dialog'\n\nclass DialogService extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            /*SetOpenO: false,\n            openO: false,\n            openD: false,\n            setOpenD: false,\n            openT: false,\n            setOpenT: false,\n            //popOver\n            openP: false,\n            anchorEl: null*/\n            openP: false,\n            anchorEl: null\n        }\n        \n        //this.handleClick = this.handleClick.bind(this)\n        //this.handleClose = this.handleClose.bind(this)\n        this.SendRequest = this.SendRequest.bind(this);\n        this.openPop = this.openPop.bind(this);\n        \n        this.closeDialog = this.closeDialog.bind(this);\n    }\n\n    openPop(event){\n        this.setState({ anchorEl: event.currentTarget, openP: !this.state.openP })\n    }\n\n    componentDidMount(){ \n        let id_user = store.getState().Login.id_user\n        this.props.change_dialog(['id_user',id_user])\n    }\n\n    /*async changeState(event){\n        const target = event.target.id;\n        const value = event.target.value;\n        this.props.change([target,value])\n    }*/\n\n    async SendRequest(){this.props.open('io')}\n    closeDialog(){ this.props.open('dialog')}\n    render(){\n        \n        const { dialog } = this.props;\n        //console.log(\"dialog\",dialog)\n\n        //const id = this.state.open ? 'simple-popover' : undefined;\n        return(\n            <Dialog open={dialog.open}>\n                <DialogTitle >\n                    <Grid container direction=\"row\">\n                        <Grid item xs={5} md={5}>{\"Crear Nuevo Servicio\"}</Grid>\n                        <Grid item xs={3} md={3}></Grid>\n                        <Grid item xs={4} md={4} align=\"right\">\n                            <Fab color=\"primary\" size=\"small\" >\n                                <ExitToAppIcon onClick={this.closeDialog}/>\n                            </Fab>\n                        </Grid>\n                    </Grid>\n                </DialogTitle>\n                <DialogContent>\n                    <StepService/>\n                </DialogContent>\n            </Dialog>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       dialog: state.Dialog,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        create: (text) => {dispatch(create(text))},\n        change_dialog: (text) => {dispatch(change_dialog(text))},\n        open: (date) => {dispatch(open(date))},\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(DialogService);","import React, { Component } from 'react'\nimport '../css/panel.css'; \n\nimport Button from '@material-ui/core/Button';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\n\n\nvar wtf8 = require('wtf-8');\nclass Panel extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            open: false\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n    handleChange(){this.setState({open: !this.state.open})}\n    \n\n    render(){\n        //console.log(\"this.props in panel: \",this.props.cardReq)\n        return(\n            <div className=\"wrap\">\n                <List className=\"list\">\n                    <ListItem> \n                        <ExpansionPanel expanded={this.state.open} onChange={this.handleChange}>\n                            <ExpansionPanelSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1bh-content\"\n                                id=\"panel1bh-header\"\n                                >\n                                <Typography className=\"heading\">{wtf8.decode(this.props.cardReq.title)}</Typography>\n                                <Typography className=\"secondaryHeading\">{this.props.cardReq.accept}</Typography>\n                                </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                            \n                            <Grid container direction={\"row\"}>\n                                <Grid item xs={12} md={12} sm={12}>\n                                    <Typography>\n                                        Cada petición presentada por el usuario tiene un cuerpo, el cual \n                                        presenta de manera resumida la intención de la misma, en esta ocasión es\n                                        presentado a continuación:<br/><br/>\n                                        {wtf8.decode(this.props.cardReq.body)}\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={4} md={8} sm={4} className=\"item\"></Grid>\n                                <Grid item xs={4} md={2} sm={4} className=\"item\" align=\"right\">\n                                    <Button variant='contained' color=\"secondary\">Aceptar</Button>\n                                </Grid>\n                                <Grid item xs={4} md={2} sm={4} className=\"item\" align=\"right\">\n                                    <Button variant=\"outlined\" color=\"secondary\">Rechazar</Button>\n                                </Grid>\n                            </Grid>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>    \n                    </ListItem>\n                </List>\n            </div>\n        )\n    }\n}\n\nexport default Panel;","import API_ROUTE from '../constants/api_route'\nconst axios = require(\"axios\")\n\nexport const openr = (option) =>{\n    return {\n        type: 'OPENR',\n        payload: option\n    }\n}\n\n//change the request values\nexport const changer = (option) =>{\n    return {\n        type: 'CHANGER',\n        payload: option\n    }\n}\n\n\n// Load all request\nexport const loadr = () =>{\n    return(dispatch)=> {\n        axios.post(API_ROUTE, {\n            query: `query{\n                getRequests{\n                    id\n                    title\n                    body\n                    accept\n                }\n            }`\n        }).then((result)=>{\n            //let request  = result.data.data.getRequests\n            //dispatch(changer(['requests',request]))\n        }).catch(err => console.log(err))\n    } \n    \n}\n","import React, { Component } from 'react'\nimport '../css/dialogN.css'; \n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { CssBaseline, Grid} from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\n/*import ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';*/\nimport Panel from './Panel'\nimport Slide from '@material-ui/core/Slide';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport {connect} from 'react-redux'\nimport {openDN} from '../_actions/Dialog'\nimport {loadr} from '../_actions/Request'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nclass DialogNotification extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            openP: false,\n            anchorEl: null\n        }\n        \n        //this.handleClick = this.handleClick.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n    }\n    componentDidMount(){this.props.loadr('load requests')}\n    handleClose(){\n        this.props.openDN('dialogN')\n    }\n    render(){\n        const { dialog } = this.props;\n        const { request } = this.props;\n        //console.log(\"request_ :\",request['requests'])\n        let requestCard = request['requests'].map(card=>{\n            return(\n                <Panel key={card.id} cardReq={card}/>\n            )\n        })\n        \n        return(\n            <Dialog fullScreen open={dialog.openN} onClose={this.handleClose} TransitionComponent={Transition}>\n                <div className=\"root-not\">\n                <Grid container direction=\"row\">\n                    <Grid item xs={12}>\n                        <AppBar className=\"appBar\">\n                            <Toolbar>\n                                <IconButton edge=\"start\" color=\"inherit\" onClick={this.handleClose} aria-label=\"close\">\n                                    <CloseIcon />\n                                </IconButton>\n                                <Typography variant=\"h6\" className=\"title\"></Typography>\n                                <Button \n                                    variant=\"contained\" \n                                    color=\"secondary\" \n                                    onClick={this.handleClose}>\n                                    save\n                                </Button>\n                            </Toolbar>\n                        </AppBar>\n                        <CssBaseline/> \n                    </Grid>\n                    <Grid container  direction=\"column\" >\n                        {requestCard}                            \n                    </Grid>\n                </Grid>\n                </div>\n                \n            </Dialog>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       dialog: state.Dialog,\n       request: state.Request,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n       openDN: (date) => {dispatch(openDN(date))},\n       // load requests\n       loadr: (date) => {dispatch(loadr(date))}\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(DialogNotification);","import React,{Component}   from 'react';\nimport '../css/dialogInformation.css';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Fab from '@material-ui/core/Fab';\nimport { Grid } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nimport {connect} from 'react-redux'\nimport {openDI} from '../_actions/Dialog'\n\n\nclass DialogInformation extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n    closeDialog(){\n        this.props.openDI('close')\n    }\n \n    render(){\n        let {dialog} = this.props\n\n        return(\n            <Dialog open={dialog.openI}>\n                <DialogTitle >\n                    <Grid container direction=\"row\">\n                        <Grid item xs={6} md={6} className=\"dialogInfo_text\">\n                            {\"Información\"}\n                        </Grid>\n                        <Grid item xs={2} md={2}></Grid>\n                        <Grid item xs={4} md={4} align=\"right\">\n                            <Tooltip title=\"Cerrar menú\">\n                                <Fab color=\"primary\" size=\"small\" >\n                                    <CloseIcon onClick={this.closeDialog.bind(this)}/>\n                                </Fab>\n                            </Tooltip>\n                            \n                        </Grid>\n                    </Grid>\n                </DialogTitle>\n                <DialogContent>\n                    {\n                        localStorage.getItem('view') === 'services' ? \n                        <Grid container direction=\"row\" alignItems=\"center\">\n                            <Grid item xs={10} md={10}>\n                                <p className=\"dialogInfo_text\">\n                                    Bienvenido al portal de creación de servicios,\n                                    al salir de este menú podra encontrar un boton de +\n                                    con el cual podra registrar sus servicios.\n                                </p>        \n                            </Grid>\n                            <Grid item xs={2} md={2} align=\"center\">\n                                <Fab color=\"secondary\" size=\"medium\"  >\n                                    <AddIcon style={{ fontSize: 30 }}/>\n                                </Fab>\n                            </Grid>\n                        </Grid>\n                        :\n                        <Grid container direction=\"row\" alignItems=\"center\">\n                            <Grid item xs={10} md={10} align=\"center\">\n                                <p className=\"dialogInfo_text\">\n                                    Bienvenido al portal, para buscar un nuevo servicio presione \n                                </p>        \n                            </Grid>\n                            <Grid item xs={2} md={2} align=\"center\">\n                                <MenuIcon style={{ fontSize: 32 }} />       \n                            </Grid>\n                            <Grid item xs={10} md={12}>\n                                <p className=\"dialogInfo_text\">\n                                    A continuación encontrará un menú, ahi podrá seleccionar\n                                    el origen y destino\n                                </p>        \n                            </Grid>\n                            <Grid item xs={10} md={10}>\n                                <p className=\"dialogInfo_text\">\n                                    Finalmente para obtener las alternativas\n                                    debe presionar\n                                    \n                                </p>        \n                            </Grid>\n                            <Grid item xs={2} md={2} align=\"center\">\n                                <SearchIcon style={{ fontSize: 34 }}/>      \n                            </Grid>\n                        </Grid>\n                    }\n                    \n                </DialogContent>                \n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       dialog: state.Dialog,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n       openDI: (date) => {dispatch(openDI(date))},\n    }\n}\n \nexport default connect(mapStateToProps,mapDispatchToProps)(DialogInformation);","import React,{Component}   from 'react';\n \nimport BackDrop from '../components/BackDrop'\nimport Button from '@material-ui/core/Button';\nimport DateTime from './DateTime'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Fab from '@material-ui/core/Fab';\nimport { Grid } from '@material-ui/core';\nimport Slider from '@material-ui/core/Slider';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport {connect} from 'react-redux'\nimport {openBD} from '../_actions/actions_backdrop' \nimport {change_dialog,openES,update} from '../_actions/Dialog'\nimport { openSnack } from '../_actions/actions_snack'\n\nclass EditService extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            message_backdrop: 'Actualizando servicio..',\n        }\n    }\n    \n    closeDialog(){\n        this.props.openES('close')\n    }\n    \n    ValueLabelComponent(props) {\n        const { children, open, value } = props;\n      \n        return (\n          <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n            {children}\n          </Tooltip>\n        );\n    }\n\n    changeState(event){\n        \n        let {id , value} = event.target\n        console.log(\"change state \",id, value)\n        //this.props.change_dialog([id,value])\n    }\n\n    changeSlider(event, value){\n        setTimeout(() => {\n            this.props.change_dialog(['places',value])    \n        }, 2000);\n    }\n\n    //update service\n    updateService(){\n        \n        // open backdrop\n        this.props.openbd('open')\n        setTimeout(() => {\n            // send request to update service\n            let { dialog } = this.props;\n            this.props.update(dialog.id_service);\n        }, 1000);\n\n        setTimeout(() => {\n            // verify if the service was updated\n            let { dialog } = this.props;\n            console.log(dialog.service_updated)\n            if(dialog.service_updated){\n                this.props.open_snack('snack_alert')\n                setTimeout(() => { this.props.open_snack('snack_alert');}, 4000);\n            }\n            this.props.openbd('console.log')\n            this.props.openES('close')\n        }, 4000);\n\n        \n    }\n\n    render(){\n        \n        var values = 'hola,0'\n        let { dialog } = this.props;\n        let { cards } = dialog\n        let capacity = cards.map((card) => {\n            if (parseInt(card.id) === parseInt(dialog.id_service)){\n                let { places} = card\n                return places\n            }else{ return 0}\n        })\n        \n        values = capacity[dialog.id_service-1]\n        \n\n        return(\n            <Dialog open={dialog.openES}>\n                <BackDrop message={this.state.message_backdrop}/>\n                <DialogTitle >\n                    <Grid container direction=\"row\">\n                        <Grid item xs={5} md={5}>{\"Editar Servicio\"}</Grid>\n                        <Grid item xs={3} md={3}></Grid>\n                        <Grid item xs={4} md={4} align=\"right\">\n                            <Fab color=\"primary\" size=\"small\" >\n                                <ExitToAppIcon onClick={this.closeDialog.bind(this)}/>\n                            </Fab>\n                        </Grid>\n                    </Grid>\n                </DialogTitle>\n                <DialogContent>\n                    \n                    <Grid container direction={'row'}>\n                        <Grid item xs={6}>\n                            <DateTime labelDate={\"Fecha Salida\"} labelTime={\"Hora Salida\"}/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <DateTime labelDate={\"Fecha Llegada\"} labelTime={\"Hora Llegada\"}/>        \n                        </Grid>\n                    </Grid>\n\n                    <Grid container style={{paddingTop: '30px'}} spacing={3} direction={'row'}>\n                        <Grid item xs={4}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                disabled={true}\n                                fullWidth\n                                value={30 - values + ' plataformas'}\n                                id=\"capacity\"\n                                label=\"Espacios libres\"\n                                autoFocus\n                                //onChange={this.changeState.bind(this)}\n                            />\n                        </Grid>\n                        <Grid item xs={8} align=\"center\">\n                            \n                            <Slider\n                                ValueLabelComponent={this.ValueLabelComponent.bind(this)}\n                                //aria-label=\"custom thumb label\"\n                                defaultValue={values}\n                                min={values}\n                                max={30}\n                                onChange={this.changeSlider.bind(this)}\n                                style={{paddingTop: '20px'}}\n                            />\n                            <Typography gutterBottom>\n                                Mueva el slider para cambiar el valor de los\n                                espacios libres\n                            </Typography>   \n                        </Grid>\n                    </Grid>\n                    <Grid container style={{paddingTop: '30px'}} spacing={3} direction={'row'}>\n                        <Grid item xs={4} align=\"center\">\n                            <Button \n                                fullWidth\n                                variant=\"outlined\"\n                                color=\"inherit\"\n                                onClick={this.handleReset}\n                                className=\"button\"\n                                >\n                                Cancelar\n                            </Button>\n                        </Grid>\n                        <Grid item xs={4} align=\"center\"></Grid>\n                        <Grid item xs={4} align=\"center\">\n                            <Button \n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.updateService.bind(this)}\n                                className=\"button\"\n                                >\n                                Actualizar\n                            </Button>\n                        </Grid>\n                    </Grid>\n\n                    \n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       dialog: state.Dialog,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        change_dialog: (date) => {dispatch(change_dialog(date))},\n        openbd: (text) => {dispatch(openBD(text))},\n        openES: (option) => {dispatch(openES(option))},\n        update: (option) => {dispatch(update(option))},\n        open_snack: (text) => {dispatch(openSnack(text))},\n    }\n}\n \nexport default connect(mapStateToProps,mapDispatchToProps)(EditService);","\nexport const change_menu = (option) =>{\n    return {\n        type: 'CHANGE_MENU',\n        payload: option\n    }\n}\nexport const open_menu = (option) =>{\n    return {\n        type: 'OPEN_MENU',\n        payload: option\n    }\n}","import React,{Component}   from 'react';\n \n \nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem'; \nimport {withRouter } from 'react-router-dom';\n\nimport {connect} from 'react-redux'\nimport {open_menu} from '../_actions/actions_navbar'\n\nclass MenuNav extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n    handleClose(){\n        this.props.open_menu()\n    }\n\n    logOut(){\n        this.props.open_menu()\n        setTimeout(() => { \n            //this.props.verify(validEmail)\n            localStorage.setItem('auth',false)    \n            this.props.history.push(\"/\") \n        }, 1000);\n    }\n\n    returnView(){\n        this.props.open_menu()\n        if (localStorage.getItem('view') === 'user'){\n            this.props.history.push(\"/user\")\n        }else{\n            this.props.history.push(\"/services\")\n        }\n    }\n\n    render(){\n        const menuId = 'primary-search-account-menu';\n        const {Navbar} = this.props\n        return(\n            <div>\n                <Menu\n                    id={menuId}\n                    anchorEl={Navbar.anchorEl}\n                    keepMounted\n                    open={Navbar.open}\n                    onClose={this.handleClose.bind(this)}>\n                    <MenuItem onClick={this.returnView.bind(this)}>Panel</MenuItem>\n                    <MenuItem onClick={this.handleClose.bind(this)}>Administrar tu cuenta</MenuItem>\n                    <MenuItem onClick={this.logOut.bind(this)}>Cerrar Sesión</MenuItem>\n                </Menu>\n            </div>\n        );\n    }\n}\n \nconst mapStateToProps = (state) => {\n    return {\n        Navbar: state.Navbar\n    };\n };\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n        open_menu: (text) => {dispatch(open_menu(text))},\n    }\n}\n\nexport default withRouter((connect(mapStateToProps,mapDispatchToProps)(MenuNav)));","import API_ROUTE from '../constants/api_route'\nimport {load} from './Dialog';\nconst axios = require(\"axios\")\n\nexport const open_drawer = (option) =>{\n    return {\n        type: 'OPEN_DRAWER',\n        payload: option\n    }\n}\n\n// change any value in dialog\nexport const change = (option) =>{\n    return {\n        type: 'CHANGE',\n        payload: option\n    }\n}\n\n\n// load alternatives \nexport const loadA = () =>{\n    console.log('load alternatives')\n    return(dispatch)=> {\n        axios.post(API_ROUTE, {\n            query: `query{\n                getAlternatives{\n                    id\n                    array_id\n                    cost\n                    array_services\n                    duration\n                    origin\n                    destination\n                }\n            }`\n            \n        }).then((result)=>{\n            let alternative  = result.data.data.getAlternatives\n            dispatch(change(['alternatives',alternative]))\n            dispatch(load())\n        }).catch(err => console.log(err))\n    } \n    \n}","import React, { Component } from 'react'\r\nimport '../css/navbar.css'; \r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\n//import auth from '../router/Auth'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\r\n//import Fab from '@material-ui/core/Fab';\r\nimport IconButton from '@material-ui/core/IconButton'\r\n//import Info from '../resources/question.svg'\r\nimport MenuNav from '../components/MenuNav'\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {withRouter } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\n\r\nimport {connect} from 'react-redux'\r\nimport {open_drawer} from '../_actions/Drawer'\r\nimport {change} from '../_actions/Register'\r\nimport {open_menu,change_menu} from '../_actions/actions_navbar'\r\nimport {openDI} from '../_actions/Dialog'\r\n\r\nconst styles = theme => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    textButton: {\r\n        color: 'white',\r\n        textDecorationLine: 'none',\r\n    }\r\n});\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            openM: false,\r\n            anchor: null\r\n        }\r\n        this.openDrawer = this.openDrawer.bind(this);\r\n        this.openMenu = this.openMenu.bind(this);\r\n        \r\n    }\r\n\r\n    openDrawer(){this.props.open('drawer');}\r\n\r\n    openMenu(event){\r\n        this.props.open_menu();\r\n        this.props.change_menu(['anchorEl',event.currentTarget])\r\n        \r\n    }\r\n    // open Dialog Information\r\n    openInfo(){\r\n        this.props.openDI('open')\r\n    }\r\n    \r\n\r\n    render() {\r\n       \r\n        \r\n\r\n        const { classes } = this.props;\r\n        //const { Drawer } = this.props;\r\n        \r\n        return (\r\n            <div className=\"grow\">\r\n                <AppBar position=\"static\" color ='primary'>     \r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            className={classes.menuButton}\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={this.openDrawer}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h4\" noWrap>IMA</Typography>\r\n                        <div className={classes.grow}/>\r\n                        <div className={classes.sectionDesktop}>\r\n                            <div className=\"icon_nav\">\r\n                                <Tooltip title=\"Información\">\r\n                                    \r\n                                    <IconButton \r\n                                        aria-label=\"show 1 new mails\" \r\n                                        color=\"inherit\"\r\n                                        onClick={this.openInfo.bind(this)}\r\n                                        >\r\n                                        <AttachFileIcon/>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                \r\n                                <IconButton disableRipple={true} aria-label=\"show 2 new notifications\" color=\"inherit\" >\r\n                                    <CloudQueueIcon/>\r\n                                </IconButton>\r\n                                <Tooltip title=\"Notificaciones\">\r\n                                    <IconButton aria-label=\"show 2 new notifications\" color=\"inherit\" >\r\n                                        <Badge badgeContent={1} color=\"secondary\">\r\n                                            <NotificationsIcon />\r\n                                        </Badge>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                \r\n                            </div>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                color=\"inherit\"\r\n                                onClick={this.openMenu.bind(this)}\r\n                            >\r\n                                <AccountCircle style={{fontSize: '35px'}}/>\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className=\"section-mobile\"></div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <MenuNav />\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Drawer: state.Drawer\r\n    };\r\n };\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        change: (text) => {dispatch(change(text))},\r\n        change_menu: (text) => {dispatch(change_menu(text))},\r\n        open: (text) => {dispatch(open_drawer(text))},\r\n        open_menu: (text) => {dispatch(open_menu(text))},\r\n        openDI: (text) => {dispatch(openDI(text))},\r\n       // change the state of authSuccess\r\n       \r\n    }\r\n}\r\nexport default withRouter(withStyles(styles)(connect(mapStateToProps,mapDispatchToProps)(Navbar)));\r\n","import React, { Component } from 'react'\r\nimport '../css/services.css';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\n//import auth from '../router/Auth'\r\nimport CardService from '../components/CardServices'\r\n//import CommentIcon from '@material-ui/icons/Comment';\r\nimport { CssBaseline, Grid} from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport Dialog from '../components/DialogService'\r\nimport DialogN from '../components/DialogNotification'\r\nimport DialogInfo from '../components/DialogInformation'\r\nimport EditService from '../components/EditService';\r\nimport Fab from '@material-ui/core/Fab';\r\n//import LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\n//import MyTheme from '../constants/MyTheme';\r\nimport Navbar from '../components/NavUser';\r\n//import SnackUser from '../components/SnackUser'\r\n//import {ThemeProvider} from '@material-ui/core/styles';\r\n\r\nimport SnackAlert from '../components/_Snacks/SnackAlert';\r\n//import store from '../store'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\n//import {load,open,openDN} from '../actions/Dialog'\r\nimport * as actions from '../_actions/Dialog';\r\n\r\n\r\n\r\n//var wtf8 = require('wtf-8');\r\n\r\nclass Services extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            message_snackAlert: 'Servicio creado correctamente'\r\n        }\r\n        this.openDialog = this.openDialog.bind(this)\r\n        // notification dialog\r\n        this.openDialogN = this.openDialogN.bind(this)\r\n    }\r\n\r\n    openDialog(){ this.props.open('dialog')}\r\n    openDialogN(){ this.props.openDN('dialog')}\r\n\r\n    componentDidMount(){ \r\n        \r\n        if (localStorage.getItem('view') === 'user'){\r\n            this.props.history.push('/forbidden')\r\n        }\r\n        this.props.openDI('open')\r\n        // carga los servicios del usuario\r\n        this.props.load('load data')\r\n    }\r\n\r\n    render(){\r\n        \r\n        const {dialog} = this.props\r\n        //const {Login} = this.props\r\n        //const {register} = this.props\r\n\r\n        //console.log(dialog['cards'])\r\n        let id_user = localStorage.getItem('id_user')\r\n        let cards = dialog['cards'].map(card =>{\r\n            if(parseInt(card.id_user) === parseInt(id_user)){\r\n                return(\r\n                <CardService key={card.id} card={card}/>        \r\n            )\r\n            }else{\r\n                return null\r\n            }\r\n        })\r\n        /*let a = store.getState().Dialog\r\n        console.log(a['cards'])*/\r\n        //<SnackUser message={register.nombre}/>\r\n\r\n        return(\r\n            <div className=\"root\">\r\n                \r\n                <Grid container component=\"main\" className=\"pater\" direction=\"row\">\r\n                    <Grid item xs={12}>\r\n                        <Navbar/>\r\n                        <CssBaseline/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={1} md={1}>\r\n                        <Container>\r\n                            <Grid container direction=\"row\" >\r\n                                <Grid item xs={6} sm={12} className=\"fab\">\r\n                                    <Tooltip title=\"Crear Servicio\">\r\n                                        <Fab color=\"secondary\" size=\"medium\"  >\r\n                                            <AddIcon onClick={this.openDialog} style={{ fontSize: 30 }}/>\r\n                                        </Fab>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Container>\r\n                        <SnackAlert message={this.state.message_snackAlert} color='#289445'/>\r\n                    </Grid>\r\n                    <Grid container  xs={12} sm={11} md={11} alignItems=\"center\"  item={true} spacing={2} className=\"cards\">\r\n                            {cards}\r\n                        <Container>\r\n                            <Dialog/>\r\n                            <DialogN/>\r\n                            <DialogInfo/>\r\n                            <EditService/>\r\n                        </Container>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n       dialog: state.Dialog,\r\n       Login : state.Login,\r\n       register: state.Register\r\n    };\r\n};\r\n/*\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n       open: (date) => {dispatch(open(date))},\r\n       openDN: (date) => {dispatch(openDN(date))},\r\n       //load: (date) => {dispatch(load(date))}\r\n    }\r\n}*/\r\nexport default withRouter(connect(mapStateToProps,/*mapDispatchToProps,*/actions)(Services));","import React, { Component } from 'react'\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\n//import InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport { RadioGroup } from '@material-ui/core';\r\n\r\n\r\n// Redux\r\nimport {connect} from 'react-redux'\r\n//import {change} from '../actions/ListRol'\r\nimport {change} from '../_actions/Register'\r\nimport {open} from '../_actions/ListRol'\r\n\r\n\r\nclass ListRol extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.changeState = this.changeState.bind(this);\r\n        this.OpenList = this.OpenList.bind(this);\r\n    }\r\n    async changeState(event){\r\n        let option = event.target.value\r\n        this.props.change(['rol',option]);\r\n        this.props.change(['validate_rol',false]);\r\n        this.setState({ text: option })\r\n        \r\n    }\r\n    \r\n    OpenList() {this.props.open('change')};\r\n\r\n    render() {\r\n        let {listRol} = this.props\r\n        return (\r\n            <div>\r\n                <List justify=\"center\">\r\n                    <ListItem button onClick={this.OpenList}>\r\n                        <ListItemIcon>\r\n                            <PersonIcon color=\"primary\" />    \r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\r\n                            this.state.text === '' ? \r\n                            \"Rol\" : \r\n                            \"Rol\" +\" : \"+this.state.text\r\n                        }\r\n                        />\r\n                        {listRol.open ? <ExpandLess /> : <ExpandMore />}\r\n                    </ListItem>\r\n                    \r\n                    <Collapse in={listRol.open} timeout=\"auto\" unmountOnExit>\r\n                        <List component=\"div\" disablePadding>\r\n                            <RadioGroup >\r\n                                <ListItem className=\"nested\">\r\n                                <FormControlLabel\r\n                                    control={<Radio onChange={this.changeState} value=\"generador\"/>}\r\n                                    label=\"Generador de Carga\"\r\n                                />\r\n                                </ListItem>\r\n                                <ListItem className=\"nested\">\r\n                                <FormControlLabel\r\n                                    control={<Radio disabled={false} onChange={this.changeState} value=\"transportador\"/>}\r\n                                    label=\"Transportador de Carga\"\r\n                                />\r\n                                </ListItem>\r\n                                <ListItem className=\"nested\">\r\n                                <FormControlLabel\r\n                                    control={<Radio disabled={true} onChange={this.changeState} value=\"operador\"/>}\r\n                                    label=\"Operador logistico\"\r\n                                />\r\n                                </ListItem>\r\n                            </RadioGroup>\r\n                        </List>\r\n                    </Collapse>\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n       listRol: state.ListRol,\r\n    };\r\n };\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n       change: (text) => {dispatch(change(text))},\r\n       open: (text) => {dispatch(open(text))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ListRol);","export const change = (option) =>{\r\n    return {\r\n        type: 'CHANGE',\r\n        payload: option\r\n    }\r\n}\r\n\r\nexport const open = (option) =>{\r\n    return {\r\n        type: 'OPEN',\r\n        payload: option\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../css/register.css';\r\n\r\nimport BackDrop from '../components/BackDrop'\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListRol from '../components/ListRol'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport SnackAlert from '../components/_Snacks/SnackAlert';\r\nimport TextEmail from '../components/_Form/TextEmail'\r\n//import TextField from '@material-ui/core/TextField';\r\nimport TextPassword from '../components/_Form/TextPassword'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\n// Redux\r\nimport {connect} from 'react-redux'\r\nimport {change,register,email_success} from '../_actions/Register'\r\n// view loading\r\nimport { openBD } from '../_actions/actions_backdrop' \r\nimport { openSnack } from '../_actions/actions_snack'\r\n\r\nclass Sign_up extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            validate: false,\r\n            success: false,\r\n            view: \"password\",\r\n            password: '',\r\n            showPassword: false,\r\n            color: '#bf6c2c',\r\n            backDrop_complete: false,\r\n            BackDrop_message: 'Registrando usuario..'\r\n        }\r\n        this.sendRequest = this.sendRequest.bind(this);\r\n    }\r\n\r\n    sendRequest(){ \r\n        \r\n        // open backdrop \r\n        this.props.openbd('back_drop')\r\n        \r\n\r\n        setTimeout(() => {  \r\n            let { Register } = this.props\r\n            this.props.email_success(Register.email,'sign_up')\r\n        }, 1000);\r\n        \r\n        setTimeout(() => {  \r\n            let { Register } = this.props\r\n            console.log(\"Register.unique ->\",Register.unique)\r\n            // verify if the email dont exist in db \r\n            if (!Register.unique){\r\n                \r\n                setTimeout(() => { \r\n                    //send request(user register)\r\n                    this.props.register() \r\n                }, 1000);\r\n\r\n                setTimeout(() => {  \r\n                    let { Register } = this.props\r\n                    console.log(\"Rsuccess: \",Register.registerSuccess)\r\n                    if (Register.registerSuccess ){ \r\n                        //console.log(\"entry true\"); \r\n                        this.setState({ backDrop_complete: true, BackDrop_message: 'Registro existoso'})\r\n                        setTimeout(() => { \r\n                            this.changeView()    \r\n                        }, 2000);\r\n                    }\r\n                    // close backdrop \r\n                    setTimeout(() => { this.props.openbd('back_drop')}, 2000);\r\n                }, 9000);\r\n            }else{\r\n                this.props.openbd('back_drop');\r\n                this.props.open_snack('snack_alert');\r\n                setTimeout(() => { this.props.open_snack('snack_alert');}, 3000);\r\n            }\r\n        }, 7000);\r\n    }\r\n\r\n    changeView(){ this.props.history.push('/log_in')}\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <Grid container component=\"main\" className=\"root\">\r\n                <CssBaseline />\r\n                <Grid item xs={false} sm={6} md={6} className=\"image\"/>\r\n                <Grid item xs={12} sm={6} md={6} component={Paper} elevation={5} square>\r\n                    <div className=\"paper\">\r\n                        <div className=\"Avatar\">\r\n                            <Fab color=\"primary\" size={'large'} >\r\n                                <PersonAddIcon/>\r\n                            </Fab>\r\n                        </div>\r\n                        <div className=\"title\">\r\n                            <Typography component=\"h5\" variant=\"h5\" className=\"title\"> Registro</Typography>\r\n                        </div>\r\n                        \r\n                        <form className=\"form\" noValidate>\r\n                            <Grid container item spacing={2} xs={12} justify=\"center\">\r\n                                \r\n                                <BackDrop message={this.state.BackDrop_message} complete={this.state.backDrop_complete}/>\r\n                                <SnackAlert message=\"Correo electrónico en uso\"/>\r\n\r\n                                <Grid container direction=\"row\" spacing={1} justify=\"center\">\r\n                                    <Grid item xs={10} sm={9}>\r\n                                        <TextEmail id=\"nombre\" label=\"Nombre empresa\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={10} sm={9} >\r\n                                        <TextEmail id=\"email\" label=\"Correo electrónico\" view=\"sign_up\"/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                \r\n                                <Grid item xs={10} sm={9} className=\"text_password\"></Grid>\r\n\r\n                                <Grid container direction=\"row\" spacing={1}>\r\n                                    <Grid item xs={1} sm={1}></Grid>\r\n                                    <Grid item xs={4} sm={5} className=\"password\" >\r\n                                        <TextPassword label=\"contraseña\" width={78} id=\"password\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={4} sm={5} className=\"password\" >\r\n                                        <TextPassword label=\"confirmación\" width={88} id=\"confirm\"/>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={10} sm={9} className=\"text_password\">\r\n                                    Utiliza ocho caracteres como mínimo con una \r\n                                    combinación de letras, números y símbolos.\r\n                                </Grid>\r\n                                <Grid item xs={10} sm={5}>\r\n                                    <TextEmail id=\"nit\" label=\"Nit empresa\"/>\r\n                                </Grid>\r\n                                <Grid item xs={10} sm={5} >\r\n                                    <div className=\"list_signup\">\r\n                                        <ListRol />\r\n                                    </div>\r\n                                </Grid>\r\n                                \r\n                                <Grid container spacing={3} direction=\"row\" justify=\"center\" className=\"submit_signup\">\r\n                                    <Grid item xs={6} sm={4} className=\"submit\">\r\n                                        <Button\r\n                                            fullWidth\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className=\"submit\"\r\n                                            onClick={this.sendRequest}>\r\n                                            Registrar usuario\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} sm={6} className=\"submit\">\r\n                                        <Button\r\n                                            fullWidth\r\n                                            variant=\"outlined\"\r\n                                            color=\"secondary\"\r\n                                            className=\"submit\"\r\n                                            onClick={this.changeView.bind(this)}>\r\n                                            prefiero iniciar sesión\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Register: state.Register\r\n    };\r\n};\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n       change: (text) => {dispatch(change(text))},\r\n       // Register an user\r\n       register: (text) => {dispatch(register(text))},\r\n       email_success: (text) => {dispatch(email_success(text))},\r\n       openbd: (text) => {dispatch(openBD(text))},\r\n       open_snack: (text) => {dispatch(openSnack(text))},\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Sign_up));","//import auth from '../router/Auth'\nimport React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\n\n//import store from '../store'\n\n\nexport const ProtectedRoute = ({component: Component, ...rest}) => {\n    return(\n        <Route {...rest} \n            render={(props) => {\n                \n                //let state = store.getState().Login\n                let auth = localStorage.getItem('auth')\n                //console.log(\"protectedR using redux: \",auth.isAuth())\n                console.log(\"protectedRoute, localStorage \",localStorage.getItem('auth'))\n                if(auth){\n                    return <Component {...props}/>\n                }else{\n                    return <Redirect to={\n                        {\n                            pathname: \"/\",\n                            state: {\n                                from: props.location\n                            }\n                        }\n                        \n                    }/>\n                }\n            }\n        }/>\n    )\n}","import React, { Component } from 'react'\nimport '../css/user.css';\n\n//import { CssBaseline, Grid} from '@material-ui/core';\nimport AirplanemodeActiveIcon from '@material-ui/icons/AirplanemodeActive';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport DirectionsBoatIcon from '@material-ui/icons/DirectionsBoat';\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\nimport Divider from '@material-ui/core/Divider';\nimport Fab from '@material-ui/core/Fab';\nimport {Grid} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton'\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport ListCities from '../components/ListCities'\nimport SearchIcon from '@material-ui/icons/Search';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TrainIcon from '@material-ui/icons/Train';\n\nimport {connect} from 'react-redux'\nimport {open_drawer} from '../_actions/Drawer'\nimport {change_dialog} from '../_actions/Dialog'\n\n//import Navbar from '../components/NavUser'\n\n\nclass DrawerUser extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            \n        }\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleClose(){\n        this.props.open('drawer')\n    }\n    changeValues(){\n        let origin = this.props.dialog.origin\n        let destination = this.props.dialog.destination\n        this.props.change_dialog([\"Origen\",destination]);\n        this.props.change_dialog([\"Destino\",origin]);\n        //console.log( this.props.dialog.origin,this.props.dialog.destination)\n    }\n\n    render(){\n        const {dialog} = this.props\n        return(\n            <div>\n                <Grid container direction=\"row\">\n                    <Grid item xs={3} md={3} className=\"drawerHeader\">\n                        <IconButton className=\"button\" onClick={this.handleDrawerOpen}>\n                            <TrainIcon style={{fontSize: '30px'}} color={'secondary'} />\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={3} md={3} className=\"drawerHeader\">\n                        <IconButton  className=\"button\" onClick={this.handleDrawerOpen} disabled={true}>\n                            <DirectionsBoatIcon color={'inherit'} />\n                        </IconButton>\n                    </Grid>\n                    \n                    <Grid item xs={3} md={3} className=\"drawerHeader\">\n                        <IconButton className=\"button\" onClick={this.handleDrawerOpen} disabled={true}>\n                            <AirplanemodeActiveIcon color={'inherit'}/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={3} md={3} className=\"drawerHeader\">\n                        <IconButton className=\"button\" onClick={this.handleDrawerOpen} disabled={true}>\n                            <DirectionsBusIcon color={'inherit'}/>\n                        </IconButton>\n                    </Grid>\n                </Grid>\n\n                <Grid container spacing={4} justify=\"center\" alignItems=\"center\" className='drawerH'>\n\n                    <Grid  item xs={5} md={5} align=\"center\">\n                        <ListCities type=\"Origen\" color=\"#81ABFF\"/>\n                    </Grid>\n                    <Grid item xs={5} md={5} align=\"center\">\n                        <ListCities type=\"Destino\" color=\"#81ABFF\"/>\n                    </Grid>\n\n                    <Grid item xs={3} md={3} align=\"center\">\n                        \n                        <Tooltip title=\"Cambiar valores\">\n                            <Fab color=\"secondary\" size={'small'}>\n                                <ImportExportIcon onClick={this.changeValues.bind(this)}/> \n                            </Fab>\n                        </Tooltip>\n                    </Grid>\n                    <Grid item xs={3} md={3} align=\"center\">\n                        <Tooltip title=\"Buscar\">\n                            <Fab color=\"secondary\" size={'large'} disabled={true}>\n                                <SearchIcon  style={{fontSize: '35px'}}/> \n                            </Fab>\n                        </Tooltip>\n                    </Grid>\n                    <Grid item xs={3} md={3} align=\"center\">\n                        <Tooltip title=\"Cerrar drawer\">\n                            <Fab color=\"secondary\" size={'small'}>\n                                    <ChevronLeftIcon onClick={this.handleClose}/>\n                                </Fab>\n                        </Tooltip>\n                    </Grid>\n\n                </Grid>\n                <Divider/>\n                <Grid item md={12}>\n                    {this.props.cards}\n                </Grid>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        Drawer: state.Drawer,\n        dialog: state.Dialog\n    };\n };\n \nconst mapDispatchToProps = (dispatch) => {\n    return{\n       open: (text) => {dispatch(open_drawer(text))},\n       change_dialog: (value) => {dispatch(change_dialog(value))},\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(DrawerUser);","import React, { Component } from 'react'\nimport '../css/dialog.css'; \n\n//import Button from '@material-ui/core/Button';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Fab from '@material-ui/core/Fab';\nimport { Grid } from '@material-ui/core';\n\nimport SendIcon from '@material-ui/icons/Send';\nimport TextField from '@material-ui/core/TextField';\n\nimport {connect} from 'react-redux'\nimport {changer,openr} from '../_actions/Request'\n\nclass DialogRequest extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            \n        }\n        \n        this.SendRequest = this.SendRequest.bind(this);\n        this.changeState = this.changeState.bind(this);\n    }\n\n    \n    async changeState(event){\n        const target = event.target.id;\n        const value = event.target.value;\n        this.props.changer([target,value])\n    }\n\n    async SendRequest(){this.props.openr('close request')}\n    render(){\n        \n        const { request } = this.props;\n        \n\n        //const id = this.state.open ? 'simple-popover' : undefined;\n        return(\n            <Dialog open={request.open}>\n                <DialogTitle >\n                    <Grid container direction={\"row\"}>\n                    <Grid item xs={10} md= {10} sm={10}>{\"Solicitar reserva\"}</Grid>\n                    <Grid item xs={2} md={2} sm={2} align=\"right\">\n                        <CancelIcon onClick={this.SendRequest}/>\n                    </Grid>\n                    </Grid>\n                </DialogTitle>\n                <DialogContent>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"title\"\n                        label=\"Titulo\"\n                        autoFocus\n                        onChange={this.changeState}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"body\"\n                        label=\"Cuerpo\"\n                        autoFocus\n                        onChange={this.changeState}\n                    />\n                    \n                    <DialogActions>\n                        <Fab color=\"secondary\" size={'small'} className=\"fab\">\n                           <SendIcon onClick={this.SendRequest}/>\n                        </Fab>\n                    </DialogActions>\n                </DialogContent>\n            </Dialog>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       request: state.Request\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n       //change: (date) => {dispatch(change(date))},\n       openr: (date) => {dispatch(openr(date))},\n       changer: (date) => {dispatch(changer(date))},\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(DialogRequest);","import React, { Component } from 'react'\nimport '../css/listInfo.css'\n\nimport Collapse from '@material-ui/core/Collapse';\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\nimport DialogRequest from './DialogRequest'\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport Fab from '@material-ui/core/Fab';\nimport { Grid } from '@material-ui/core';\nimport GroupIcon from '@material-ui/icons/Group';\n//import LabelIcon from '@material-ui/icons/Label';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n//import MessageIcon from '@material-ui/icons/Message';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Train from './Train'\nimport TrainIcon from '@material-ui/icons/Train';\n\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport { withRouter } from 'react-router-dom';\n//import * as actions from '../actions/Login';\nimport {load} from '../_actions/Login';\n\n// open request generated by user\nimport {openr} from '../_actions/Request';\n// open Train \nimport {opent} from '../_actions/Train';\n\n// Redux\nimport {connect} from 'react-redux'\n\n\n//var wtf8 = require('wtf-8');\n\n\n\nclass ListInfo extends Component {\n   \n   constructor(props){\n        super(props);\n        this.state = {\n            SetOpen: false,\n            open: false,\n            info:[\n                {\n                'id': 1,\n                'nombre': 'Pepito Perez',\n                'rol': 'Transportador',  \n                'Servicio': 'otra cosa'\n                },\n                {\n                'id': 2,\n                'nombre': 'juan Perez',\n                'rol': 'Transportador',  \n                'Servicio': 'otra cosa x2'\n                }\n            ],\n            capacity: 120,\n            places: 10\n            \n         \n        }\n        this.handleClick = this.handleClick.bind(this)\n        this.updateTrain = this.updateTrain.bind(this)\n        this.OpenRequest = this.OpenRequest.bind(this)\n        this.openTrain = this.openTrain.bind(this)\n      \n      \n   }\n   // Origin \n    handleClick(){\n        localStorage.setItem('type', 'Origin');\n        this.setState({\n            setOpen: !this.state.open,\n            open: !this.state.setOpen\n        })\n    }\n    componentDidMount(){this.props.load('hallo')}\n    openTrain(){this.props.opent('open train')}\n    updateTrain(value){\n        //console.log(\"value: \",value)\n        //this.props.change(value)\n    }\n\n\n    /*componentWillMount() {\n      //this.props.change([this.state.capacity,this.state.places])   \n    }*/\n    async OpenRequest(){\n        //temṕoral arreglar luego\n        this.props.openr('open request')\n    }\n   \n    render(){\n        \n\n        const { dialog } = this.props;\n        const { login } = this.props\n        //console.log('login in listinfo:',login)\n\n        let serv = []\n        //console.log(dialog)\n        dialog.cards.map(option => {\n            serv.push([option.id,option.title,option.date_start ,option.date_end])\n            return(<div></div>)\n        })\n\n        let info = login.users.map(option => {\n            \n            /*let id_user = parseInt(this.props.alternative.array_id.split(',')[option.id-1])\n            let id_service = parseInt(this.props.alternative.array_services.split(',')[option.id-1])*/\n            let id_user = this.props.id_user\n            let id_service = this.props.id\n        \n            let any = dialog.cards.map(service =>{\n                if (option.id === id_user && service.id === id_service){\n                    //console.log(\"trans: \",service.transport)\n                    return(\n                        <div className=\"div-list\">\n                            <List component=\"div\" disablePadding key={option.id}>\n                                <ListItem selected={true} >\n                                    <Grid container direction={\"row\"}>\n                                        <Grid item xs={2} md={2}><GroupIcon color=\"primary\"/></Grid>\n                                        <Grid item xs={8} md={8}>\n                                            <b>Información del transportador</b>\n                                        </Grid>\n                                        <Grid item xs={2} md={2} align=\"right\">\n                                            \n                                            <Tooltip title=\"usuario verificado\">\n                                                <VerifiedUserIcon color=\"secondary\"/>\n                                            </Tooltip>\n                                        </Grid>\n                                    </Grid>\n                                </ListItem>\n\n                                <ListItem selected={true} >\n                                    <Grid container direction={\"row\"}>\n                                        <Grid item xs={3} md={3}>\n                                            <b>Nombre transportador</b>\n                                        </Grid>\n                                        <Grid item xs={9} md={9} align=\"center\">\n                                            {option.nameE}\n                                        </Grid>\n                                    </Grid>\n                                </ListItem>\n\n                                <ListItem selected={true} >\n                                    <Grid container direction={\"row\"}>\n                                        <Grid item xs={3} md={3}>\n                                            <b>Correo electrónico</b>\n                                        </Grid>\n                                        <Grid item xs={9} md={9} align=\"center\">\n                                            {option.email}\n                                        </Grid>\n                                    </Grid>\n                                </ListItem>\n\n                                <ListItem selected={false} >\n                                    <Grid container direction={\"row\"}>\n                                        <Grid item xs={2} md={2}><EmojiObjectsIcon color=\"primary\"/></Grid>\n                                        <Grid item xs={8} md={8}>\n                                            <b>Información del servicio</b>\n                                        </Grid>\n                                        <Grid item xs={2} md={2} align=\"right\">\n                                            <Tooltip title=\"servicio verificado\">\n                                                <VerifiedUserIcon color=\"secondary\"/>\n                                            </Tooltip>\n                                        </Grid>\n                                    </Grid>\n                                </ListItem>\n\n                                <ListItem>\n                                    <Grid item xs={3} md={3}>\n                                        <b>Nombre del servicio</b>\n                                    </Grid>\n                                    <Grid item xs={8} md={8} align=\"center\">{service.title}</Grid>\n                                    <Grid item xs={1} md={1} align=\"center\">\n                                        {service.transport === 'terrestre' ? \n                                            <DirectionsBusIcon/> : \n                                            <Tooltip title=\"Visualizar tren\">\n                                                <Fab color=\"primary\" size={'small'} align={\"left\"}>\n                                                    <TrainIcon onClick={this.openTrain}/>\n                                                </Fab>    \n                                            </Tooltip>\n                                        }\n                                        <Train \n                                            capacity={service.capacity} \n                                            places={service.places} \n                                            name={service.title}/>\n                                    </Grid>\n                                </ListItem>\n\n                                <ListItem>\n                                    <Grid item xs={3} md={3} align=\"left\">Ciudad origen</Grid>\n                                    <Grid item xs={9} md={9} align=\"center\">{service.origin}</Grid>\n                                </ListItem>\n                                <ListItem>\n                                    <Grid item xs={3} md={3} align=\"left\">Hora y fecha salida</Grid>\n                                    <Grid item xs={9} md={9} align=\"center\">{service.date_start.slice(0,21)}</Grid>\n                                </ListItem>\n\n                                <ListItem>\n                                    <Grid item xs={3} md={3} align=\"left\">Ciudad destino</Grid>\n                                    <Grid item xs={9} md={9} align=\"center\">{service.destination}</Grid>\n                                </ListItem>\n                                \n                                <ListItem>\n                                    <Grid item xs={3} md={3} align=\"left\">Hora y fecha llegada</Grid>\n                                    <Grid item xs={9} md={9} align=\"center\">{service.date_end.slice(0,21)}</Grid>\n                                </ListItem>\n                                \n                                \n                            </List>\n                        </div>\n                        \n                    )\n                }else{return(<p></p>)}\n         })\n         return any\n      })\n      //console.log(\"classe of list-->> \",listCities)\n      //this.props.openList('hallo')\n      return(\n         <List justify=\"center\" color={'black'}>\n            <ListItem button onClick={this.handleClick}>\n               <ListItemText primary={this.props.type}/>\n               {this.state.open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n                {info}\n               <DialogRequest/>\n            </Collapse>\n            \n         </List>\n         \n      )\n   }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        dialog: state.Dialog,\n        login: state.Login,\n        request: state.Request\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        openr: (option) => {dispatch(openr(option))},\n        opent: (option) => {dispatch(opent(option))},\n        load: (option) => {dispatch(load(option))},\n        // change: (option) => {dispatch(change(option))},\n    }\n}\n\nexport default withRouter((connect(mapStateToProps,mapDispatchToProps,/*actions*/)(ListInfo)));","import React,{Component}   from 'react';\nimport '../css/snackbar.css'; \n\n\nimport Slide from '@material-ui/core/Slide';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n \n\n\nclass SnackUser extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            vertical: 'bottom',\n            horizontal: 'left',\n            open: true\n        }\n    }\n    \n    handleClose(){ this.setState({ open: false })}\n    SlideTransition(props) {\n        return <Slide {...props} direction=\"right\" />;\n    }\n    \n    render(){\n        return(\n            <div>\n                <Snackbar\n                    anchorOrigin={{vertical: this.state.vertical,horizontal: this.state.horizontal}}\n                    key={`${this.state.vertical},${this.state.horizontal}`}\n                    open={this.state.open}\n                    autoHideDuration={4000}\n                    TransitionComponent={this.SlideTransition.bind(this)}\n                    onClose={this.handleClose.bind(this)}\n                >\n                    <SnackbarContent style={{ backgroundColor: this.props.color}}\n                        message={\n                            <div className=\"message_snack\">\n                                <span id=\"client-snackbar\">Bienvenido</span>\n                                <span className=\"user_snack\">{this.props.message}</span>\n                            </div>\n                            \n                        }\n                    />\n                </Snackbar>\n            </div>\n        );\n    }\n}\n \n \nexport default SnackUser ;","import React, { Component } from 'react'\nimport '../css/user.css';\n\n//import auth from '../router/Auth'\nimport Card from '@material-ui/core/Card';\n//import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { CssBaseline, Grid} from '@material-ui/core';\nimport DialogInfo from '../components/DialogInformation'\nimport Drawer from '@material-ui/core/Drawer';\nimport DrawerUser from '../components/DrawerUser';\nimport ListInfo from '../components/ListInfo'\nimport Navbar from '../components/NavUser'\nimport SnackUser from '../components/SnackUser'\nimport store from '../store'\nimport Typography from '@material-ui/core/Typography'\nimport { withRouter } from 'react-router-dom';\n\nimport {connect} from 'react-redux'\nimport {open_drawer,loadA} from '../_actions/Drawer';\nimport {openDI} from '../_actions/Dialog';\n\n//var wtf8 = require('wtf-8');\n\nclass User extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            alter:[{\n                origin: 'dorada',\n                destination: 'santa marta',\n                duration: '722 km',\n                array_id: '1',\n                array_services: '13'\n            },\n            {\n                origin: 'bogotá',\n                destination: 'santa marta',\n                duration: '722 km',\n                array_id: '1,2',\n                array_services: '1,2'\n            },\n            {\n                origin: 'bogotá',\n                destination:'dorada',\n                duration: '104 km',\n                array_id: '1',\n                array_services: '1'\n            }]\n        }\n    }\n\n    componentDidMount(){ \n        if (localStorage.getItem('view') === 'services'){\n            this.props.history.push('/forbidden')\n        }\n        this.props.openDI('open')\n        this.props.loadA('load data')  \n    }\n\n    render(){\n        \n        // use to load alternatives\n        const {drawer} = this.props\n\n        // use to load services\n        const {dialog} = this.props\n        // use to load users\n        const {register} = this.props\n        \n        \n        //let cards = drawer.alternatives.map(card =>{\n        let cards = dialog.cards.map(card =>{\n            //console.log(dialog.origin ,\"+ >\", card.origin)\n            //console.log(dialog.destination ,\"+ <\", card.destination)\n            if(dialog.origin === card.origin && dialog.destination === card.destination){\n                return(\n                    <Card key={card.id}>\n                        <CardContent>\n                            <Grid container direction=\"row\" >\n                                <Grid item xs={9} md={9} align=\"left\" className=\"cardUser_text\">\n                                    <b>{card.title.toUpperCase()}</b>\n                                </Grid>\n                                <Grid item xs={3} md={3} align=\"right\">\n                                    <Typography gutterBottom  color=\"primary\" component=\"h4\">\n                                    {24 * (parseInt(card.date_end.slice(8,10))-parseInt(card.date_start.slice(8,10)))+ ' horas'} \n                                    </Typography>\n                                </Grid>\n    \n                                <Grid item xs={8} md={8} align=\"left\" className=\"cardUser_text\">\n                                    <p>\n                                    A continuación encontrara información detallada del servicio\n                                    asi como los datos del transportador\n                                    </p>\n                                </Grid>\n                                <Grid item xs={4} md={4} align=\"right\">\n                                    843 km\n                                </Grid>\n                                <Grid item xs={12} md={12}>\n                                    <ListInfo type=\"Detalles\" id={card.id} id_user={card.id_user}/>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>    \n                )   \n            }\n            else{return(<div></div>)}\n        })\n\n        return(\n            <div className=\"root\">\n                <Grid container component=\"main\" className=\"pater\" direction=\"row\">\n                    <Grid item xs={12}>\n                        <Navbar/>\n                        <CssBaseline/>\n                    </Grid>\n                    <Grid item xs={12}></Grid>\n                        <Drawer\n                            className=\"drawer\"\n                            variant=\"persistent\"\n                            anchor=\"left\"\n                            open={store.getState().Drawer.open}\n                            classes={{paper: \"drawerPaper\"}}\n                        ><DrawerUser cards={cards}/>\n                        <DialogInfo/>\n                    </Drawer>\n                    <SnackUser message={register.nombre}/>\n                </Grid>\n                    \n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        drawer: state.Drawer,\n        dialog: state.Dialog,\n        register: state.Register\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        loadA: (text) => {dispatch(loadA(text))},\n        open_drawer: (text) => {dispatch(open_drawer(text))},\n        openDI: (text) => {dispatch(openDI(text))},\n       \n\n    }\n}\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(User))","import React from 'react'\r\n\r\n//import Admin from '../views/Admin/Admin'\r\n\r\nimport Forbidden from '../views/Forbidden'\r\n//import Home from '../views/Home'\r\nimport Log_in from '../views/Log_in'\r\n\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Services from '../views/Services'\r\nimport Sign_up from '../views/Sign_up'\r\nimport { ProtectedRoute } from './ProtectedRoute'\r\n\r\nimport User from '../views/User'\r\n\r\n\r\n\r\nexport default (props) => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={Log_in}/>\r\n        <Route exact path=\"/sign_up\" component={Sign_up}/>\r\n        <Route exact path=\"/log_in\" component={Log_in}/>\r\n        <ProtectedRoute exact path=\"/forbidden\" component={Forbidden}/>\r\n        <ProtectedRoute  exact path=\"/services\" component={Services}/>\r\n        <ProtectedRoute exact path=\"/user\" component={User}/>\r\n    </Switch>\r\n)\r\n\r\n//<ProtectedRoute exact path=\"/admin_home\" component={Admin}/>","import React, { Component } from 'react';\n//import logo from '../logo.svg';\nimport '../css/App.css';\nimport Routes from '../router/routes'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: { secondary: {main: '#81ABFF'}, primary: {main: '#0749e6'}},\n  typography: { fontFamily: [ 'Lato', 'sans-serif'].join(',')}\n});\n\nclass App extends Component {\n\n    state = { loaded: false }\n\n    componentDidMount(){\n        this.setState({ loaded: true });\n    }\n    render() {\n        return (\n            <div>\n                <MuiThemeProvider theme={theme}> <Routes/> </MuiThemeProvider>\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './css/index.css';\n\nimport App from './components/App';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n// Redux\nimport {Provider} from 'react-redux'\nimport store from './store'\n\n\n\nconst Root = (\n    <Provider store={store}>\n      <BrowserRouter>\n         <App/>\n      </BrowserRouter>\n   </Provider>\n )\n \nReactDOM.render(Root, document.getElementById('root'));\nserviceWorker.unregister();\n\n"],"sourceRoot":""}